
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = "\x88J\x99\xee\xa0\xe6}\xbb\xf2f\t\x02\xbe\xb1\xd1'"
    
_lr_action_items = {'COUNT':([42,],[66,]),'YELLOW':([32,34,35,36,38,39,40,63,64,88,89,90,91,92,150,],[-97,-76,-96,-98,-103,-99,-95,97,-74,-75,-70,-72,-71,-73,97,]),'DOWN':([49,50,],[82,82,]),'REPLAY':([1,4,9,10,11,13,15,23,24,25,26,28,29,30,48,68,72,104,110,123,126,127,128,129,140,149,157,158,160,161,163,165,166,169,175,176,177,178,179,181,185,188,],[6,-8,-11,-10,-94,-12,-16,-7,-15,-14,-93,-13,6,-9,-54,-45,-42,-49,-26,-38,-19,6,-17,-53,-28,-56,6,-34,-32,-57,-46,-48,-27,-103,-33,-47,-55,-102,-41,-18,-39,-40,]),'GREEN':([32,34,35,36,38,39,40,63,64,88,89,90,91,92,150,],[-97,-76,-96,-98,-103,-99,-95,96,-74,-75,-70,-72,-71,-73,96,]),'CYAN':([32,34,35,36,38,39,40,63,64,88,89,90,91,92,150,],[-97,-76,-96,-98,-103,-99,-95,98,-74,-75,-70,-72,-71,-73,98,]),'OVAL':([1,4,9,10,11,13,15,23,24,25,26,28,29,30,48,65,68,72,103,104,110,123,126,127,128,129,140,149,157,158,160,161,163,165,166,169,175,176,177,178,179,181,185,188,],[5,-8,-11,-10,-94,-12,-16,-7,-15,-14,-93,-13,5,-9,-54,5,-45,-42,5,-49,-26,-38,-19,5,-17,-53,-28,-56,5,-34,-32,-57,-46,-48,-27,-103,-33,-47,-55,-102,-41,-18,-39,-40,]),'OFF':([17,],[49,]),'TRUE':([3,5,12,16,20,27,32,33,34,35,36,37,38,39,40,52,53,59,60,61,62,64,69,71,73,74,76,78,79,80,81,82,83,84,88,89,90,91,92,105,115,116,117,120,136,143,],[36,-77,-78,36,-79,-80,-97,36,-76,-96,-98,36,-103,-99,-95,36,36,36,36,36,36,-74,36,36,36,36,36,36,-84,36,-81,-82,-83,36,-75,-70,-72,-71,-73,36,36,36,36,36,36,36,]),'RED':([32,34,35,36,38,39,40,63,64,88,89,90,91,92,150,],[-97,-76,-96,-98,-103,-99,-95,101,-74,-75,-70,-72,-71,-73,101,]),'#':([1,4,9,10,11,13,15,23,24,25,26,28,29,30,31,48,68,72,104,110,123,126,127,128,129,140,149,157,158,160,161,163,165,166,169,175,176,177,178,179,181,185,188,],[8,-8,-11,-10,-94,-12,-16,-7,-15,-14,-93,-13,8,-9,57,-54,-45,-42,-49,-26,-38,-19,8,-17,-53,-28,-56,8,-34,-32,-57,-46,-48,-27,-103,-33,-47,-55,-102,-41,-18,-39,-40,]),']':([32,34,35,36,38,39,40,48,64,88,89,90,91,92,102,103,106,107,129,131,132,133,137,138,149,164,177,],[-97,-76,-96,-98,-103,-99,-95,-54,-74,-75,-70,-72,-71,-73,130,-103,135,-103,-53,-59,-58,-60,-50,-52,-56,-51,-55,]),')':([32,34,35,36,38,39,40,46,58,64,71,77,86,88,89,90,91,92,108,111,112,113,114,118,119,134,142,144,145,146,147,148,152,167,171,182,184,187,],[-97,-76,-96,-98,-103,-99,-95,-103,88,-74,109,-69,124,-75,-70,-72,-71,-73,139,141,-103,-67,-66,-68,-65,162,-29,-31,-63,-62,-61,-64,170,-30,-103,-20,-22,-21,]),'(':([3,5,12,16,20,22,27,32,33,34,35,36,37,38,39,40,43,52,53,59,60,61,62,64,67,69,70,71,73,74,76,78,79,80,81,82,83,84,87,88,89,90,91,92,115,116,117,120,136,143,],[33,-77,-78,33,-79,53,-80,-97,33,-76,-96,-98,33,-103,-99,-95,71,33,33,33,33,33,33,-74,105,33,108,33,33,33,33,33,-84,33,-81,-82,-83,33,125,-75,-70,-72,-71,-73,33,33,33,33,33,33,]),'+':([32,34,35,36,37,38,39,40,46,63,64,88,89,90,91,92,107,113,114,118,119,121,122,145,146,147,148,],[-97,-76,-96,-98,59,-103,-99,-95,59,59,-74,-75,-70,-72,-71,-73,59,59,59,59,59,59,59,59,59,59,59,]),'*':([32,34,35,36,37,38,39,40,46,63,64,88,89,90,91,92,107,113,114,118,119,121,122,145,146,147,148,],[-97,-76,-96,-98,60,-103,-99,-95,60,60,-74,-75,60,-72,60,-73,60,60,60,60,60,60,60,60,60,60,60,]),'-':([32,34,35,36,37,38,39,40,46,63,64,88,89,90,91,92,107,113,114,118,119,121,122,145,146,147,148,],[-97,-76,-96,-98,61,-103,-99,-95,61,61,-74,-75,-70,-72,-71,-73,61,61,61,61,61,61,61,61,61,61,61,]),',':([32,34,35,36,38,39,40,46,64,77,88,89,90,91,92,107,112,113,114,118,119,145,146,147,148,171,],[-97,-76,-96,-98,-103,-99,-95,-103,-74,-69,-75,-70,-72,-71,-73,136,143,-67,-66,-68,-65,-63,-62,-61,-64,183,]),'/':([32,34,35,36,37,38,39,40,46,63,64,88,89,90,91,92,107,113,114,118,119,121,122,145,146,147,148,],[-97,-76,-96,-98,62,-103,-99,-95,62,62,-74,-75,62,-72,62,-73,62,62,62,62,62,62,62,62,62,62,62,]),'PIPE':([1,4,9,10,11,13,15,23,24,25,26,28,29,30,48,68,72,104,110,123,126,127,128,129,140,149,157,158,160,161,163,165,166,169,175,176,177,178,179,181,185,188,],[7,-8,-11,-10,-94,-12,-16,-7,-15,-14,-93,-13,7,-9,-54,-45,-42,-49,-26,-38,-19,7,-17,-53,-28,-56,7,-34,-32,-57,-46,-48,-27,-103,-33,-47,-55,-102,-41,-18,-39,-40,]),'INIT':([0,],[1,]),'ORANGE':([32,34,35,36,38,39,40,63,64,88,89,90,91,92,150,],[-97,-76,-96,-98,-103,-99,-95,99,-74,-75,-70,-72,-71,-73,99,]),';':([32,34,35,36,38,39,40,44,45,46,47,64,66,77,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,109,113,114,118,119,121,130,135,139,141,145,146,147,148,162,168,],[-97,-76,-96,-98,-103,-99,-95,72,-44,-103,-43,-74,104,-69,123,-75,-70,-72,-71,-73,-87,129,-91,-88,-86,-92,-90,-89,-85,140,-67,-66,-68,-65,149,161,163,165,166,-63,-62,-61,-64,176,177,]),'=':([21,32,34,35,36,38,39,40,46,64,74,75,78,88,89,90,91,92,],[52,-97,-76,-96,-98,-103,-99,-95,75,-74,115,117,120,-75,-70,-72,-71,-73,]),'<':([32,34,35,36,38,39,40,46,64,88,89,90,91,92,],[-97,-76,-96,-98,-103,-99,-95,74,-74,-75,-70,-72,-71,-73,]),'$end':([2,14,18,51,],[0,-3,-1,-2,]),'CTE_STRING':([16,],[45,]),'AND':([32,34,35,36,38,39,40,46,64,88,89,90,91,92,],[-97,-76,-96,-98,-103,-99,-95,73,-74,-75,-70,-72,-71,-73,]),'TRIO':([1,4,9,10,11,13,15,23,24,25,26,28,29,30,48,65,68,72,103,104,110,123,126,127,128,129,140,149,157,158,160,161,163,165,166,169,175,176,177,178,179,181,185,188,],[12,-8,-11,-10,-94,-12,-16,-7,-15,-14,-93,-13,12,-9,-54,12,-45,-42,12,-49,-26,-38,-19,12,-17,-53,-28,-56,12,-34,-32,-57,-46,-48,-27,-103,-33,-47,-55,-102,-41,-18,-39,-40,]),'END':([1,4,9,10,11,13,15,19,23,24,25,26,28,29,30,48,54,55,56,68,72,104,110,123,126,128,129,140,149,158,160,161,163,165,166,169,175,176,177,178,179,181,185,188,],[14,-8,-11,-10,-94,-12,-16,51,-7,-15,-14,-93,-13,-103,-9,-54,-6,-5,-4,-45,-42,-49,-26,-38,-19,-17,-53,-28,-56,-34,-32,-57,-46,-48,-27,-103,-33,-47,-55,-102,-41,-18,-39,-40,]),'CLEAR':([1,4,9,10,11,13,15,23,24,25,26,28,29,30,48,68,72,104,110,123,126,127,128,129,140,149,157,158,160,161,163,165,166,169,175,176,177,178,179,181,185,188,],[11,-8,-11,-10,-94,-12,-16,-7,-15,-14,-93,-13,11,-9,-54,-45,-42,-49,-26,-38,-19,11,-17,-53,-28,-56,11,-34,-32,-57,-46,-48,-27,-103,-33,-47,-55,-102,-41,-18,-39,-40,]),'ECHO':([1,4,9,10,11,13,15,23,24,25,26,28,29,30,48,68,72,104,110,123,126,127,128,129,140,149,157,158,160,161,163,165,166,169,175,176,177,178,179,181,185,188,],[16,-8,-11,-10,-94,-12,-16,-7,-15,-14,-93,-13,16,-9,-54,-45,-42,-49,-26,-38,-19,16,-17,-53,-28,-56,16,-34,-32,-57,-46,-48,-27,-103,-33,-47,-55,-102,-41,-18,-39,-40,]),'SAMPLE':([1,4,9,10,11,13,15,23,24,25,26,28,29,30,48,65,68,72,103,104,110,123,126,127,128,129,140,149,157,158,160,161,163,165,166,169,175,176,177,178,179,181,185,188,],[17,-8,-11,-10,-94,-12,-16,-7,-15,-14,-93,-13,17,-9,-54,17,-45,-42,17,-49,-26,-38,-19,17,-17,-53,-28,-56,17,-34,-32,-57,-46,-48,-27,-103,-33,-47,-55,-102,-41,-18,-39,-40,]),'CTE_INTEGER':([3,5,6,12,16,20,27,32,33,34,35,36,37,38,39,40,52,53,59,60,61,62,64,69,71,73,74,76,78,79,80,81,82,83,84,88,89,90,91,92,105,115,116,117,120,122,136,143,],[35,-77,41,-78,35,-79,-80,-97,35,-76,-96,-98,35,-103,-99,-95,35,35,35,35,35,35,-74,35,35,35,35,35,35,-84,35,-81,-82,-83,35,-75,-70,-72,-71,-73,35,35,35,35,35,150,35,35,]),'IN':([42,],[67,]),'QUAD':([1,4,9,10,11,13,15,23,24,25,26,28,29,30,48,65,68,72,103,104,110,123,126,127,128,129,140,149,157,158,160,161,163,165,166,169,175,176,177,178,179,181,185,188,],[20,-8,-11,-10,-94,-12,-16,-7,-15,-14,-93,-13,20,-9,-54,20,-45,-42,20,-49,-26,-38,-19,20,-17,-53,-28,-56,20,-34,-32,-57,-46,-48,-27,-103,-33,-47,-55,-102,-41,-18,-39,-40,]),'[':([41,42,],[65,69,]),'ELSE':([158,160,169,175,],[-34,-32,180,-33,]),'WHERE':([1,4,9,10,11,13,15,23,24,25,26,28,29,30,48,68,72,104,110,123,126,127,128,129,140,149,157,158,160,161,163,165,166,169,175,176,177,178,179,181,185,188,],[26,-8,-11,-10,-94,-12,-16,-7,-15,-14,-93,-13,26,-9,-54,-45,-42,-49,-26,-38,-19,26,-17,-53,-28,-56,26,-34,-32,-57,-46,-48,-27,-103,-33,-47,-55,-102,-41,-18,-39,-40,]),'ID':([1,3,4,5,7,8,9,10,11,12,13,15,16,20,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,48,52,53,57,59,60,61,62,64,68,69,71,72,73,74,76,78,79,80,81,82,83,84,88,89,90,91,92,104,105,110,115,116,117,120,123,126,127,128,129,136,140,143,149,153,154,155,156,157,158,160,161,163,165,166,169,175,176,177,178,179,181,185,188,],[21,40,-8,-77,42,43,-11,-10,-94,-78,-12,-16,40,-79,-7,-15,-14,-93,-80,-13,21,-9,-97,40,-76,-96,-98,40,-103,-99,-95,-54,40,40,87,40,40,40,40,-74,-45,40,40,-42,40,40,40,40,-84,40,-81,-82,-83,40,-75,-70,-72,-71,-73,-49,40,-26,40,40,40,40,-38,-19,21,-17,-53,40,-28,40,-56,-24,-23,-25,171,21,-34,-32,-57,-46,-48,-27,-103,-33,-47,-55,-102,-41,-18,-39,-40,]),'IF':([1,4,9,10,11,13,15,23,24,25,26,28,29,30,48,68,72,104,110,123,126,127,128,129,140,149,157,158,160,161,163,165,166,169,175,176,177,178,179,181,185,188,],[22,-8,-11,-10,-94,-12,-16,-7,-15,-14,-93,-13,22,-9,-54,-45,-42,-49,-26,-38,-19,22,-17,-53,-28,-56,22,-34,-32,-57,-46,-48,-27,-103,-33,-47,-55,-102,-41,-18,-39,-40,]),'BLUE':([32,34,35,36,38,39,40,63,64,88,89,90,91,92,150,],[-97,-76,-96,-98,-103,-99,-95,93,-74,-75,-70,-72,-71,-73,93,]),'ON':([17,],[50,]),'RIGHT':([49,50,],[79,79,]),'FALSE':([3,5,12,16,20,27,32,33,34,35,36,37,38,39,40,52,53,59,60,61,62,64,69,71,73,74,76,78,79,80,81,82,83,84,88,89,90,91,92,105,115,116,117,120,136,143,],[39,-77,-78,39,-79,-80,-97,39,-76,-96,-98,39,-103,-99,-95,39,39,39,39,39,39,-74,39,39,39,39,39,39,-84,39,-81,-82,-83,39,-75,-70,-72,-71,-73,39,39,39,39,39,39,39,]),'INT':([125,183,],[154,154,]),'OUT':([42,],[70,]),'FLOAT':([125,183,],[153,153,]),'CTE_FLOAT':([3,5,12,16,20,27,32,33,34,35,36,37,38,39,40,52,53,59,60,61,62,64,69,71,73,74,76,78,79,80,81,82,83,84,88,89,90,91,92,105,115,116,117,120,136,143,],[32,-77,-78,32,-79,-80,-97,32,-76,-96,-98,32,-103,-99,-95,32,32,32,32,32,32,-74,32,32,32,32,32,32,-84,32,-81,-82,-83,32,-75,-70,-72,-71,-73,32,32,32,32,32,32,32,]),'UP':([49,50,],[81,81,]),'PURPLE':([32,34,35,36,38,39,40,63,64,88,89,90,91,92,150,],[-97,-76,-96,-98,-103,-99,-95,95,-74,-75,-70,-72,-71,-73,95,]),'ARC':([1,4,9,10,11,13,15,23,24,25,26,28,29,30,48,65,68,72,103,104,110,123,126,127,128,129,140,149,157,158,160,161,163,165,166,169,175,176,177,178,179,181,185,188,],[27,-8,-11,-10,-94,-12,-16,-7,-15,-14,-93,-13,27,-9,-54,27,-45,-42,27,-49,-26,-38,-19,27,-17,-53,-28,-56,27,-34,-32,-57,-46,-48,-27,-103,-33,-47,-55,-102,-41,-18,-39,-40,]),'BOOL':([125,183,],[155,155,]),'BLACK':([32,34,35,36,38,39,40,63,64,88,89,90,91,92,150,],[-97,-76,-96,-98,-103,-99,-95,100,-74,-75,-70,-72,-71,-73,100,]),'{':([87,124,151,170,180,186,],[127,-100,127,127,-101,127,]),'>':([32,34,35,36,38,39,40,46,64,74,88,89,90,91,92,],[-97,-76,-96,-98,-103,-99,-95,78,-74,116,-75,-70,-72,-71,-73,]),'}':([9,10,11,13,15,24,25,26,28,30,48,68,72,104,110,123,127,129,140,149,157,158,159,160,161,163,165,166,169,172,173,174,175,176,177,178,179,185,188,],[-11,-10,-94,-12,-16,-15,-14,-93,-13,-9,-54,-45,-42,-49,-26,-38,158,-53,-28,-56,-103,-34,175,-32,-57,-46,-48,-27,-103,-37,-35,-36,-33,-47,-55,-102,-41,-39,-40,]),'OR':([32,34,35,36,38,39,40,46,64,88,89,90,91,92,],[-97,-76,-96,-98,-103,-99,-95,76,-74,-75,-70,-72,-71,-73,]),'LEFT':([49,50,],[83,83,]),'MOD':([1,4,9,10,11,13,15,23,24,25,26,28,29,30,48,68,72,104,110,123,126,128,129,140,149,158,160,161,163,165,166,169,175,176,177,178,179,181,185,188,],[31,-8,-11,-10,-94,-12,-16,-7,-15,-14,-93,-13,31,-9,-54,-45,-42,-49,-26,-38,-19,-17,-53,-28,-56,-34,-32,-57,-46,-48,-27,-103,-33,-47,-55,-102,-41,-18,-39,-40,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'figure':([1,29,65,103,127,157,],[3,3,3,3,3,3,]),'continueGo':([178,],[185,]),'color':([63,150,],[94,168,]),'move':([49,50,],[80,84,]),'module':([1,29,],[4,4,]),'var_cte':([3,16,33,37,52,53,59,60,61,62,69,71,73,74,76,78,80,84,105,115,116,117,120,136,143,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,134,34,34,34,34,34,34,]),'gotoE':([180,],[186,]),'writeA':([16,],[44,]),'vars':([125,183,],[152,187,]),'blockA':([127,],[160,]),'gotoFalse':([124,],[151,]),'write':([1,29,127,157,],[9,9,9,9,]),'program':([0,],[2,]),'moduleA':([87,],[128,]),'factor':([3,16,33,37,52,53,59,60,61,62,69,71,73,74,76,78,80,84,115,116,117,120,136,143,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'pipelineC':([107,],[137,]),'type':([125,183,],[156,156,]),'repeatB':([103,],[132,]),'empty':([29,38,46,103,107,112,157,169,171,],[54,64,77,133,138,144,172,179,184,]),'pipelineB':([69,136,],[106,164,]),'varsA':([171,],[182,]),'repeat':([1,29,127,157,],[13,13,13,13,]),'exp':([3,16,33,37,52,53,59,60,61,62,69,71,73,74,76,78,80,84,115,116,117,120,136,143,],[37,46,46,63,46,46,89,90,91,92,107,46,113,114,118,119,121,122,145,146,147,148,107,46,]),'repeatA':([65,103,],[102,131,]),'screen':([1,29,127,157,],[15,15,15,15,]),'conditionA':([169,],[178,]),'commandA':([17,],[48,]),'programA':([1,],[18,]),'programB':([1,29,],[19,55,]),'programC':([29,],[56,]),'condition':([1,29,127,157,],[10,10,10,10,]),'blockB':([127,157,],[159,174,]),'statute':([1,29,127,157,],[23,23,157,157,]),'pipeline':([1,29,127,157,],[24,24,24,24,]),'blockC':([157,],[173,]),'calling':([1,29,127,157,],[25,25,25,25,]),'callingA':([71,],[110,]),'callingB':([71,143,],[111,167,]),'callingC':([112,],[142,]),'command':([1,29,65,103,127,157,],[28,28,103,103,28,28,]),'pipelineA':([42,],[68,]),'workspace':([1,29,],[29,29,]),'expression':([16,33,52,53,71,143,],[47,58,85,86,112,112,]),'assign':([1,29,127,157,],[30,30,30,30,]),'block':([87,151,170,186,],[126,169,181,188,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INIT programA','program',2,'p_program','sample_ly.py',104),
  ('programA -> programB END','programA',2,'p_programA','sample_ly.py',130),
  ('programA -> END','programA',1,'p_programA','sample_ly.py',131),
  ('programB -> workspace programC','programB',2,'p_programB','sample_ly.py',135),
  ('programC -> programB','programC',1,'p_programC','sample_ly.py',139),
  ('programC -> empty','programC',1,'p_programC','sample_ly.py',140),
  ('workspace -> statute','workspace',1,'p_workspace','sample_ly.py',144),
  ('workspace -> module','workspace',1,'p_workspace','sample_ly.py',145),
  ('statute -> assign','statute',1,'p_statute','sample_ly.py',150),
  ('statute -> condition','statute',1,'p_statute','sample_ly.py',151),
  ('statute -> write','statute',1,'p_statute','sample_ly.py',152),
  ('statute -> repeat','statute',1,'p_statute','sample_ly.py',153),
  ('statute -> command','statute',1,'p_statute','sample_ly.py',154),
  ('statute -> calling','statute',1,'p_statute','sample_ly.py',155),
  ('statute -> pipeline','statute',1,'p_statute','sample_ly.py',156),
  ('statute -> screen','statute',1,'p_statute','sample_ly.py',157),
  ('module -> MOD # ID moduleA','module',4,'p_module','sample_ly.py',162),
  ('moduleA -> ( vars ) block','moduleA',4,'p_moduleA','sample_ly.py',196),
  ('moduleA -> block','moduleA',1,'p_moduleA','sample_ly.py',197),
  ('vars -> type ID varsA','vars',3,'p_vars','sample_ly.py',200),
  ('varsA -> , vars','varsA',2,'p_varsA','sample_ly.py',209),
  ('varsA -> empty','varsA',1,'p_varsA','sample_ly.py',210),
  ('type -> INT','type',1,'p_type','sample_ly.py',213),
  ('type -> FLOAT','type',1,'p_type','sample_ly.py',214),
  ('type -> BOOL','type',1,'p_type','sample_ly.py',215),
  ('calling -> # ID ( callingA','calling',4,'p_calling','sample_ly.py',221),
  ('callingA -> callingB ) ;','callingA',3,'p_callingA','sample_ly.py',226),
  ('callingA -> ) ;','callingA',2,'p_callingA','sample_ly.py',227),
  ('callingB -> expression callingC','callingB',2,'p_callingB','sample_ly.py',230),
  ('callingC -> , callingB','callingC',2,'p_callingC','sample_ly.py',234),
  ('callingC -> empty','callingC',1,'p_callingC','sample_ly.py',235),
  ('block -> { blockA','block',2,'p_block','sample_ly.py',238),
  ('blockA -> blockB }','blockA',2,'p_blockA','sample_ly.py',241),
  ('blockA -> }','blockA',1,'p_blockA','sample_ly.py',242),
  ('blockB -> statute blockC','blockB',2,'p_blockB','sample_ly.py',245),
  ('blockC -> blockB','blockC',1,'p_blockC','sample_ly.py',248),
  ('blockC -> empty','blockC',1,'p_blockC','sample_ly.py',249),
  ('assign -> ID = expression ;','assign',4,'p_assign','sample_ly.py',252),
  ('condition -> IF ( expression ) gotoFalse block conditionA continueGo','condition',8,'p_condition','sample_ly.py',276),
  ('conditionA -> ELSE gotoE block','conditionA',3,'p_conditionA','sample_ly.py',279),
  ('conditionA -> empty','conditionA',1,'p_conditionA','sample_ly.py',280),
  ('write -> ECHO writeA ;','write',3,'p_write','sample_ly.py',283),
  ('writeA -> expression','writeA',1,'p_writeA','sample_ly.py',293),
  ('writeA -> CTE_STRING','writeA',1,'p_writeA','sample_ly.py',294),
  ('pipeline -> PIPE ID pipelineA','pipeline',3,'p_pipeline','sample_ly.py',298),
  ('pipelineA -> [ pipelineB ] ;','pipelineA',4,'p_pipelineA','sample_ly.py',301),
  ('pipelineA -> IN ( var_cte ) ;','pipelineA',5,'p_pipelineA','sample_ly.py',302),
  ('pipelineA -> OUT ( ) ;','pipelineA',4,'p_pipelineA','sample_ly.py',303),
  ('pipelineA -> COUNT ;','pipelineA',2,'p_pipelineA','sample_ly.py',304),
  ('pipelineB -> exp pipelineC','pipelineB',2,'p_pipelineB','sample_ly.py',307),
  ('pipelineC -> , pipelineB','pipelineC',2,'p_pipelineC','sample_ly.py',310),
  ('pipelineC -> empty','pipelineC',1,'p_pipelineC','sample_ly.py',311),
  ('command -> figure exp exp color ;','command',5,'p_command','sample_ly.py',314),
  ('command -> SAMPLE commandA','command',2,'p_command','sample_ly.py',315),
  ('commandA -> ON move exp CTE_INTEGER color ;','commandA',6,'p_commandA','sample_ly.py',333),
  ('commandA -> OFF move exp ;','commandA',4,'p_commandA','sample_ly.py',334),
  ('repeat -> REPLAY CTE_INTEGER [ repeatA ] ;','repeat',6,'p_repeat','sample_ly.py',343),
  ('repeatA -> command repeatB','repeatA',2,'p_repeatA','sample_ly.py',346),
  ('repeatB -> repeatA','repeatB',1,'p_repeatB','sample_ly.py',349),
  ('repeatB -> empty','repeatB',1,'p_repeatB','sample_ly.py',350),
  ('expression -> exp = = exp','expression',4,'p_expression','sample_ly.py',353),
  ('expression -> exp < > exp','expression',4,'p_expression','sample_ly.py',354),
  ('expression -> exp < = exp','expression',4,'p_expression','sample_ly.py',355),
  ('expression -> exp > = exp','expression',4,'p_expression','sample_ly.py',356),
  ('expression -> exp > exp','expression',3,'p_expression','sample_ly.py',357),
  ('expression -> exp < exp','expression',3,'p_expression','sample_ly.py',358),
  ('expression -> exp AND exp','expression',3,'p_expression','sample_ly.py',359),
  ('expression -> exp OR exp','expression',3,'p_expression','sample_ly.py',360),
  ('expression -> exp empty','expression',2,'p_expression','sample_ly.py',361),
  ('exp -> exp + exp','exp',3,'p_exp','sample_ly.py',395),
  ('exp -> exp - exp','exp',3,'p_exp','sample_ly.py',396),
  ('exp -> exp * exp','exp',3,'p_exp','sample_ly.py',397),
  ('exp -> exp / exp','exp',3,'p_exp','sample_ly.py',398),
  ('exp -> factor empty','exp',2,'p_exp','sample_ly.py',399),
  ('factor -> ( expression )','factor',3,'p_factor','sample_ly.py',424),
  ('factor -> var_cte','factor',1,'p_factor','sample_ly.py',425),
  ('figure -> OVAL','figure',1,'p_figure','sample_ly.py',432),
  ('figure -> TRIO','figure',1,'p_figure','sample_ly.py',433),
  ('figure -> QUAD','figure',1,'p_figure','sample_ly.py',434),
  ('figure -> ARC','figure',1,'p_figure','sample_ly.py',435),
  ('move -> UP','move',1,'p_move','sample_ly.py',439),
  ('move -> DOWN','move',1,'p_move','sample_ly.py',440),
  ('move -> LEFT','move',1,'p_move','sample_ly.py',441),
  ('move -> RIGHT','move',1,'p_move','sample_ly.py',442),
  ('color -> RED','color',1,'p_color','sample_ly.py',446),
  ('color -> YELLOW','color',1,'p_color','sample_ly.py',447),
  ('color -> BLUE','color',1,'p_color','sample_ly.py',448),
  ('color -> GREEN','color',1,'p_color','sample_ly.py',449),
  ('color -> BLACK','color',1,'p_color','sample_ly.py',450),
  ('color -> ORANGE','color',1,'p_color','sample_ly.py',451),
  ('color -> PURPLE','color',1,'p_color','sample_ly.py',452),
  ('color -> CYAN','color',1,'p_color','sample_ly.py',453),
  ('screen -> WHERE','screen',1,'p_screen','sample_ly.py',457),
  ('screen -> CLEAR','screen',1,'p_screen','sample_ly.py',458),
  ('var_cte -> ID','var_cte',1,'p_var_cte','sample_ly.py',461),
  ('var_cte -> CTE_INTEGER','var_cte',1,'p_var_cte','sample_ly.py',462),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','sample_ly.py',463),
  ('var_cte -> TRUE','var_cte',1,'p_var_cte','sample_ly.py',464),
  ('var_cte -> FALSE','var_cte',1,'p_var_cte','sample_ly.py',465),
  ('gotoFalse -> <empty>','gotoFalse',0,'p_gotoFalse','sample_ly.py',500),
  ('gotoE -> <empty>','gotoE',0,'p_gotoE','sample_ly.py',507),
  ('continueGo -> <empty>','continueGo',0,'p_continueGo','sample_ly.py',511),
  ('empty -> <empty>','empty',0,'p_empty','sample_ly.py',515),
]
