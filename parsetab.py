
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xf9\xe6Fl\xdc\xe2\xca9\x11\x97\x0f\x94\xf7R\x00Q'
    
_lr_action_items = {'COUNT':([42,],[70,]),'-':([33,35,36,37,39,40,66,67,68,92,102,103,],[58,-98,-77,-97,-99,-96,-72,-71,-73,-76,-74,-75,]),'YELLOW':([33,35,36,37,39,40,59,60,61,63,66,67,68,90,91,92,102,103,146,],[-99,-98,-77,-97,-99,-96,-67,-66,-68,95,-72,-71,-73,-69,-70,-76,-74,-75,95,]),'DOWN':([47,48,],[83,83,]),'REPLAY':([1,4,5,10,11,13,15,24,25,26,27,29,30,31,46,72,76,106,111,120,122,126,128,129,130,145,147,152,157,158,160,161,163,165,167,169,171,177,178,179,180,181,],[6,-10,-8,-11,-95,-12,-16,-7,-15,-14,-94,-13,6,-9,-52,-43,-41,-47,-42,-37,-25,-19,6,-17,-51,-54,-27,-99,6,-33,-31,-55,-44,-46,-26,-38,-40,-32,-45,-53,-39,-18,]),'GREEN':([33,35,36,37,39,40,59,60,61,63,66,67,68,90,91,92,102,103,146,],[-99,-98,-77,-97,-99,-96,-67,-66,-68,97,-72,-71,-73,-69,-70,-76,-74,-75,97,]),'CYAN':([33,35,36,37,39,40,59,60,61,63,66,67,68,90,91,92,102,103,146,],[-99,-98,-77,-97,-99,-96,-67,-66,-68,98,-72,-71,-73,-69,-70,-76,-74,-75,98,]),'OVAL':([1,4,5,10,11,13,15,24,25,26,27,29,30,31,46,69,72,76,105,106,111,120,122,126,128,129,130,145,147,152,157,158,160,161,163,165,167,169,171,177,178,179,180,181,],[7,-10,-8,-11,-95,-12,-16,-7,-15,-14,-94,-13,7,-9,-52,7,-43,-41,7,-47,-42,-37,-25,-19,7,-17,-51,-54,-27,-99,7,-33,-31,-55,-44,-46,-26,-38,-40,-32,-45,-53,-39,-18,]),'OFF':([17,],[47,]),'RED':([33,35,36,37,39,40,59,60,61,63,66,67,68,90,91,92,102,103,146,],[-99,-98,-77,-97,-99,-96,-67,-66,-68,101,-72,-71,-73,-69,-70,-76,-74,-75,101,]),'LEFT':([47,48,],[84,84,]),'"':([1,4,5,10,11,13,15,24,25,26,27,29,30,31,43,46,72,76,106,111,120,122,126,128,129,130,145,147,152,157,158,160,161,163,165,167,169,171,177,178,179,180,181,],[9,-10,-8,-11,-95,-12,-16,-7,-15,-14,-94,-13,9,-9,75,-52,-43,-41,-47,-42,-37,-25,-19,9,-17,-51,-54,-27,-99,9,-33,-31,-55,-44,-46,-26,-38,-40,-32,-45,-53,-39,-18,]),')':([33,35,36,37,39,40,45,59,60,61,62,66,67,68,87,88,90,91,92,102,103,110,113,116,123,124,135,141,142,143,144,149,151,153,168,173,182,184,185,],[-99,-98,-77,-97,-99,-96,-65,-67,-66,-68,92,-72,-71,-73,121,125,-69,-70,-76,-74,-75,140,-64,-63,148,-99,162,-59,-61,-60,-62,-28,-30,172,-29,-99,-20,-22,-21,]),'(':([3,7,12,16,20,23,28,33,34,35,36,37,38,39,40,50,51,52,57,58,59,60,61,64,65,66,67,68,71,73,74,78,79,80,81,82,83,84,85,87,89,90,91,92,102,103,112,114,115,117,139,150,],[34,-78,-79,34,-80,52,-81,-99,34,-98,-77,-97,34,-99,-96,34,87,34,34,34,-67,-66,-68,34,34,-72,-71,-73,107,34,110,34,34,-85,34,-82,-83,-84,34,34,127,-69,-70,-76,-74,-75,34,34,34,34,34,34,]),'+':([33,35,36,37,39,40,66,67,68,92,102,103,],[57,-98,-77,-97,-99,-96,-72,-71,-73,-76,-74,-75,]),'*':([35,36,37,39,40,92,],[-98,-77,-97,64,-96,-76,]),']':([33,35,36,37,39,40,46,59,60,61,66,67,68,90,91,92,102,103,104,105,108,109,130,132,133,134,137,138,145,164,179,],[-99,-98,-77,-97,-99,-96,-52,-67,-66,-68,-72,-71,-73,-69,-70,-76,-74,-75,131,-99,136,-99,-51,-57,-56,-58,-50,-48,-54,-49,-53,]),',':([33,35,36,37,39,40,45,59,60,61,66,67,68,90,91,92,102,103,109,113,116,124,141,142,143,144,173,],[-99,-98,-77,-97,-99,-96,-65,-67,-66,-68,-72,-71,-73,-69,-70,-76,-74,-75,139,-64,-63,150,-59,-61,-60,-62,183,]),'/':([35,36,37,39,40,92,],[-98,-77,-97,65,-96,-76,]),'PIPE':([1,4,5,10,11,13,15,24,25,26,27,29,30,31,46,72,76,106,111,120,122,126,128,129,130,145,147,152,157,158,160,161,163,165,167,169,171,177,178,179,180,181,],[8,-10,-8,-11,-95,-12,-16,-7,-15,-14,-94,-13,8,-9,-52,-43,-41,-47,-42,-37,-25,-19,8,-17,-51,-54,-27,-99,8,-33,-31,-55,-44,-46,-26,-38,-40,-32,-45,-53,-39,-18,]),'INIT':([0,],[1,]),'ORANGE':([33,35,36,37,39,40,59,60,61,63,66,67,68,90,91,92,102,103,146,],[-99,-98,-77,-97,-99,-96,-67,-66,-68,99,-72,-71,-73,-69,-70,-76,-74,-75,99,]),';':([33,35,36,37,39,40,44,45,59,60,61,66,67,68,70,75,86,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,116,118,121,131,136,140,141,142,143,144,148,162,166,],[-99,-98,-77,-97,-99,-96,76,-65,-67,-66,-68,-72,-71,-73,106,111,120,-69,-70,-76,-88,130,-87,-92,-89,-93,-91,-90,-86,-74,-75,-64,-63,145,147,161,163,165,-59,-61,-60,-62,167,178,179,]),'=':([21,33,35,36,37,39,40,45,59,60,61,66,67,68,77,78,79,90,91,92,102,103,],[50,-99,-98,-77,-97,-99,-96,77,-67,-66,-68,-72,-71,-73,112,114,117,-69,-70,-76,-74,-75,]),'<':([33,35,36,37,39,40,45,59,60,61,66,67,68,90,91,92,102,103,],[-99,-98,-77,-97,-99,-96,78,-67,-66,-68,-72,-71,-73,-69,-70,-76,-74,-75,]),'$end':([2,14,18,49,],[0,-3,-1,-2,]),'CTE_STRING':([9,],[43,]),'TRIO':([1,4,5,10,11,13,15,24,25,26,27,29,30,31,46,69,72,76,105,106,111,120,122,126,128,129,130,145,147,152,157,158,160,161,163,165,167,169,171,177,178,179,180,181,],[12,-10,-8,-11,-95,-12,-16,-7,-15,-14,-94,-13,12,-9,-52,12,-43,-41,12,-47,-42,-37,-25,-19,12,-17,-51,-54,-27,-99,12,-33,-31,-55,-44,-46,-26,-38,-40,-32,-45,-53,-39,-18,]),'END':([1,4,5,10,11,13,15,19,24,25,26,27,29,30,31,46,53,54,55,72,76,106,111,120,122,126,129,130,145,147,152,158,160,161,163,165,167,169,171,177,178,179,180,181,],[14,-10,-8,-11,-95,-12,-16,49,-7,-15,-14,-94,-13,-99,-9,-52,-6,-5,-4,-43,-41,-47,-42,-37,-25,-19,-17,-51,-54,-27,-99,-33,-31,-55,-44,-46,-26,-38,-40,-32,-45,-53,-39,-18,]),'CLEAR':([1,4,5,10,11,13,15,24,25,26,27,29,30,31,46,72,76,106,111,120,122,126,128,129,130,145,147,152,157,158,160,161,163,165,167,169,171,177,178,179,180,181,],[11,-10,-8,-11,-95,-12,-16,-7,-15,-14,-94,-13,11,-9,-52,-43,-41,-47,-42,-37,-25,-19,11,-17,-51,-54,-27,-99,11,-33,-31,-55,-44,-46,-26,-38,-40,-32,-45,-53,-39,-18,]),'ECHO':([1,4,5,10,11,13,15,24,25,26,27,29,30,31,46,72,76,106,111,120,122,126,128,129,130,145,147,152,157,158,160,161,163,165,167,169,171,177,178,179,180,181,],[16,-10,-8,-11,-95,-12,-16,-7,-15,-14,-94,-13,16,-9,-52,-43,-41,-47,-42,-37,-25,-19,16,-17,-51,-54,-27,-99,16,-33,-31,-55,-44,-46,-26,-38,-40,-32,-45,-53,-39,-18,]),'SAMPLE':([1,4,5,10,11,13,15,24,25,26,27,29,30,31,46,69,72,76,105,106,111,120,122,126,128,129,130,145,147,152,157,158,160,161,163,165,167,169,171,177,178,179,180,181,],[17,-10,-8,-11,-95,-12,-16,-7,-15,-14,-94,-13,17,-9,-52,17,-43,-41,17,-47,-42,-37,-25,-19,17,-17,-51,-54,-27,-99,17,-33,-31,-55,-44,-46,-26,-38,-40,-32,-45,-53,-39,-18,]),'CTE_INTEGER':([3,6,7,12,16,20,28,33,34,35,36,37,38,39,40,50,52,57,58,59,60,61,64,65,66,67,68,73,78,79,80,81,82,83,84,85,87,90,91,92,102,103,107,112,114,115,117,119,139,150,],[37,41,-78,-79,37,-80,-81,-99,37,-98,-77,-97,37,-99,-96,37,37,37,37,-67,-66,-68,37,37,-72,-71,-73,37,37,37,-85,37,-82,-83,-84,37,37,-69,-70,-76,-74,-75,37,37,37,37,37,146,37,37,]),'IN':([42,],[71,]),'QUAD':([1,4,5,10,11,13,15,24,25,26,27,29,30,31,46,69,72,76,105,106,111,120,122,126,128,129,130,145,147,152,157,158,160,161,163,165,167,169,171,177,178,179,180,181,],[20,-10,-8,-11,-95,-12,-16,-7,-15,-14,-94,-13,20,-9,-52,20,-43,-41,20,-47,-42,-37,-25,-19,20,-17,-51,-54,-27,-99,20,-33,-31,-55,-44,-46,-26,-38,-40,-32,-45,-53,-39,-18,]),'[':([41,42,],[69,73,]),'ELSE':([152,158,160,177,],[170,-33,-31,-32,]),'WHERE':([1,4,5,10,11,13,15,24,25,26,27,29,30,31,46,72,76,106,111,120,122,126,128,129,130,145,147,152,157,158,160,161,163,165,167,169,171,177,178,179,180,181,],[27,-10,-8,-11,-95,-12,-16,-7,-15,-14,-94,-13,27,-9,-52,-43,-41,-47,-42,-37,-25,-19,27,-17,-51,-54,-27,-99,27,-33,-31,-55,-44,-46,-26,-38,-40,-32,-45,-53,-39,-18,]),'ID':([1,3,4,5,7,8,10,11,12,13,15,16,20,22,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,46,50,52,56,57,58,59,60,61,64,65,66,67,68,72,73,76,78,79,80,81,82,83,84,85,87,90,91,92,102,103,106,107,111,112,114,115,117,120,122,126,128,129,130,139,145,147,150,152,154,155,156,157,158,160,161,163,165,167,169,171,177,178,179,180,181,],[21,40,-10,-8,-78,42,-11,-95,-79,-12,-16,40,-80,51,-7,-15,-14,-94,-81,-13,21,-9,-99,40,-98,-77,-97,40,-99,-96,-52,40,40,89,40,40,-67,-66,-68,40,40,-72,-71,-73,-43,40,-41,40,40,-85,40,-82,-83,-84,40,40,-69,-70,-76,-74,-75,-47,40,-42,40,40,40,40,-37,-25,-19,21,-17,-51,40,-54,-27,40,-99,-24,-23,173,21,-33,-31,-55,-44,-46,-26,-38,-40,-32,-45,-53,-39,-18,]),'_':([1,4,5,10,11,13,15,24,25,26,27,29,30,31,32,46,72,76,106,111,120,122,126,128,129,130,145,147,152,157,158,160,161,163,165,167,169,171,177,178,179,180,181,],[22,-10,-8,-11,-95,-12,-16,-7,-15,-14,-94,-13,22,-9,56,-52,-43,-41,-47,-42,-37,-25,-19,22,-17,-51,-54,-27,-99,22,-33,-31,-55,-44,-46,-26,-38,-40,-32,-45,-53,-39,-18,]),'IF':([1,4,5,10,11,13,15,24,25,26,27,29,30,31,46,72,76,106,111,120,122,126,128,129,130,145,147,152,157,158,160,161,163,165,167,169,171,177,178,179,180,181,],[23,-10,-8,-11,-95,-12,-16,-7,-15,-14,-94,-13,23,-9,-52,-43,-41,-47,-42,-37,-25,-19,23,-17,-51,-54,-27,-99,23,-33,-31,-55,-44,-46,-26,-38,-40,-32,-45,-53,-39,-18,]),'BLUE':([33,35,36,37,39,40,59,60,61,63,66,67,68,90,91,92,102,103,146,],[-99,-98,-77,-97,-99,-96,-67,-66,-68,93,-72,-71,-73,-69,-70,-76,-74,-75,93,]),'ON':([17,],[48,]),'RIGHT':([47,48,],[80,80,]),'INT':([127,183,],[155,155,]),'OUT':([42,],[74,]),'FLOAT':([127,183,],[154,154,]),'CTE_FLOAT':([3,7,12,16,20,28,33,34,35,36,37,38,39,40,50,52,57,58,59,60,61,64,65,66,67,68,73,78,79,80,81,82,83,84,85,87,90,91,92,102,103,107,112,114,115,117,139,150,],[35,-78,-79,35,-80,-81,-99,35,-98,-77,-97,35,-99,-96,35,35,35,35,-67,-66,-68,35,35,-72,-71,-73,35,35,35,-85,35,-82,-83,-84,35,35,-69,-70,-76,-74,-75,35,35,35,35,35,35,35,]),'UP':([47,48,],[82,82,]),'PURPLE':([33,35,36,37,39,40,59,60,61,63,66,67,68,90,91,92,102,103,146,],[-99,-98,-77,-97,-99,-96,-67,-66,-68,96,-72,-71,-73,-69,-70,-76,-74,-75,96,]),'ARC':([1,4,5,10,11,13,15,24,25,26,27,29,30,31,46,69,72,76,105,106,111,120,122,126,128,129,130,145,147,152,157,158,160,161,163,165,167,169,171,177,178,179,180,181,],[28,-10,-8,-11,-95,-12,-16,-7,-15,-14,-94,-13,28,-9,-52,28,-43,-41,28,-47,-42,-37,-25,-19,28,-17,-51,-54,-27,-99,28,-33,-31,-55,-44,-46,-26,-38,-40,-32,-45,-53,-39,-18,]),'BLACK':([33,35,36,37,39,40,59,60,61,63,66,67,68,90,91,92,102,103,146,],[-99,-98,-77,-97,-99,-96,-67,-66,-68,100,-72,-71,-73,-69,-70,-76,-74,-75,100,]),'{':([89,125,170,172,],[128,128,128,128,]),'>':([33,35,36,37,39,40,45,59,60,61,66,67,68,78,90,91,92,102,103,],[-99,-98,-77,-97,-99,-96,79,-67,-66,-68,-72,-71,-73,115,-69,-70,-76,-74,-75,]),'}':([4,10,11,13,15,25,26,27,29,31,46,72,76,106,111,120,122,128,130,145,147,152,157,158,159,160,161,163,165,167,169,171,174,175,176,177,178,179,180,],[-10,-11,-95,-12,-16,-15,-14,-94,-13,-9,-52,-43,-41,-47,-42,-37,-25,158,-51,-54,-27,-99,-99,-33,177,-31,-55,-44,-46,-26,-38,-40,-36,-34,-35,-32,-45,-53,-39,]),'MOD':([1,4,5,10,11,13,15,24,25,26,27,29,30,31,46,72,76,106,111,120,122,126,129,130,145,147,152,158,160,161,163,165,167,169,171,177,178,179,180,181,],[32,-10,-8,-11,-95,-12,-16,-7,-15,-14,-94,-13,32,-9,-52,-43,-41,-47,-42,-37,-25,-19,-17,-51,-54,-27,-99,-33,-31,-55,-44,-46,-26,-38,-40,-32,-45,-53,-39,-18,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'termA':([39,],[67,]),'figure':([1,30,69,105,128,157,],[3,3,3,3,3,3,]),'color':([63,146,],[94,166,]),'move':([47,48,],[81,85,]),'module':([1,30,],[5,5,]),'var_cte':([3,16,34,38,50,52,57,58,64,65,73,78,79,81,85,87,107,112,114,115,117,139,150,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,135,36,36,36,36,36,36,]),'vars':([127,183,],[153,185,]),'pipelineA':([42,],[72,]),'blockA':([128,],[160,]),'write':([1,30,128,157,],[10,10,10,10,]),'program':([0,],[2,]),'moduleA':([89,],[129,]),'factor':([3,16,34,38,50,52,57,58,64,65,73,78,79,81,85,87,112,114,115,117,139,150,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'pipelineC':([109,],[138,]),'type':([127,183,],[156,156,]),'repeatB':([105,],[133,]),'empty':([30,33,39,105,109,124,152,157,173,],[53,61,68,134,137,151,171,174,184,]),'pipelineB':([73,139,],[108,164,]),'varsA':([173,],[182,]),'repeat':([1,30,128,157,],[13,13,13,13,]),'exp':([3,16,34,38,50,52,57,58,73,78,79,81,85,87,112,114,115,117,139,150,],[38,45,45,63,45,45,90,91,109,113,116,118,119,45,141,142,143,144,109,45,]),'repeatA':([69,105,],[104,132,]),'screen':([1,30,128,157,],[15,15,15,15,]),'term':([3,16,34,38,50,52,57,58,64,65,73,78,79,81,85,87,112,114,115,117,139,150,],[33,33,33,33,33,33,33,33,102,103,33,33,33,33,33,33,33,33,33,33,33,33,]),'conditionA':([152,],[169,]),'commandA':([17,],[46,]),'programA':([1,],[18,]),'programB':([1,30,],[19,54,]),'programC':([30,],[55,]),'expB':([33,],[59,]),'expA':([33,],[60,]),'condition':([1,30,128,157,],[4,4,4,4,]),'blockB':([128,157,],[159,176,]),'statute':([1,30,128,157,],[24,24,157,157,]),'pipeline':([1,30,128,157,],[25,25,25,25,]),'blockC':([157,],[175,]),'calling':([1,30,128,157,],[26,26,26,26,]),'callingA':([87,],[122,]),'callingB':([87,150,],[123,168,]),'callingC':([124,],[149,]),'command':([1,30,69,105,128,157,],[29,29,105,105,29,29,]),'termB':([39,],[66,]),'workspace':([1,30,],[30,30,]),'expression':([16,34,50,52,87,150,],[44,62,86,88,124,124,]),'assign':([1,30,128,157,],[31,31,31,31,]),'block':([89,125,170,172,],[126,152,180,181,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INIT programA','program',2,'p_program','sample_ly.py',88),
  ('programA -> programB END','programA',2,'p_programA','sample_ly.py',91),
  ('programA -> END','programA',1,'p_programA','sample_ly.py',92),
  ('programB -> workspace programC','programB',2,'p_programB','sample_ly.py',95),
  ('programC -> programB','programC',1,'p_programC','sample_ly.py',98),
  ('programC -> empty','programC',1,'p_programC','sample_ly.py',99),
  ('workspace -> statute','workspace',1,'p_workspace','sample_ly.py',102),
  ('workspace -> module','workspace',1,'p_workspace','sample_ly.py',103),
  ('statute -> assign','statute',1,'p_statute','sample_ly.py',106),
  ('statute -> condition','statute',1,'p_statute','sample_ly.py',107),
  ('statute -> write','statute',1,'p_statute','sample_ly.py',108),
  ('statute -> repeat','statute',1,'p_statute','sample_ly.py',109),
  ('statute -> command','statute',1,'p_statute','sample_ly.py',110),
  ('statute -> calling','statute',1,'p_statute','sample_ly.py',111),
  ('statute -> pipeline','statute',1,'p_statute','sample_ly.py',112),
  ('statute -> screen','statute',1,'p_statute','sample_ly.py',113),
  ('module -> MOD _ ID moduleA','module',4,'p_module','sample_ly.py',116),
  ('moduleA -> ( vars ) block','moduleA',4,'p_moduleA','sample_ly.py',119),
  ('moduleA -> block','moduleA',1,'p_moduleA','sample_ly.py',120),
  ('vars -> type ID varsA','vars',3,'p_vars','sample_ly.py',123),
  ('varsA -> , vars','varsA',2,'p_varsA','sample_ly.py',126),
  ('varsA -> empty','varsA',1,'p_varsA','sample_ly.py',127),
  ('type -> INT','type',1,'p_type','sample_ly.py',130),
  ('type -> FLOAT','type',1,'p_type','sample_ly.py',131),
  ('calling -> _ ID ( callingA','calling',4,'p_calling','sample_ly.py',134),
  ('callingA -> callingB ) ;','callingA',3,'p_callingA','sample_ly.py',137),
  ('callingA -> ) ;','callingA',2,'p_callingA','sample_ly.py',138),
  ('callingB -> expression callingC','callingB',2,'p_callingB','sample_ly.py',141),
  ('callingC -> , callingB','callingC',2,'p_callingC','sample_ly.py',144),
  ('callingC -> empty','callingC',1,'p_callingC','sample_ly.py',145),
  ('block -> { blockA','block',2,'p_block','sample_ly.py',148),
  ('blockA -> blockB }','blockA',2,'p_blockA','sample_ly.py',151),
  ('blockA -> }','blockA',1,'p_blockA','sample_ly.py',152),
  ('blockB -> statute blockC','blockB',2,'p_blockB','sample_ly.py',155),
  ('blockC -> blockB','blockC',1,'p_blockC','sample_ly.py',158),
  ('blockC -> empty','blockC',1,'p_blockC','sample_ly.py',159),
  ('assign -> ID = expression ;','assign',4,'p_assign','sample_ly.py',162),
  ('condition -> IF ( expression ) block conditionA','condition',6,'p_condition','sample_ly.py',165),
  ('conditionA -> ELSE block','conditionA',2,'p_conditionA','sample_ly.py',168),
  ('conditionA -> empty','conditionA',1,'p_conditionA','sample_ly.py',169),
  ('write -> ECHO expression ;','write',3,'p_write','sample_ly.py',172),
  ('write -> " CTE_STRING " ;','write',4,'p_write','sample_ly.py',173),
  ('pipeline -> PIPE ID pipelineA','pipeline',3,'p_pipeline','sample_ly.py',176),
  ('pipelineA -> [ pipelineB ] ;','pipelineA',4,'p_pipelineA','sample_ly.py',179),
  ('pipelineA -> IN ( var_cte ) ;','pipelineA',5,'p_pipelineA','sample_ly.py',180),
  ('pipelineA -> OUT ( ) ;','pipelineA',4,'p_pipelineA','sample_ly.py',181),
  ('pipelineA -> COUNT ;','pipelineA',2,'p_pipelineA','sample_ly.py',182),
  ('pipelineB -> exp pipelineC','pipelineB',2,'p_pipelineB','sample_ly.py',185),
  ('pipelineC -> , pipelineB','pipelineC',2,'p_pipelineC','sample_ly.py',188),
  ('pipelineC -> empty','pipelineC',1,'p_pipelineC','sample_ly.py',189),
  ('command -> figure exp exp color ;','command',5,'p_command','sample_ly.py',192),
  ('command -> SAMPLE commandA','command',2,'p_command','sample_ly.py',193),
  ('commandA -> ON move exp CTE_INTEGER color ;','commandA',6,'p_commandA','sample_ly.py',196),
  ('commandA -> OFF move exp ;','commandA',4,'p_commandA','sample_ly.py',197),
  ('repeat -> REPLAY CTE_INTEGER [ repeatA ] ;','repeat',6,'p_repeat','sample_ly.py',200),
  ('repeatA -> command repeatB','repeatA',2,'p_repeatA','sample_ly.py',203),
  ('repeatB -> repeatA','repeatB',1,'p_repeatB','sample_ly.py',206),
  ('repeatB -> empty','repeatB',1,'p_repeatB','sample_ly.py',207),
  ('expression -> exp = = exp','expression',4,'p_expression','sample_ly.py',210),
  ('expression -> exp < > exp','expression',4,'p_expression','sample_ly.py',211),
  ('expression -> exp < = exp','expression',4,'p_expression','sample_ly.py',212),
  ('expression -> exp > = exp','expression',4,'p_expression','sample_ly.py',213),
  ('expression -> exp > exp','expression',3,'p_expression','sample_ly.py',214),
  ('expression -> exp < exp','expression',3,'p_expression','sample_ly.py',215),
  ('expression -> exp','expression',1,'p_expression','sample_ly.py',216),
  ('exp -> term expA','exp',2,'p_exp','sample_ly.py',219),
  ('expA -> expB','expA',1,'p_expA','sample_ly.py',222),
  ('expA -> empty','expA',1,'p_expA','sample_ly.py',223),
  ('expB -> + exp','expB',2,'p_expB','sample_ly.py',226),
  ('expB -> - exp','expB',2,'p_expB','sample_ly.py',227),
  ('term -> factor termA','term',2,'p_term','sample_ly.py',230),
  ('termA -> termB','termA',1,'p_termA','sample_ly.py',233),
  ('termA -> empty','termA',1,'p_termA','sample_ly.py',234),
  ('termB -> * term','termB',2,'p_termB','sample_ly.py',237),
  ('termB -> / term','termB',2,'p_termB','sample_ly.py',238),
  ('factor -> ( expression )','factor',3,'p_factor','sample_ly.py',241),
  ('factor -> var_cte','factor',1,'p_factor','sample_ly.py',242),
  ('figure -> OVAL','figure',1,'p_figure','sample_ly.py',245),
  ('figure -> TRIO','figure',1,'p_figure','sample_ly.py',246),
  ('figure -> QUAD','figure',1,'p_figure','sample_ly.py',247),
  ('figure -> ARC','figure',1,'p_figure','sample_ly.py',248),
  ('move -> UP','move',1,'p_move','sample_ly.py',251),
  ('move -> DOWN','move',1,'p_move','sample_ly.py',252),
  ('move -> LEFT','move',1,'p_move','sample_ly.py',253),
  ('move -> RIGHT','move',1,'p_move','sample_ly.py',254),
  ('color -> RED','color',1,'p_color','sample_ly.py',257),
  ('color -> YELLOW','color',1,'p_color','sample_ly.py',258),
  ('color -> BLUE','color',1,'p_color','sample_ly.py',259),
  ('color -> GREEN','color',1,'p_color','sample_ly.py',260),
  ('color -> BLACK','color',1,'p_color','sample_ly.py',261),
  ('color -> ORANGE','color',1,'p_color','sample_ly.py',262),
  ('color -> PURPLE','color',1,'p_color','sample_ly.py',263),
  ('color -> CYAN','color',1,'p_color','sample_ly.py',264),
  ('screen -> WHERE','screen',1,'p_screen','sample_ly.py',267),
  ('screen -> CLEAR','screen',1,'p_screen','sample_ly.py',268),
  ('var_cte -> ID','var_cte',1,'p_var_cte','sample_ly.py',271),
  ('var_cte -> CTE_INTEGER','var_cte',1,'p_var_cte','sample_ly.py',272),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','sample_ly.py',273),
  ('empty -> <empty>','empty',0,'p_empty','sample_ly.py',276),
]
