
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '|\xc7\xba\xea\x02\x04\x11S_ \xd3\xd8&I\xd4\xae'
    
_lr_action_items = {'COUNT':([49,],[80,]),'YELLOW':([38,40,41,42,44,45,46,76,77,105,106,107,108,109,164,],[-112,-90,-111,-113,-123,-114,-110,114,-88,-89,-84,-86,-85,-87,114,]),'DOWN':([62,63,],[98,98,]),'WHILE':([1,4,8,11,12,14,16,18,26,27,28,29,31,32,34,35,37,61,82,88,122,140,143,154,163,167,168,169,176,178,179,182,191,192,194,195,196,197,198,199,203,204,206,207,214,215,217,220,225,228,],[6,-8,-16,-17,-11,-109,-13,-19,-10,-12,-7,-18,-15,-108,-14,6,-9,-67,-55,-50,-59,-46,-66,-30,-69,-22,6,-122,-56,-58,-34,-123,6,-42,-40,-20,-120,-71,-57,-33,-119,-49,-53,-68,-41,-70,-47,-21,-48,-54,]),'REPLAY':([1,4,8,11,12,14,16,18,26,27,28,29,31,32,34,35,37,61,82,88,122,140,143,154,163,167,168,169,176,178,179,182,191,192,194,195,196,197,198,199,203,204,206,207,214,215,217,220,225,228,],[7,-8,-16,-17,-11,-109,-13,-19,-10,-12,-7,-18,-15,-108,-14,7,-9,-67,-55,-50,-59,-46,-66,-30,-69,-22,7,-122,-56,-58,-34,-123,7,-42,-40,-20,-120,-71,-57,-33,-119,-49,-53,-68,-41,-70,-47,-21,-48,-54,]),'GREEN':([38,40,41,42,44,45,46,76,77,105,106,107,108,109,164,],[-112,-90,-111,-113,-123,-114,-110,113,-88,-89,-84,-86,-85,-87,113,]),'CYAN':([38,40,41,42,44,45,46,76,77,105,106,107,108,109,164,],[-112,-90,-111,-113,-123,-114,-110,115,-88,-89,-84,-86,-85,-87,115,]),'OVAL':([1,4,8,11,12,14,16,18,26,27,28,29,31,32,34,35,37,61,82,88,121,122,140,143,146,154,163,167,168,169,176,178,179,182,191,192,194,195,196,197,198,199,203,204,206,207,214,215,217,220,225,228,],[5,-8,-16,-17,-11,-109,-13,-19,-10,-12,-7,-18,-15,-108,-14,5,-9,-67,-55,-50,5,-59,-46,-66,5,-30,-69,-22,5,-122,-56,-58,-34,-123,5,-42,-40,-20,-120,-71,-57,-33,-119,-49,-53,-68,-41,-70,-47,-21,-48,-54,]),'OFF':([21,],[62,]),'TRUE':([3,5,15,20,24,33,38,39,40,41,42,43,44,45,46,52,65,72,73,74,75,77,78,83,85,89,90,92,94,95,96,97,98,99,100,105,106,107,108,109,123,127,132,133,134,137,149,200,216,],[42,-91,-92,42,-93,-94,-112,42,-90,-111,-113,42,-123,-114,-110,42,42,42,42,42,42,-88,42,42,-32,42,42,42,42,-98,42,-95,-96,-97,42,-89,-84,-86,-85,-87,42,42,42,42,42,42,42,-39,42,]),'[':([48,49,79,87,102,185,],[-118,83,121,129,141,208,]),'RED':([38,40,41,42,44,45,46,76,77,105,106,107,108,109,164,],[-112,-90,-111,-113,-123,-114,-110,119,-88,-89,-84,-86,-85,-87,119,]),'#':([1,4,8,11,12,14,16,18,26,27,28,29,31,32,34,35,36,37,61,82,88,122,140,143,154,163,167,168,169,176,178,179,182,191,192,194,195,196,197,198,199,203,204,206,207,214,215,217,220,225,228,],[10,-8,-16,-17,-11,-109,-13,-19,-10,-12,-7,-18,-15,-108,-14,10,70,-9,-67,-55,-50,-59,-46,-66,-30,-69,-22,10,-122,-56,-58,-34,-123,10,-42,-40,-20,-120,-71,-57,-33,-119,-49,-53,-68,-41,-70,-47,-21,-48,-54,]),']':([38,40,41,42,44,45,46,61,77,105,106,107,108,109,124,125,143,145,146,150,151,158,163,165,172,173,174,177,207,219,],[-112,-90,-111,-113,-123,-114,-110,-67,-88,-89,-84,-86,-85,-87,148,-123,-66,171,-123,-60,-62,183,-69,185,-73,-72,-74,-61,-68,226,]),')':([38,40,41,42,44,45,46,59,71,77,85,86,93,105,106,107,108,109,120,126,127,130,131,135,136,147,155,156,159,160,161,162,181,186,201,202,210,221,223,224,227,],[-112,-90,-111,-113,-123,-114,-110,-123,105,-88,-32,128,-83,-89,-84,-86,-85,-87,144,152,153,-81,-80,-82,-79,175,180,-36,-77,-76,-75,-78,-123,209,-35,-38,-123,-24,-26,-37,-25,]),'(':([3,5,6,13,15,20,24,33,38,39,40,41,42,43,44,45,46,47,50,51,52,65,72,73,74,75,77,78,81,83,84,85,89,90,92,94,95,96,97,98,99,100,103,104,105,106,107,108,109,127,132,133,134,137,142,149,200,216,],[39,-91,-117,52,-92,39,-93,-94,-112,39,-90,-111,-113,39,-123,-114,-110,78,85,-31,39,39,39,39,39,39,-88,39,123,39,126,-32,39,39,39,39,-98,39,-95,-96,-97,39,-23,-121,-89,-84,-86,-85,-87,39,39,39,39,39,166,39,-39,39,]),'+':([38,40,41,42,43,44,45,46,59,76,77,105,106,107,108,109,125,130,131,135,136,138,139,159,160,161,162,],[-112,-90,-111,-113,72,-123,-114,-110,72,72,-88,-89,-84,-86,-85,-87,72,72,72,72,72,72,72,72,72,72,72,]),'*':([38,40,41,42,43,44,45,46,59,76,77,105,106,107,108,109,125,130,131,135,136,138,139,159,160,161,162,],[-112,-90,-111,-113,73,-123,-114,-110,73,73,-88,-89,73,-86,73,-87,73,73,73,73,73,73,73,73,73,73,73,]),'-':([38,40,41,42,43,44,45,46,59,76,77,105,106,107,108,109,125,130,131,135,136,138,139,159,160,161,162,],[-112,-90,-111,-113,74,-123,-114,-110,74,74,-88,-89,-84,-86,-85,-87,74,74,74,74,74,74,74,74,74,74,74,]),',':([38,40,41,42,44,45,46,59,77,93,105,106,107,108,109,125,130,131,135,136,156,159,160,161,162,181,210,],[-112,-90,-111,-113,-123,-114,-110,-123,-88,-83,-89,-84,-86,-85,-87,149,-81,-80,-82,-79,-36,-77,-76,-75,-78,200,222,]),'/':([38,40,41,42,43,44,45,46,59,76,77,105,106,107,108,109,125,130,131,135,136,138,139,159,160,161,162,],[-112,-90,-111,-113,75,-123,-114,-110,75,75,-88,-89,75,-86,75,-87,75,75,75,75,75,75,75,75,75,75,75,]),'PIPE':([1,4,8,11,12,14,16,18,26,27,28,29,31,32,34,35,37,61,82,88,122,140,143,154,163,167,168,169,176,178,179,182,191,192,194,195,196,197,198,199,203,204,206,207,214,215,217,220,225,228,],[9,-8,-16,-17,-11,-109,-13,-19,-10,-12,-7,-18,-15,-108,-14,9,-9,-67,-55,-50,-59,-46,-66,-30,-69,-22,9,-122,-56,-58,-34,-123,9,-42,-40,-20,-120,-71,-57,-33,-119,-49,-53,-68,-41,-70,-47,-21,-48,-54,]),'INIT':([0,],[1,]),'ORANGE':([38,40,41,42,44,45,46,76,77,105,106,107,108,109,164,],[-112,-90,-111,-113,-123,-114,-110,116,-88,-89,-84,-86,-85,-87,116,]),';':([38,40,41,42,44,45,46,57,58,59,60,77,80,93,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,130,131,135,136,138,148,152,153,159,160,161,162,171,175,180,183,184,226,],[-112,-90,-111,-113,-123,-114,-110,88,-52,-123,-51,-88,122,-83,140,-89,-84,-86,-85,-87,-101,143,-106,-102,-100,-107,-105,-103,-104,-99,-81,-80,-82,-79,163,176,178,179,-77,-76,-75,-78,197,198,199,206,207,228,]),'=':([25,38,40,41,42,44,45,46,59,77,90,91,94,105,106,107,108,109,],[65,-112,-90,-111,-113,-123,-114,-110,91,-88,132,134,137,-89,-84,-86,-85,-87,]),'<':([38,40,41,42,44,45,46,59,77,105,106,107,108,109,],[-112,-90,-111,-113,-123,-114,-110,90,-88,-89,-84,-86,-85,-87,]),'$end':([2,17,22,64,],[0,-3,-1,-2,]),'CTE_STRING':([20,],[58,]),'AND':([38,40,41,42,44,45,46,59,77,105,106,107,108,109,],[-112,-90,-111,-113,-123,-114,-110,89,-88,-89,-84,-86,-85,-87,]),'TRIO':([1,4,8,11,12,14,16,18,26,27,28,29,31,32,34,35,37,61,82,88,121,122,140,143,146,154,163,167,168,169,176,178,179,182,191,192,194,195,196,197,198,199,203,204,206,207,214,215,217,220,225,228,],[15,-8,-16,-17,-11,-109,-13,-19,-10,-12,-7,-18,-15,-108,-14,15,-9,-67,-55,-50,15,-59,-46,-66,15,-30,-69,-22,15,-122,-56,-58,-34,-123,15,-42,-40,-20,-120,-71,-57,-33,-119,-49,-53,-68,-41,-70,-47,-21,-48,-54,]),'END':([1,4,8,11,12,14,16,18,23,26,27,28,29,31,32,34,35,37,61,67,68,69,82,88,122,140,143,154,163,167,169,176,178,179,182,192,194,195,196,197,198,199,203,204,206,207,214,215,217,220,225,228,],[17,-8,-16,-17,-11,-109,-13,-19,64,-10,-12,-7,-18,-15,-108,-14,-123,-9,-67,-6,-5,-4,-55,-50,-59,-46,-66,-30,-69,-22,-122,-56,-58,-34,-123,-42,-40,-20,-120,-71,-57,-33,-119,-49,-53,-68,-41,-70,-47,-21,-48,-54,]),'CLEAR':([1,4,8,11,12,14,16,18,26,27,28,29,31,32,34,35,37,61,82,88,122,140,143,154,163,167,168,169,176,178,179,182,191,192,194,195,196,197,198,199,203,204,206,207,214,215,217,220,225,228,],[14,-8,-16,-17,-11,-109,-13,-19,-10,-12,-7,-18,-15,-108,-14,14,-9,-67,-55,-50,-59,-46,-66,-30,-69,-22,14,-122,-56,-58,-34,-123,14,-42,-40,-20,-120,-71,-57,-33,-119,-49,-53,-68,-41,-70,-47,-21,-48,-54,]),'ECHO':([1,4,8,11,12,14,16,18,26,27,28,29,31,32,34,35,37,61,82,88,122,140,143,154,163,167,168,169,176,178,179,182,191,192,194,195,196,197,198,199,203,204,206,207,214,215,217,220,225,228,],[20,-8,-16,-17,-11,-109,-13,-19,-10,-12,-7,-18,-15,-108,-14,20,-9,-67,-55,-50,-59,-46,-66,-30,-69,-22,20,-122,-56,-58,-34,-123,20,-42,-40,-20,-120,-71,-57,-33,-119,-49,-53,-68,-41,-70,-47,-21,-48,-54,]),'SAMPLE':([1,4,8,11,12,14,16,18,26,27,28,29,31,32,34,35,37,61,82,88,121,122,140,143,146,154,163,167,168,169,176,178,179,182,191,192,194,195,196,197,198,199,203,204,206,207,214,215,217,220,225,228,],[21,-8,-16,-17,-11,-109,-13,-19,-10,-12,-7,-18,-15,-108,-14,21,-9,-67,-55,-50,21,-59,-46,-66,21,-30,-69,-22,21,-122,-56,-58,-34,-123,21,-42,-40,-20,-120,-71,-57,-33,-119,-49,-53,-68,-41,-70,-47,-21,-48,-54,]),'CTE_INTEGER':([3,5,7,15,20,24,33,38,39,40,41,42,43,44,45,46,52,65,72,73,74,75,77,78,83,85,89,90,92,94,95,96,97,98,99,100,105,106,107,108,109,123,127,129,132,133,134,137,139,141,149,200,208,216,],[41,-91,48,-92,41,-93,-94,-112,41,-90,-111,-113,41,-123,-114,-110,41,41,41,41,41,41,-88,41,41,-32,41,41,41,41,-98,41,-95,-96,-97,41,-89,-84,-86,-85,-87,41,41,158,41,41,41,41,164,165,41,-39,219,41,]),'IN':([49,],[81,]),'QUAD':([1,4,8,11,12,14,16,18,26,27,28,29,31,32,34,35,37,61,82,88,121,122,140,143,146,154,163,167,168,169,176,178,179,182,191,192,194,195,196,197,198,199,203,204,206,207,214,215,217,220,225,228,],[24,-8,-16,-17,-11,-109,-13,-19,-10,-12,-7,-18,-15,-108,-14,24,-9,-67,-55,-50,24,-59,-46,-66,24,-30,-69,-22,24,-122,-56,-58,-34,-123,24,-42,-40,-20,-120,-71,-57,-33,-119,-49,-53,-68,-41,-70,-47,-21,-48,-54,]),'WHITE':([38,40,41,42,44,45,46,76,77,105,106,107,108,109,164,],[-112,-90,-111,-113,-123,-114,-110,118,-88,-89,-84,-86,-85,-87,118,]),'ELSE':([182,192,194,214,],[205,-42,-40,-41,]),'WHERE':([1,4,8,11,12,14,16,18,26,27,28,29,31,32,34,35,37,61,82,88,122,140,143,154,163,167,168,169,176,178,179,182,191,192,194,195,196,197,198,199,203,204,206,207,214,215,217,220,225,228,],[32,-8,-16,-17,-11,-109,-13,-19,-10,-12,-7,-18,-15,-108,-14,32,-9,-67,-55,-50,-59,-46,-66,-30,-69,-22,32,-122,-56,-58,-34,-123,32,-42,-40,-20,-120,-71,-57,-33,-119,-49,-53,-68,-41,-70,-47,-21,-48,-54,]),'ID':([1,3,4,5,8,9,10,11,12,14,15,16,18,20,24,26,27,28,29,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,52,53,54,55,56,61,65,66,70,72,73,74,75,77,78,82,83,85,88,89,90,92,94,95,96,97,98,99,100,105,106,107,108,109,122,123,127,132,133,134,137,140,143,149,154,163,167,168,169,176,178,179,182,187,188,189,190,191,192,194,195,196,197,198,199,200,203,204,206,207,214,215,216,217,220,225,228,],[25,46,-8,-91,-16,49,51,-17,-11,-109,-92,-13,-19,46,-93,-10,-12,-7,-18,-15,-108,-94,-14,25,-9,-112,46,-90,-111,-113,46,-123,-114,-110,46,-63,-64,87,-65,-67,46,102,103,46,46,46,46,-88,46,-55,46,-32,-50,46,46,46,46,-98,46,-95,-96,-97,46,-89,-84,-86,-85,-87,-59,46,46,46,46,46,46,-46,-66,46,-30,-69,-22,25,-122,-56,-58,-34,-123,-28,-27,-29,210,25,-42,-40,-20,-120,-71,-57,-33,-39,-119,-49,-53,-68,-41,-70,46,-47,-21,-48,-54,]),'IF':([1,4,8,11,12,14,16,18,26,27,28,29,31,32,34,35,37,61,82,88,122,140,143,154,163,167,168,169,176,178,179,182,191,192,194,195,196,197,198,199,203,204,206,207,214,215,217,220,225,228,],[13,-8,-16,-17,-11,-109,-13,-19,-10,-12,-7,-18,-15,-108,-14,13,-9,-67,-55,-50,-59,-46,-66,-30,-69,-22,13,-122,-56,-58,-34,-123,13,-42,-40,-20,-120,-71,-57,-33,-119,-49,-53,-68,-41,-70,-47,-21,-48,-54,]),'BLUE':([38,40,41,42,44,45,46,76,77,105,106,107,108,109,164,],[-112,-90,-111,-113,-123,-114,-110,110,-88,-89,-84,-86,-85,-87,110,]),'ON':([21,],[63,]),'ARR':([1,4,8,11,12,14,16,18,26,27,28,29,31,32,34,35,37,61,82,88,122,140,143,154,163,167,168,169,176,178,179,182,191,192,194,195,196,197,198,199,203,204,206,207,214,215,217,220,225,228,],[19,-8,-16,-17,-11,-109,-13,-19,-10,-12,-7,-18,-15,-108,-14,19,-9,-67,-55,-50,-59,-46,-66,-30,-69,-22,19,-122,-56,-58,-34,-123,19,-42,-40,-20,-120,-71,-57,-33,-119,-49,-53,-68,-41,-70,-47,-21,-48,-54,]),'RIGHT':([62,63,],[95,95,]),'FALSE':([3,5,15,20,24,33,38,39,40,41,42,43,44,45,46,52,65,72,73,74,75,77,78,83,85,89,90,92,94,95,96,97,98,99,100,105,106,107,108,109,123,127,132,133,134,137,149,200,216,],[45,-91,-92,45,-93,-94,-112,45,-90,-111,-113,45,-123,-114,-110,45,45,45,45,45,45,-88,45,45,-32,45,45,45,45,-98,45,-95,-96,-97,45,-89,-84,-86,-85,-87,45,45,45,45,45,45,45,-39,45,]),'MAT':([1,4,8,11,12,14,16,18,26,27,28,29,31,32,34,35,37,61,82,88,122,140,143,154,163,167,168,169,176,178,179,182,191,192,194,195,196,197,198,199,203,204,206,207,214,215,217,220,225,228,],[30,-8,-16,-17,-11,-109,-13,-19,-10,-12,-7,-18,-15,-108,-14,30,-9,-67,-55,-50,-59,-46,-66,-30,-69,-22,30,-122,-56,-58,-34,-123,30,-42,-40,-20,-120,-71,-57,-33,-119,-49,-53,-68,-41,-70,-47,-21,-48,-54,]),'INT':([19,30,166,222,],[53,53,188,188,]),'OUT':([49,],[84,]),'FLOAT':([19,30,166,222,],[54,54,187,187,]),'CTE_FLOAT':([3,5,15,20,24,33,38,39,40,41,42,43,44,45,46,52,65,72,73,74,75,77,78,83,85,89,90,92,94,95,96,97,98,99,100,105,106,107,108,109,123,127,132,133,134,137,149,200,216,],[38,-91,-92,38,-93,-94,-112,38,-90,-111,-113,38,-123,-114,-110,38,38,38,38,38,38,-88,38,38,-32,38,38,38,38,-98,38,-95,-96,-97,38,-89,-84,-86,-85,-87,38,38,38,38,38,38,38,-39,38,]),'UP':([62,63,],[97,97,]),'PURPLE':([38,40,41,42,44,45,46,76,77,105,106,107,108,109,164,],[-112,-90,-111,-113,-123,-114,-110,112,-88,-89,-84,-86,-85,-87,112,]),'ARC':([1,4,8,11,12,14,16,18,26,27,28,29,31,32,34,35,37,61,82,88,121,122,140,143,146,154,163,167,168,169,176,178,179,182,191,192,194,195,196,197,198,199,203,204,206,207,214,215,217,220,225,228,],[33,-8,-16,-17,-11,-109,-13,-19,-10,-12,-7,-18,-15,-108,-14,33,-9,-67,-55,-50,33,-59,-46,-66,33,-30,-69,-22,33,-122,-56,-58,-34,-123,33,-42,-40,-20,-120,-71,-57,-33,-119,-49,-53,-68,-41,-70,-47,-21,-48,-54,]),'BOOL':([19,30,166,222,],[56,56,189,189,]),'BLACK':([38,40,41,42,44,45,46,76,77,105,106,107,108,109,164,],[-112,-90,-111,-113,-123,-114,-110,117,-88,-89,-84,-86,-85,-87,117,]),'{':([103,104,128,142,144,157,170,205,209,218,],[-23,-121,-115,168,-115,168,168,-116,168,168,]),'>':([38,40,41,42,44,45,46,59,77,90,105,106,107,108,109,],[-112,-90,-111,-113,-123,-114,-110,94,-88,133,-89,-84,-86,-85,-87,]),'}':([8,11,12,14,16,18,26,27,29,31,32,34,37,61,82,88,122,140,143,154,163,168,176,178,179,182,191,192,193,194,196,197,198,199,203,204,206,207,211,212,213,214,215,217,225,228,],[-16,-17,-11,-109,-13,-19,-10,-12,-18,-15,-108,-14,-9,-67,-55,-50,-59,-46,-66,-30,-69,192,-56,-58,-34,-123,-123,-42,214,-40,-120,-71,-57,-33,-119,-49,-53,-68,-45,-43,-44,-41,-70,-47,-48,-54,]),'OR':([38,40,41,42,44,45,46,59,77,105,106,107,108,109,],[-112,-90,-111,-113,-123,-114,-110,92,-88,-89,-84,-86,-85,-87,]),'LEFT':([62,63,],[99,99,]),'MOD':([1,4,8,11,12,14,16,18,26,27,28,29,31,32,34,35,37,61,82,88,122,140,143,154,163,167,169,176,178,179,182,192,194,195,196,197,198,199,203,204,206,207,214,215,217,220,225,228,],[36,-8,-16,-17,-11,-109,-13,-19,-10,-12,-7,-18,-15,-108,-14,36,-9,-67,-55,-50,-59,-46,-66,-30,-69,-22,-122,-56,-58,-34,-123,-42,-40,-20,-120,-71,-57,-33,-119,-49,-53,-68,-41,-70,-47,-21,-48,-54,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'figure':([1,35,121,146,168,191,],[3,3,3,3,3,3,]),'continueGo':([203,],[217,]),'color':([76,164,],[111,184,]),'callID':([10,],[50,]),'move':([62,63,],[96,100,]),'module':([1,35,],[4,4,]),'var_cte':([3,20,39,43,52,65,72,73,74,75,78,83,89,90,92,94,96,100,123,127,132,133,134,137,149,216,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,147,40,40,40,40,40,40,40,]),'vars':([166,222,],[186,227,]),'conditionA':([182,],[203,]),'writeA':([20,],[57,]),'array':([1,35,168,191,],[8,8,8,8,]),'gotoE':([205,],[218,]),'matrix':([1,35,168,191,],[11,11,11,11,]),'blockA':([168,],[194,]),'sumXparam':([200,],[216,]),'typeDim':([19,30,],[55,66,]),'gotoFalse':([128,144,],[157,170,]),'write':([1,35,168,191,],[12,12,12,12,]),'program':([0,],[2,]),'moduleA':([142,],[169,]),'factor':([3,20,39,43,52,65,72,73,74,75,78,83,89,90,92,94,96,100,127,132,133,134,137,149,216,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'pipelineC':([125,],[150,]),'continueGoW':([196,],[215,]),'type':([166,222,],[190,190,]),'repeatB':([146,],[173,]),'empty':([35,44,59,125,146,181,182,191,210,],[67,77,93,151,174,202,204,211,223,]),'pipelineB':([83,149,],[124,177,]),'varsA':([210,],[221,]),'repeat':([1,35,168,191,],[16,16,16,16,]),'exp':([3,20,39,43,52,65,72,73,74,75,78,83,89,90,92,94,96,100,127,132,133,134,137,149,216,],[43,59,59,76,59,59,106,107,108,109,59,125,130,131,135,136,138,139,59,159,160,161,162,125,59,]),'repeatA':([121,146,],[145,172,]),'screen':([1,35,168,191,],[18,18,18,18,]),'endMod':([169,],[195,]),'insertEra':([85,],[127,]),'commandA':([21,],[61,]),'gotoW':([6,],[47,]),'gotoR':([48,],[79,]),'programA':([1,],[22,]),'programB':([1,35,],[23,68,]),'programC':([35,],[69,]),'insertQuadMod':([104,],[142,]),'blockB':([168,191,],[193,213,]),'condition':([1,35,168,191,],[26,26,26,26,]),'cycle':([1,35,168,191,],[27,27,27,27,]),'checkParam':([156,],[181,]),'statute':([1,35,168,191,],[28,28,191,191,]),'pipeline':([1,35,168,191,],[29,29,29,29,]),'blockC':([191,],[212,]),'calling':([1,35,168,191,],[31,31,31,31,]),'callingA':([127,],[154,]),'callingB':([127,216,],[155,224,]),'callingC':([181,],[201,]),'command':([1,35,121,146,168,191,],[34,34,146,146,34,34,]),'pipelineA':([49,],[82,]),'workspace':([1,35,],[35,35,]),'expression':([20,39,52,65,78,127,216,],[60,71,86,101,120,156,156,]),'assign':([1,35,168,191,],[37,37,37,37,]),'block':([142,157,170,209,218,],[167,182,196,220,225,]),'moduleID':([70,],[104,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INIT programA','program',2,'p_program','sample_ly.py',113),
  ('programA -> programB END','programA',2,'p_programA','sample_ly.py',124),
  ('programA -> END','programA',1,'p_programA','sample_ly.py',125),
  ('programB -> workspace programC','programB',2,'p_programB','sample_ly.py',129),
  ('programC -> programB','programC',1,'p_programC','sample_ly.py',133),
  ('programC -> empty','programC',1,'p_programC','sample_ly.py',134),
  ('workspace -> statute','workspace',1,'p_workspace','sample_ly.py',138),
  ('workspace -> module','workspace',1,'p_workspace','sample_ly.py',139),
  ('statute -> assign','statute',1,'p_statute','sample_ly.py',145),
  ('statute -> condition','statute',1,'p_statute','sample_ly.py',146),
  ('statute -> write','statute',1,'p_statute','sample_ly.py',147),
  ('statute -> cycle','statute',1,'p_statute','sample_ly.py',148),
  ('statute -> repeat','statute',1,'p_statute','sample_ly.py',149),
  ('statute -> command','statute',1,'p_statute','sample_ly.py',150),
  ('statute -> calling','statute',1,'p_statute','sample_ly.py',151),
  ('statute -> array','statute',1,'p_statute','sample_ly.py',152),
  ('statute -> matrix','statute',1,'p_statute','sample_ly.py',153),
  ('statute -> pipeline','statute',1,'p_statute','sample_ly.py',154),
  ('statute -> screen','statute',1,'p_statute','sample_ly.py',155),
  ('module -> MOD # moduleID insertQuadMod moduleA endMod','module',6,'p_module','sample_ly.py',160),
  ('moduleA -> ( vars ) block','moduleA',4,'p_moduleA','sample_ly.py',189),
  ('moduleA -> block','moduleA',1,'p_moduleA','sample_ly.py',190),
  ('moduleID -> ID','moduleID',1,'p_moduleID','sample_ly.py',193),
  ('vars -> type ID varsA','vars',3,'p_vars','sample_ly.py',202),
  ('varsA -> , vars','varsA',2,'p_varsA','sample_ly.py',224),
  ('varsA -> empty','varsA',1,'p_varsA','sample_ly.py',225),
  ('type -> INT','type',1,'p_type','sample_ly.py',228),
  ('type -> FLOAT','type',1,'p_type','sample_ly.py',229),
  ('type -> BOOL','type',1,'p_type','sample_ly.py',230),
  ('calling -> # callID ( insertEra callingA','calling',5,'p_calling','sample_ly.py',236),
  ('callID -> ID','callID',1,'p_callID','sample_ly.py',243),
  ('insertEra -> <empty>','insertEra',0,'p_insertEra','sample_ly.py',250),
  ('callingA -> callingB ) ;','callingA',3,'p_callingA','sample_ly.py',261),
  ('callingA -> ) ;','callingA',2,'p_callingA','sample_ly.py',262),
  ('callingB -> expression checkParam callingC','callingB',3,'p_callingB','sample_ly.py',267),
  ('checkParam -> <empty>','checkParam',0,'p_checkParam','sample_ly.py',270),
  ('callingC -> , sumXparam callingB','callingC',3,'p_callingC','sample_ly.py',283),
  ('callingC -> empty','callingC',1,'p_callingC','sample_ly.py',284),
  ('sumXparam -> <empty>','sumXparam',0,'p_sumXparam','sample_ly.py',287),
  ('block -> { blockA','block',2,'p_block','sample_ly.py',292),
  ('blockA -> blockB }','blockA',2,'p_blockA','sample_ly.py',295),
  ('blockA -> }','blockA',1,'p_blockA','sample_ly.py',296),
  ('blockB -> statute blockC','blockB',2,'p_blockB','sample_ly.py',299),
  ('blockC -> blockB','blockC',1,'p_blockC','sample_ly.py',302),
  ('blockC -> empty','blockC',1,'p_blockC','sample_ly.py',303),
  ('assign -> ID = expression ;','assign',4,'p_assign','sample_ly.py',306),
  ('condition -> IF ( expression ) gotoFalse block conditionA continueGo','condition',8,'p_condition','sample_ly.py',336),
  ('conditionA -> ELSE gotoE block','conditionA',3,'p_conditionA','sample_ly.py',339),
  ('conditionA -> empty','conditionA',1,'p_conditionA','sample_ly.py',340),
  ('write -> ECHO writeA ;','write',3,'p_write','sample_ly.py',343),
  ('writeA -> expression','writeA',1,'p_writeA','sample_ly.py',353),
  ('writeA -> CTE_STRING','writeA',1,'p_writeA','sample_ly.py',354),
  ('array -> ARR typeDim ID [ CTE_INTEGER ] ;','array',7,'p_array','sample_ly.py',358),
  ('matrix -> MAT typeDim ID [ CTE_INTEGER ] [ CTE_INTEGER ] ;','matrix',10,'p_matrix','sample_ly.py',375),
  ('pipeline -> PIPE ID pipelineA','pipeline',3,'p_pipeline','sample_ly.py',391),
  ('pipelineA -> [ pipelineB ] ;','pipelineA',4,'p_pipelineA','sample_ly.py',394),
  ('pipelineA -> IN ( var_cte ) ;','pipelineA',5,'p_pipelineA','sample_ly.py',395),
  ('pipelineA -> OUT ( ) ;','pipelineA',4,'p_pipelineA','sample_ly.py',396),
  ('pipelineA -> COUNT ;','pipelineA',2,'p_pipelineA','sample_ly.py',397),
  ('pipelineB -> exp pipelineC','pipelineB',2,'p_pipelineB','sample_ly.py',400),
  ('pipelineC -> , pipelineB','pipelineC',2,'p_pipelineC','sample_ly.py',403),
  ('pipelineC -> empty','pipelineC',1,'p_pipelineC','sample_ly.py',404),
  ('typeDim -> INT','typeDim',1,'p_typeDim','sample_ly.py',407),
  ('typeDim -> FLOAT','typeDim',1,'p_typeDim','sample_ly.py',408),
  ('typeDim -> BOOL','typeDim',1,'p_typeDim','sample_ly.py',409),
  ('command -> figure exp exp color ;','command',5,'p_command','sample_ly.py',413),
  ('command -> SAMPLE commandA','command',2,'p_command','sample_ly.py',414),
  ('commandA -> ON move exp CTE_INTEGER color ;','commandA',6,'p_commandA','sample_ly.py',432),
  ('commandA -> OFF move exp ;','commandA',4,'p_commandA','sample_ly.py',433),
  ('cycle -> WHILE gotoW ( expression ) gotoFalse block continueGoW','cycle',8,'p_cycle','sample_ly.py',444),
  ('repeat -> REPLAY CTE_INTEGER gotoR [ repeatA ] ;','repeat',7,'p_repeat','sample_ly.py',447),
  ('repeatA -> command repeatB','repeatA',2,'p_repeatA','sample_ly.py',459),
  ('repeatB -> repeatA','repeatB',1,'p_repeatB','sample_ly.py',462),
  ('repeatB -> empty','repeatB',1,'p_repeatB','sample_ly.py',463),
  ('expression -> exp = = exp','expression',4,'p_expression','sample_ly.py',466),
  ('expression -> exp < > exp','expression',4,'p_expression','sample_ly.py',467),
  ('expression -> exp < = exp','expression',4,'p_expression','sample_ly.py',468),
  ('expression -> exp > = exp','expression',4,'p_expression','sample_ly.py',469),
  ('expression -> exp > exp','expression',3,'p_expression','sample_ly.py',470),
  ('expression -> exp < exp','expression',3,'p_expression','sample_ly.py',471),
  ('expression -> exp AND exp','expression',3,'p_expression','sample_ly.py',472),
  ('expression -> exp OR exp','expression',3,'p_expression','sample_ly.py',473),
  ('expression -> exp empty','expression',2,'p_expression','sample_ly.py',474),
  ('exp -> exp + exp','exp',3,'p_exp','sample_ly.py',515),
  ('exp -> exp - exp','exp',3,'p_exp','sample_ly.py',516),
  ('exp -> exp * exp','exp',3,'p_exp','sample_ly.py',517),
  ('exp -> exp / exp','exp',3,'p_exp','sample_ly.py',518),
  ('exp -> factor empty','exp',2,'p_exp','sample_ly.py',519),
  ('factor -> ( expression )','factor',3,'p_factor','sample_ly.py',554),
  ('factor -> var_cte','factor',1,'p_factor','sample_ly.py',555),
  ('figure -> OVAL','figure',1,'p_figure','sample_ly.py',562),
  ('figure -> TRIO','figure',1,'p_figure','sample_ly.py',563),
  ('figure -> QUAD','figure',1,'p_figure','sample_ly.py',564),
  ('figure -> ARC','figure',1,'p_figure','sample_ly.py',565),
  ('move -> UP','move',1,'p_move','sample_ly.py',569),
  ('move -> DOWN','move',1,'p_move','sample_ly.py',570),
  ('move -> LEFT','move',1,'p_move','sample_ly.py',571),
  ('move -> RIGHT','move',1,'p_move','sample_ly.py',572),
  ('color -> RED','color',1,'p_color','sample_ly.py',576),
  ('color -> YELLOW','color',1,'p_color','sample_ly.py',577),
  ('color -> BLUE','color',1,'p_color','sample_ly.py',578),
  ('color -> GREEN','color',1,'p_color','sample_ly.py',579),
  ('color -> BLACK','color',1,'p_color','sample_ly.py',580),
  ('color -> WHITE','color',1,'p_color','sample_ly.py',581),
  ('color -> ORANGE','color',1,'p_color','sample_ly.py',582),
  ('color -> PURPLE','color',1,'p_color','sample_ly.py',583),
  ('color -> CYAN','color',1,'p_color','sample_ly.py',584),
  ('screen -> WHERE','screen',1,'p_screen','sample_ly.py',588),
  ('screen -> CLEAR','screen',1,'p_screen','sample_ly.py',589),
  ('var_cte -> ID','var_cte',1,'p_var_cte','sample_ly.py',592),
  ('var_cte -> CTE_INTEGER','var_cte',1,'p_var_cte','sample_ly.py',593),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','sample_ly.py',594),
  ('var_cte -> TRUE','var_cte',1,'p_var_cte','sample_ly.py',595),
  ('var_cte -> FALSE','var_cte',1,'p_var_cte','sample_ly.py',596),
  ('gotoFalse -> <empty>','gotoFalse',0,'p_gotoFalse','sample_ly.py',634),
  ('gotoE -> <empty>','gotoE',0,'p_gotoE','sample_ly.py',644),
  ('gotoW -> <empty>','gotoW',0,'p_gotoW','sample_ly.py',648),
  ('gotoR -> <empty>','gotoR',0,'p_gotoR','sample_ly.py',652),
  ('continueGo -> <empty>','continueGo',0,'p_continueGo','sample_ly.py',663),
  ('continueGoW -> <empty>','continueGoW',0,'p_continueGoW','sample_ly.py',667),
  ('insertQuadMod -> <empty>','insertQuadMod',0,'p_insertQuadMod','sample_ly.py',671),
  ('endMod -> <empty>','endMod',0,'p_endMod','sample_ly.py',676),
  ('empty -> <empty>','empty',0,'p_empty','sample_ly.py',680),
]
