
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '?eK\t\xc5u\xef\x16\xae?\xf3\x98\xdc\x19\x9eW'
    
_lr_action_items = {'CYAN':([27,39,40,41,43,44,45,46,66,79,85,86,113,114,115,116,117,159,167,169,228,],[-129,-98,-119,-116,-129,-117,-120,-118,-38,-95,123,-37,-97,-91,-93,-92,-94,-41,123,-36,-35,]),'RETURN':([1,6,11,12,15,16,19,21,28,29,30,33,35,36,37,57,84,132,133,154,166,168,183,184,185,194,195,196,197,199,200,201,203,205,208,209,211,215,216,225,227,232,233,],[3,-8,-19,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,3,-9,-74,-96,-58,-40,-73,-76,-62,3,-129,-63,-126,-78,3,-54,-52,-125,-61,-75,-68,-27,-128,-77,-53,-59,-25,-60,-69,-26,]),'YELLOW':([27,39,40,41,43,44,45,46,66,79,85,86,113,114,115,116,117,159,167,169,228,],[-129,-98,-119,-116,-129,-117,-120,-118,-38,-95,122,-37,-97,-91,-93,-92,-94,-41,122,-36,-35,]),'DOWN':([58,59,],[99,99,]),'WHILE':([1,6,11,12,15,16,19,21,28,29,30,33,35,36,37,57,84,132,133,154,166,168,183,184,185,194,195,196,197,199,200,201,203,205,208,209,211,215,216,225,227,232,233,],[8,-8,-19,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,8,-9,-74,-96,-58,-40,-73,-76,-62,8,-129,-63,-126,-78,8,-54,-52,-125,-61,-75,-68,-27,-128,-77,-53,-59,-25,-60,-69,-26,]),'REPLAY':([1,6,11,12,15,16,19,21,28,29,30,33,35,36,37,57,84,132,133,154,166,168,183,184,185,194,195,196,197,199,200,201,203,205,208,209,211,215,216,225,227,232,233,],[9,-8,-19,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,9,-9,-74,-96,-58,-40,-73,-76,-62,9,-129,-63,-126,-78,9,-54,-52,-125,-61,-75,-68,-27,-128,-77,-53,-59,-25,-60,-69,-26,]),'GREEN':([27,39,40,41,43,44,45,46,66,79,85,86,113,114,115,116,117,159,167,169,228,],[-129,-98,-119,-116,-129,-117,-120,-118,-38,-95,121,-37,-97,-91,-93,-92,-94,-41,121,-36,-35,]),'QUAD':([1,6,11,12,15,16,19,21,28,29,30,33,35,36,37,57,84,131,132,133,154,162,166,168,183,184,185,194,195,196,197,199,200,201,203,205,208,209,211,215,216,225,227,232,233,],[10,-8,-19,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,10,-9,-74,-96,10,-58,-40,-73,10,-76,-62,10,-129,-63,-126,-78,10,-54,-52,-125,-61,-75,-68,-27,-128,-77,-53,-59,-25,-60,-69,-26,]),'OVAL':([1,6,11,12,15,16,19,21,28,29,30,33,35,36,37,57,84,131,132,133,154,162,166,168,183,184,185,194,195,196,197,199,200,201,203,205,208,209,211,215,216,225,227,232,233,],[7,-8,-19,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,7,-9,-74,-96,7,-58,-40,-73,7,-76,-62,7,-129,-63,-126,-78,7,-54,-52,-125,-61,-75,-68,-27,-128,-77,-53,-59,-25,-60,-69,-26,]),'OFF':([23,],[58,]),'TRUE':([3,4,7,10,18,27,34,39,40,41,42,43,44,45,46,48,52,55,56,65,66,79,80,81,82,83,86,87,88,96,97,98,99,100,101,103,107,108,110,112,113,114,115,116,117,128,135,147,148,150,152,159,169,187,191,204,210,228,],[40,40,-99,-101,-100,-129,-102,-98,-119,-116,40,-129,-117,-120,-118,40,40,40,40,-39,-38,-95,40,40,40,40,-37,-44,40,-106,40,-103,-104,-105,40,40,40,40,40,40,-97,-91,-93,-92,-94,40,40,40,40,40,40,-41,-36,-39,-51,40,40,-35,]),'[':([27,51,89,104,105,169,189,],[65,-124,131,142,143,187,206,]),'RED':([27,39,40,41,43,44,45,46,66,79,85,86,113,114,115,116,117,159,167,169,228,],[-129,-98,-119,-116,-129,-117,-120,-118,-38,-95,127,-37,-97,-91,-93,-92,-94,-41,127,-36,-35,]),'#':([1,5,6,11,12,15,16,19,21,27,28,29,30,33,35,36,37,38,57,72,73,74,75,76,84,102,132,133,154,166,168,183,184,185,194,195,196,197,199,200,201,203,205,208,209,211,215,216,225,227,232,233,],[14,49,-8,-19,-17,-18,-12,-14,-11,-43,-10,-13,-7,-16,-15,14,-9,-129,-74,106,-20,-21,-22,-23,-96,140,-58,-40,-73,-76,-62,14,-129,-63,-126,-78,14,-54,-52,-125,-61,-75,-68,-27,-128,-77,-53,-59,-25,-60,-69,-26,]),')':([27,39,40,41,43,44,45,46,66,77,78,79,86,87,92,93,94,95,111,113,114,115,116,117,128,129,130,136,137,146,149,151,153,155,156,157,158,159,164,169,173,174,175,176,177,192,193,220,226,228,231,234,236,237,],[-129,-98,-119,-116,-129,-117,-120,-118,-38,-129,113,-95,-37,-44,134,-129,-65,-64,-90,-97,-91,-93,-92,-94,-129,159,160,165,-67,-88,-87,-89,-86,-46,-42,-45,-48,-41,-66,-36,-84,-83,-82,-85,-129,-47,-50,230,-49,-35,-129,-29,-31,-30,]),'(':([3,4,7,8,10,17,18,22,27,34,39,40,41,42,43,44,45,46,48,49,50,52,53,54,55,56,65,66,79,80,81,82,83,86,87,88,96,97,98,99,100,101,103,107,108,110,112,113,114,115,116,117,128,135,144,145,147,148,150,152,159,169,172,187,190,191,204,210,228,],[42,42,-99,-123,-101,55,-100,56,-129,-102,-98,-119,-116,42,-129,-117,-120,-118,42,87,88,42,87,-43,42,42,-39,-38,-95,42,42,42,42,-37,-44,42,-106,42,-103,-104,-105,42,42,42,42,42,42,-97,-91,-93,-92,-94,42,42,-28,-24,42,42,42,42,-41,-36,-127,-39,207,-51,42,42,-35,]),'+':([27,39,40,41,43,44,45,46,47,48,66,77,79,85,86,113,114,115,116,117,138,139,141,146,149,151,153,158,159,169,173,174,175,176,218,228,],[-129,-98,-119,-116,-129,-117,-120,-118,80,80,-38,80,-95,80,-37,-97,-91,-93,-92,-94,80,80,80,80,80,80,80,80,-41,-36,80,80,80,80,80,-35,]),'*':([27,39,40,41,43,44,45,46,47,48,66,77,79,85,86,113,114,115,116,117,138,139,141,146,149,151,153,158,159,169,173,174,175,176,218,228,],[-129,-98,-119,-116,-129,-117,-120,-118,81,81,-38,81,-95,81,-37,-97,81,-93,81,-94,81,81,81,81,81,81,81,81,-41,-36,81,81,81,81,81,-35,]),'-':([27,39,40,41,43,44,45,46,47,48,66,77,79,85,86,113,114,115,116,117,138,139,141,146,149,151,153,158,159,169,173,174,175,176,218,228,],[-129,-98,-119,-116,-129,-117,-120,-118,82,82,-38,82,-95,82,-37,-97,-91,-93,-92,-94,82,82,82,82,82,82,82,82,-41,-36,82,82,82,82,82,-35,]),',':([27,39,40,41,43,44,45,46,66,77,79,86,93,94,95,111,113,114,115,116,117,146,149,151,153,158,159,169,173,174,175,176,177,228,231,],[-129,-98,-119,-116,-129,-117,-120,-118,-38,-129,-95,-37,135,-65,-64,-90,-97,-91,-93,-92,-94,-88,-87,-89,-86,-48,-41,-36,-84,-83,-82,-85,191,-35,235,]),'/':([27,39,40,41,43,44,45,46,47,48,66,77,79,85,86,113,114,115,116,117,138,139,141,146,149,151,153,158,159,169,173,174,175,176,218,228,],[-129,-98,-119,-116,-129,-117,-120,-118,83,83,-38,83,-95,83,-37,-97,83,-93,83,-94,83,83,83,83,83,83,83,83,-41,-36,83,83,83,83,83,-35,]),'INIT':([0,],[1,]),'ORANGE':([27,39,40,41,43,44,45,46,66,79,85,86,113,114,115,116,117,159,167,169,228,],[-129,-98,-119,-116,-129,-117,-120,-118,-38,-95,124,-37,-97,-91,-93,-92,-94,-41,124,-36,-35,]),';':([27,39,40,41,43,44,45,46,47,66,77,79,86,90,91,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,138,140,146,149,151,153,159,165,169,173,174,175,176,179,186,188,228,229,],[-129,-98,-119,-116,-129,-117,-120,-118,84,-38,-129,-95,-37,132,133,-90,-97,-91,-93,-92,-94,-109,154,-114,-110,-108,-115,-113,-111,-112,-107,166,168,-88,-87,-89,-86,-41,185,-36,-84,-83,-82,-85,195,203,205,-35,232,]),'=':([13,27,39,40,41,43,44,45,46,66,77,79,86,108,109,112,113,114,115,116,117,159,169,228,],[52,-129,-98,-119,-116,-129,-117,-120,-118,-38,109,-95,-37,147,150,152,-97,-91,-93,-92,-94,-41,-36,-35,]),'<':([27,39,40,41,43,44,45,46,66,77,79,86,113,114,115,116,117,159,169,228,],[-129,-98,-119,-116,-129,-117,-120,-118,-38,108,-95,-37,-97,-91,-93,-92,-94,-41,-36,-35,]),'$end':([2,20,24,60,],[0,-3,-1,-2,]),'CTE_STRING':([56,135,],[94,94,]),'AND':([27,39,40,41,43,44,45,46,66,77,79,86,113,114,115,116,117,159,169,228,],[-129,-98,-119,-116,-129,-117,-120,-118,-38,107,-95,-37,-97,-91,-93,-92,-94,-41,-36,-35,]),'TRIO':([1,6,11,12,15,16,19,21,28,29,30,33,35,36,37,57,84,131,132,133,154,162,166,168,183,184,185,194,195,196,197,199,200,201,203,205,208,209,211,215,216,225,227,232,233,],[18,-8,-19,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,18,-9,-74,-96,18,-58,-40,-73,18,-76,-62,18,-129,-63,-126,-78,18,-54,-52,-125,-61,-75,-68,-27,-128,-77,-53,-59,-25,-60,-69,-26,]),'END':([1,6,11,12,15,16,19,21,25,28,29,30,33,35,36,37,57,69,70,71,84,132,133,154,166,168,184,185,194,195,197,199,200,201,203,205,208,209,211,215,216,225,227,232,233,],[20,-8,-19,-17,-18,-12,-14,-11,60,-10,-13,-7,-16,-15,-129,-9,-74,-6,-5,-4,-96,-58,-40,-73,-76,-62,-129,-63,-126,-78,-54,-52,-125,-61,-75,-68,-27,-128,-77,-53,-59,-25,-60,-69,-26,]),'ECHO':([1,6,11,12,15,16,19,21,28,29,30,33,35,36,37,57,84,132,133,154,166,168,183,184,185,194,195,196,197,199,200,201,203,205,208,209,211,215,216,225,227,232,233,],[22,-8,-19,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,22,-9,-74,-96,-58,-40,-73,-76,-62,22,-129,-63,-126,-78,22,-54,-52,-125,-61,-75,-68,-27,-128,-77,-53,-59,-25,-60,-69,-26,]),'SAMPLE':([1,6,11,12,15,16,19,21,28,29,30,33,35,36,37,57,84,131,132,133,154,162,166,168,183,184,185,194,195,196,197,199,200,201,203,205,208,209,211,215,216,225,227,232,233,],[23,-8,-19,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,23,-9,-74,-96,23,-58,-40,-73,23,-76,-62,23,-129,-63,-126,-78,23,-54,-52,-125,-61,-75,-68,-27,-128,-77,-53,-59,-25,-60,-69,-26,]),'CTE_INTEGER':([3,4,7,9,10,18,27,34,39,40,41,42,43,44,45,46,48,52,55,56,65,66,79,80,81,82,83,86,87,88,96,97,98,99,100,101,103,107,108,110,112,113,114,115,116,117,128,135,139,142,143,147,148,150,152,159,169,187,191,204,206,210,228,],[44,44,-99,51,-101,-100,-129,-102,-98,-119,-116,44,-129,-117,-120,-118,44,44,44,44,-39,-38,-95,44,44,44,44,-37,-44,44,-106,44,-103,-104,-105,44,44,44,44,44,44,-97,-91,-93,-92,-94,44,44,167,170,171,44,44,44,44,-41,-36,-39,-51,44,219,44,-35,]),'INPUT':([1,6,11,12,15,16,19,21,28,29,30,33,35,36,37,57,84,132,133,154,166,168,183,184,185,194,195,196,197,199,200,201,203,205,208,209,211,215,216,225,227,232,233,],[26,-8,-19,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,26,-9,-74,-96,-58,-40,-73,-76,-62,26,-129,-63,-126,-78,26,-54,-52,-125,-61,-75,-68,-27,-128,-77,-53,-59,-25,-60,-69,-26,]),'WHITE':([27,39,40,41,43,44,45,46,66,79,85,86,113,114,115,116,117,159,167,169,228,],[-129,-98,-119,-116,-129,-117,-120,-118,-38,-95,126,-37,-97,-91,-93,-92,-94,-41,126,-36,-35,]),'ELSE':([184,197,199,215,],[202,-54,-52,-53,]),']':([27,39,40,41,43,44,45,46,57,66,79,86,113,114,115,116,117,141,154,159,161,162,166,169,170,171,180,181,182,203,218,219,228,],[-129,-98,-119,-116,-129,-117,-120,-118,-74,-38,-95,-37,-97,-91,-93,-92,-94,169,-73,-41,179,-129,-76,-36,188,189,-80,-79,-81,-75,228,229,-35,]),'ID':([1,3,4,6,7,10,11,12,14,15,16,18,19,21,27,28,29,30,33,34,35,36,37,39,40,41,42,43,44,45,46,48,52,55,56,57,61,62,63,64,65,66,67,68,79,80,81,82,83,84,86,87,88,96,97,98,99,100,101,103,106,107,108,110,112,113,114,115,116,117,128,132,133,135,147,148,150,152,154,159,166,168,169,183,184,185,187,191,194,195,196,197,199,200,201,203,204,205,208,209,210,211,215,216,221,222,223,224,225,227,228,232,233,],[27,27,27,-8,-99,-101,-19,-17,54,-18,-12,-100,-14,-11,-129,-10,-13,-7,-16,-102,-15,27,-9,-98,-119,-116,27,-129,-117,-120,-118,27,27,27,27,-74,-70,-71,102,-72,-39,-38,104,105,-95,27,27,27,27,-96,-37,-44,27,-106,27,-103,-104,-105,27,27,144,27,27,27,27,-97,-91,-93,-92,-94,27,-58,-40,27,27,27,27,27,-73,-41,-76,-62,-36,27,-129,-63,-39,-51,-126,-78,27,-54,-52,-125,-61,-75,27,-68,-27,-128,27,-77,-53,-59,-33,-32,-34,231,-25,-60,-35,-69,-26,]),'IF':([1,6,11,12,15,16,19,21,28,29,30,33,35,36,37,57,84,132,133,154,166,168,183,184,185,194,195,196,197,199,200,201,203,205,208,209,211,215,216,225,227,232,233,],[17,-8,-19,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,17,-9,-74,-96,-58,-40,-73,-76,-62,17,-129,-63,-126,-78,17,-54,-52,-125,-61,-75,-68,-27,-128,-77,-53,-59,-25,-60,-69,-26,]),'BLUE':([27,39,40,41,43,44,45,46,66,79,85,86,113,114,115,116,117,159,167,169,228,],[-129,-98,-119,-116,-129,-117,-120,-118,-38,-95,118,-37,-97,-91,-93,-92,-94,-41,118,-36,-35,]),'ON':([23,],[59,]),'ARR':([1,6,11,12,15,16,19,21,28,29,30,33,35,36,37,57,84,132,133,154,166,168,183,184,185,194,195,196,197,199,200,201,203,205,208,209,211,215,216,225,227,232,233,],[31,-8,-19,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,31,-9,-74,-96,-58,-40,-73,-76,-62,31,-129,-63,-126,-78,31,-54,-52,-125,-61,-75,-68,-27,-128,-77,-53,-59,-25,-60,-69,-26,]),'RIGHT':([58,59,],[96,96,]),'FALSE':([3,4,7,10,18,27,34,39,40,41,42,43,44,45,46,48,52,55,56,65,66,79,80,81,82,83,86,87,88,96,97,98,99,100,101,103,107,108,110,112,113,114,115,116,117,128,135,147,148,150,152,159,169,187,191,204,210,228,],[45,45,-99,-101,-100,-129,-102,-98,-119,-116,45,-129,-117,-120,-118,45,45,45,45,-39,-38,-95,45,45,45,45,-37,-44,45,-106,45,-103,-104,-105,45,45,45,45,45,45,-97,-91,-93,-92,-94,45,45,45,45,45,45,-41,-36,-39,-51,45,45,-35,]),'MAT':([1,6,11,12,15,16,19,21,28,29,30,33,35,36,37,57,84,132,133,154,166,168,183,184,185,194,195,196,197,199,200,201,203,205,208,209,211,215,216,225,227,232,233,],[32,-8,-19,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,32,-9,-74,-96,-58,-40,-73,-76,-62,32,-129,-63,-126,-78,32,-54,-52,-125,-61,-75,-68,-27,-128,-77,-53,-59,-25,-60,-69,-26,]),'INT':([26,31,32,38,207,235,],[61,61,61,73,222,222,]),'FLOAT':([26,31,32,38,207,235,],[62,62,62,74,221,221,]),'CTE_FLOAT':([3,4,7,10,18,27,34,39,40,41,42,43,44,45,46,48,52,55,56,65,66,79,80,81,82,83,86,87,88,96,97,98,99,100,101,103,107,108,110,112,113,114,115,116,117,128,135,147,148,150,152,159,169,187,191,204,210,228,],[46,46,-99,-101,-100,-129,-102,-98,-119,-116,46,-129,-117,-120,-118,46,46,46,46,-39,-38,-95,46,46,46,46,-37,-44,46,-106,46,-103,-104,-105,46,46,46,46,46,46,-97,-91,-93,-92,-94,46,46,46,46,46,46,-41,-36,-39,-51,46,46,-35,]),'UP':([58,59,],[98,98,]),'PURPLE':([27,39,40,41,43,44,45,46,66,79,85,86,113,114,115,116,117,159,167,169,228,],[-129,-98,-119,-116,-129,-117,-120,-118,-38,-95,120,-37,-97,-91,-93,-92,-94,-41,120,-36,-35,]),'ARC':([1,6,11,12,15,16,19,21,28,29,30,33,35,36,37,57,84,131,132,133,154,162,166,168,183,184,185,194,195,196,197,199,200,201,203,205,208,209,211,215,216,225,227,232,233,],[34,-8,-19,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,34,-9,-74,-96,34,-58,-40,-73,34,-76,-62,34,-129,-63,-126,-78,34,-54,-52,-125,-61,-75,-68,-27,-128,-77,-53,-59,-25,-60,-69,-26,]),'BOOL':([26,31,32,38,207,235,],[64,64,64,75,223,223,]),'BLACK':([27,39,40,41,43,44,45,46,66,79,85,86,113,114,115,116,117,159,167,169,228,],[-129,-98,-119,-116,-129,-117,-120,-118,-38,-95,125,-37,-97,-91,-93,-92,-94,-41,125,-36,-35,]),'{':([134,144,145,160,163,172,178,190,202,217,230,],[-121,-28,-24,-121,183,-127,183,183,-122,183,183,]),'>':([27,39,40,41,43,44,45,46,66,77,79,86,108,113,114,115,116,117,159,169,228,],[-129,-98,-119,-116,-129,-117,-120,-118,-38,112,-95,-37,148,-97,-91,-93,-92,-94,-41,-36,-35,]),'}':([11,12,15,16,19,21,28,29,33,35,37,57,84,132,133,154,166,168,183,184,185,194,195,196,197,198,199,200,201,203,205,211,212,213,214,215,216,227,232,],[-19,-17,-18,-12,-14,-11,-10,-13,-16,-15,-9,-74,-96,-58,-40,-73,-76,-62,197,-129,-63,-126,-78,-129,-54,215,-52,-125,-61,-75,-68,-77,-57,-55,-56,-53,-59,-60,-69,]),'OR':([27,39,40,41,43,44,45,46,66,77,79,86,113,114,115,116,117,159,169,228,],[-129,-98,-119,-116,-129,-117,-120,-118,-38,110,-95,-37,-97,-91,-93,-92,-94,-41,-36,-35,]),'LEFT':([58,59,],[100,100,]),'MOD':([1,6,11,12,15,16,19,21,28,29,30,33,35,36,37,57,84,132,133,154,166,168,184,185,194,195,197,199,200,201,203,205,208,209,211,215,216,225,227,232,233,],[38,-8,-19,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,38,-9,-74,-96,-58,-40,-73,-76,-62,-129,-63,-126,-78,-54,-52,-125,-61,-75,-68,-27,-128,-77,-53,-59,-25,-60,-69,-26,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'calling2':([49,53,],[86,91,]),'figure':([1,36,131,162,183,196,],[4,4,4,4,4,4,]),'continueGo':([200,],[216,]),'color':([85,167,],[119,186,]),'callID':([1,3,4,14,36,42,48,52,55,56,80,81,82,83,88,97,101,103,107,108,110,112,128,135,147,148,150,152,183,196,204,210,],[5,5,5,53,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'move':([58,59,],[97,101,]),'module':([1,36,],[6,6,]),'var_cte':([3,4,42,48,52,55,56,80,81,82,83,88,97,101,103,107,108,110,112,128,135,147,148,150,152,204,210,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'moduleA':([190,],[209,]),'gotoE':([202,],[217,]),'writeA':([56,135,],[93,164,]),'array':([1,36,183,196,],[12,12,12,12,]),'writeB':([93,],[136,]),'id':([1,3,4,36,42,48,52,55,56,80,81,82,83,88,97,101,103,107,108,110,112,128,135,147,148,150,152,183,196,204,210,],[13,41,41,13,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,13,13,41,41,]),'matrix':([1,36,183,196,],[15,15,15,15,]),'blockA':([183,],[199,]),'sumXparam':([191,],[210,]),'typeDim':([26,31,32,],[63,67,68,]),'gotoFalse':([134,160,],[163,178,]),'write':([1,36,183,196,],[16,16,16,16,]),'program':([0,],[2,]),'maincalling':([87,],[129,]),'factor':([3,4,42,48,52,55,56,80,81,82,83,88,97,101,103,107,108,110,112,128,135,147,148,150,152,204,210,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'blockC':([196,],[213,]),'continueGoW':([194,],[211,]),'conditionA':([184,],[200,]),'addMod':([145,],[172,]),'empty':([27,36,38,43,77,93,128,162,177,184,196,231,],[66,69,76,79,111,137,155,182,193,201,212,236,]),'varsA':([231,],[234,]),'repeat':([1,36,183,196,],[19,19,19,19,]),'return':([1,36,183,196,],[11,11,11,11,]),'workspace':([1,36,],[36,36,]),'read':([1,36,183,196,],[21,21,21,21,]),'repeatA':([131,162,],[161,180,]),'repeatB':([162,],[181,]),'endMod':([209,],[225,]),'insertEra':([87,],[128,]),'commandA':([23,],[57,]),'gotoW':([8,],[50,]),'gotoR':([51,],[89,]),'programA':([1,],[24,]),'programB':([1,36,],[25,70,]),'programC':([36,],[71,]),'insertQuadMod':([172,],[190,]),'condition':([1,36,183,196,],[28,28,28,28,]),'cycle':([1,36,183,196,],[29,29,29,29,]),'checkParam':([158,],[177,]),'statute':([1,36,183,196,],[30,30,196,196,]),'typeMod':([38,],[72,]),'type':([207,235,],[224,224,]),'vars':([207,235,],[220,237,]),'calling':([1,36,183,196,],[33,33,33,33,]),'callingA':([128,],[156,]),'callingB':([128,210,],[157,226,]),'callingC':([177,],[192,]),'command':([1,36,131,162,183,196,],[35,35,162,162,35,35,]),'blockB':([183,196,],[198,214,]),'exp':([3,4,42,48,52,55,56,80,81,82,83,88,97,101,103,107,108,110,112,128,135,147,148,150,152,204,210,],[47,48,77,85,77,77,77,114,115,116,117,77,138,139,141,146,149,151,153,158,77,173,174,175,176,218,158,]),'sumdim':([65,187,],[103,204,]),'expression':([42,52,55,56,88,135,],[78,90,92,95,130,95,]),'assign':([1,36,183,196,],[37,37,37,37,]),'block':([163,178,190,217,230,],[184,194,208,227,233,]),'moduleID':([106,],[145,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INIT programA','program',2,'p_program','sample_ly.py',109),
  ('programA -> programB END','programA',2,'p_programA','sample_ly.py',120),
  ('programA -> END','programA',1,'p_programA','sample_ly.py',121),
  ('programB -> workspace programC','programB',2,'p_programB','sample_ly.py',125),
  ('programC -> programB','programC',1,'p_programC','sample_ly.py',129),
  ('programC -> empty','programC',1,'p_programC','sample_ly.py',130),
  ('workspace -> statute','workspace',1,'p_workspace','sample_ly.py',134),
  ('workspace -> module','workspace',1,'p_workspace','sample_ly.py',135),
  ('statute -> assign','statute',1,'p_statute','sample_ly.py',142),
  ('statute -> condition','statute',1,'p_statute','sample_ly.py',143),
  ('statute -> read','statute',1,'p_statute','sample_ly.py',144),
  ('statute -> write','statute',1,'p_statute','sample_ly.py',145),
  ('statute -> cycle','statute',1,'p_statute','sample_ly.py',146),
  ('statute -> repeat','statute',1,'p_statute','sample_ly.py',147),
  ('statute -> command','statute',1,'p_statute','sample_ly.py',148),
  ('statute -> calling','statute',1,'p_statute','sample_ly.py',149),
  ('statute -> array','statute',1,'p_statute','sample_ly.py',150),
  ('statute -> matrix','statute',1,'p_statute','sample_ly.py',151),
  ('statute -> return','statute',1,'p_statute','sample_ly.py',152),
  ('typeMod -> INT','typeMod',1,'p_typeMod','sample_ly.py',157),
  ('typeMod -> FLOAT','typeMod',1,'p_typeMod','sample_ly.py',158),
  ('typeMod -> BOOL','typeMod',1,'p_typeMod','sample_ly.py',159),
  ('typeMod -> empty','typeMod',1,'p_typeMod','sample_ly.py',160),
  ('addMod -> <empty>','addMod',0,'p_addMod','sample_ly.py',168),
  ('module -> MOD typeMod # moduleID addMod insertQuadMod moduleA endMod','module',8,'p_module','sample_ly.py',178),
  ('moduleA -> ( vars ) block','moduleA',4,'p_moduleA','sample_ly.py',222),
  ('moduleA -> block','moduleA',1,'p_moduleA','sample_ly.py',223),
  ('moduleID -> ID','moduleID',1,'p_moduleID','sample_ly.py',226),
  ('vars -> type ID varsA','vars',3,'p_vars','sample_ly.py',238),
  ('varsA -> , vars','varsA',2,'p_varsA','sample_ly.py',260),
  ('varsA -> empty','varsA',1,'p_varsA','sample_ly.py',261),
  ('type -> INT','type',1,'p_type','sample_ly.py',264),
  ('type -> FLOAT','type',1,'p_type','sample_ly.py',265),
  ('type -> BOOL','type',1,'p_type','sample_ly.py',266),
  ('id -> ID [ sumdim exp ] [ sumdim exp ]','id',9,'p_id','sample_ly.py',272),
  ('id -> ID [ sumdim exp ]','id',5,'p_id','sample_ly.py',273),
  ('id -> callID # calling2','id',3,'p_id','sample_ly.py',274),
  ('id -> ID empty','id',2,'p_id','sample_ly.py',275),
  ('sumdim -> <empty>','sumdim',0,'p_sumdim','sample_ly.py',329),
  ('calling -> # callID calling2 ;','calling',4,'p_calling','sample_ly.py',334),
  ('calling2 -> ( maincalling )','calling2',3,'p_calling2','sample_ly.py',337),
  ('maincalling -> insertEra callingA','maincalling',2,'p_maincalling','sample_ly.py',345),
  ('callID -> ID','callID',1,'p_callID','sample_ly.py',348),
  ('insertEra -> <empty>','insertEra',0,'p_insertEra','sample_ly.py',356),
  ('callingA -> callingB','callingA',1,'p_callingA','sample_ly.py',366),
  ('callingA -> empty','callingA',1,'p_callingA','sample_ly.py',367),
  ('callingB -> exp checkParam callingC','callingB',3,'p_callingB','sample_ly.py',370),
  ('checkParam -> <empty>','checkParam',0,'p_checkParam','sample_ly.py',373),
  ('callingC -> , sumXparam callingB','callingC',3,'p_callingC','sample_ly.py',387),
  ('callingC -> empty','callingC',1,'p_callingC','sample_ly.py',388),
  ('sumXparam -> <empty>','sumXparam',0,'p_sumXparam','sample_ly.py',391),
  ('block -> { blockA','block',2,'p_block','sample_ly.py',396),
  ('blockA -> blockB }','blockA',2,'p_blockA','sample_ly.py',399),
  ('blockA -> }','blockA',1,'p_blockA','sample_ly.py',400),
  ('blockB -> statute blockC','blockB',2,'p_blockB','sample_ly.py',403),
  ('blockC -> blockB','blockC',1,'p_blockC','sample_ly.py',406),
  ('blockC -> empty','blockC',1,'p_blockC','sample_ly.py',407),
  ('assign -> id = expression ;','assign',4,'p_assign','sample_ly.py',410),
  ('condition -> IF ( expression ) gotoFalse block conditionA continueGo','condition',8,'p_condition','sample_ly.py',443),
  ('conditionA -> ELSE gotoE block','conditionA',3,'p_conditionA','sample_ly.py',446),
  ('conditionA -> empty','conditionA',1,'p_conditionA','sample_ly.py',447),
  ('read -> INPUT typeDim ID # ;','read',5,'p_read','sample_ly.py',450),
  ('write -> ECHO ( writeA writeB ) ;','write',6,'p_write','sample_ly.py',466),
  ('writeA -> expression','writeA',1,'p_writeA','sample_ly.py',469),
  ('writeA -> CTE_STRING','writeA',1,'p_writeA','sample_ly.py',470),
  ('writeB -> , writeA','writeB',2,'p_writeB','sample_ly.py',480),
  ('writeB -> empty','writeB',1,'p_writeB','sample_ly.py',481),
  ('array -> ARR typeDim ID [ CTE_INTEGER ] ;','array',7,'p_array','sample_ly.py',484),
  ('matrix -> MAT typeDim ID [ CTE_INTEGER ] [ CTE_INTEGER ] ;','matrix',10,'p_matrix','sample_ly.py',523),
  ('typeDim -> INT','typeDim',1,'p_typeDim','sample_ly.py',564),
  ('typeDim -> FLOAT','typeDim',1,'p_typeDim','sample_ly.py',565),
  ('typeDim -> BOOL','typeDim',1,'p_typeDim','sample_ly.py',566),
  ('command -> figure exp exp color ;','command',5,'p_command','sample_ly.py',570),
  ('command -> SAMPLE commandA','command',2,'p_command','sample_ly.py',571),
  ('commandA -> ON move exp CTE_INTEGER color ;','commandA',6,'p_commandA','sample_ly.py',589),
  ('commandA -> OFF move exp ;','commandA',4,'p_commandA','sample_ly.py',590),
  ('cycle -> WHILE gotoW ( expression ) gotoFalse block continueGoW','cycle',8,'p_cycle','sample_ly.py',601),
  ('repeat -> REPLAY CTE_INTEGER gotoR [ repeatA ] ;','repeat',7,'p_repeat','sample_ly.py',604),
  ('repeatA -> command repeatB','repeatA',2,'p_repeatA','sample_ly.py',616),
  ('repeatB -> repeatA','repeatB',1,'p_repeatB','sample_ly.py',619),
  ('repeatB -> empty','repeatB',1,'p_repeatB','sample_ly.py',620),
  ('expression -> exp = = exp','expression',4,'p_expression','sample_ly.py',623),
  ('expression -> exp < > exp','expression',4,'p_expression','sample_ly.py',624),
  ('expression -> exp < = exp','expression',4,'p_expression','sample_ly.py',625),
  ('expression -> exp > = exp','expression',4,'p_expression','sample_ly.py',626),
  ('expression -> exp > exp','expression',3,'p_expression','sample_ly.py',627),
  ('expression -> exp < exp','expression',3,'p_expression','sample_ly.py',628),
  ('expression -> exp AND exp','expression',3,'p_expression','sample_ly.py',629),
  ('expression -> exp OR exp','expression',3,'p_expression','sample_ly.py',630),
  ('expression -> exp empty','expression',2,'p_expression','sample_ly.py',631),
  ('exp -> exp + exp','exp',3,'p_exp','sample_ly.py',676),
  ('exp -> exp - exp','exp',3,'p_exp','sample_ly.py',677),
  ('exp -> exp * exp','exp',3,'p_exp','sample_ly.py',678),
  ('exp -> exp / exp','exp',3,'p_exp','sample_ly.py',679),
  ('exp -> factor empty','exp',2,'p_exp','sample_ly.py',680),
  ('return -> RETURN exp ;','return',3,'p_return','sample_ly.py',715),
  ('factor -> ( expression )','factor',3,'p_factor','sample_ly.py',728),
  ('factor -> var_cte','factor',1,'p_factor','sample_ly.py',729),
  ('figure -> OVAL','figure',1,'p_figure','sample_ly.py',737),
  ('figure -> TRIO','figure',1,'p_figure','sample_ly.py',738),
  ('figure -> QUAD','figure',1,'p_figure','sample_ly.py',739),
  ('figure -> ARC','figure',1,'p_figure','sample_ly.py',740),
  ('move -> UP','move',1,'p_move','sample_ly.py',744),
  ('move -> DOWN','move',1,'p_move','sample_ly.py',745),
  ('move -> LEFT','move',1,'p_move','sample_ly.py',746),
  ('move -> RIGHT','move',1,'p_move','sample_ly.py',747),
  ('color -> RED','color',1,'p_color','sample_ly.py',751),
  ('color -> YELLOW','color',1,'p_color','sample_ly.py',752),
  ('color -> BLUE','color',1,'p_color','sample_ly.py',753),
  ('color -> GREEN','color',1,'p_color','sample_ly.py',754),
  ('color -> BLACK','color',1,'p_color','sample_ly.py',755),
  ('color -> WHITE','color',1,'p_color','sample_ly.py',756),
  ('color -> ORANGE','color',1,'p_color','sample_ly.py',757),
  ('color -> PURPLE','color',1,'p_color','sample_ly.py',758),
  ('color -> CYAN','color',1,'p_color','sample_ly.py',759),
  ('var_cte -> id','var_cte',1,'p_var_cte','sample_ly.py',763),
  ('var_cte -> CTE_INTEGER','var_cte',1,'p_var_cte','sample_ly.py',764),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','sample_ly.py',765),
  ('var_cte -> TRUE','var_cte',1,'p_var_cte','sample_ly.py',766),
  ('var_cte -> FALSE','var_cte',1,'p_var_cte','sample_ly.py',767),
  ('gotoFalse -> <empty>','gotoFalse',0,'p_gotoFalse','sample_ly.py',812),
  ('gotoE -> <empty>','gotoE',0,'p_gotoE','sample_ly.py',822),
  ('gotoW -> <empty>','gotoW',0,'p_gotoW','sample_ly.py',826),
  ('gotoR -> <empty>','gotoR',0,'p_gotoR','sample_ly.py',830),
  ('continueGo -> <empty>','continueGo',0,'p_continueGo','sample_ly.py',841),
  ('continueGoW -> <empty>','continueGoW',0,'p_continueGoW','sample_ly.py',845),
  ('insertQuadMod -> <empty>','insertQuadMod',0,'p_insertQuadMod','sample_ly.py',849),
  ('endMod -> <empty>','endMod',0,'p_endMod','sample_ly.py',854),
  ('empty -> <empty>','empty',0,'p_empty','sample_ly.py',859),
]
