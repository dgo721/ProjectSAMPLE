
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xcf\x08\xa5\xb2p\xfdI\xfd\xf2b\x9f\xc8\x88qV3'
    
_lr_action_items = {'RETURN':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,58,83,92,128,129,146,160,172,173,182,183,184,185,187,188,189,191,193,196,197,199,203,204,213,215,220,221,],[3,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,3,-9,-70,-92,-61,-57,-39,-69,-72,3,-125,-122,-74,3,-53,-51,-121,-60,-71,-64,-26,-124,-73,-52,-58,-24,-59,-65,-25,]),'YELLOW':([25,37,38,39,41,42,43,44,63,78,84,85,109,110,111,112,113,151,161,162,216,],[-125,-94,-115,-112,-125,-113,-116,-114,-37,-91,118,-36,-93,-87,-89,-88,-90,-40,118,-35,-34,]),'DOWN':([59,60,],[102,102,]),'WHILE':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,58,83,92,128,129,146,160,172,173,182,183,184,185,187,188,189,191,193,196,197,199,203,204,213,215,220,221,],[8,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,8,-9,-70,-92,-61,-57,-39,-69,-72,8,-125,-122,-74,8,-53,-51,-121,-60,-71,-64,-26,-124,-73,-52,-58,-24,-59,-65,-25,]),'REPLAY':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,58,83,92,128,129,146,160,172,173,182,183,184,185,187,188,189,191,193,196,197,199,203,204,213,215,220,221,],[9,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,9,-9,-70,-92,-61,-57,-39,-69,-72,9,-125,-122,-74,9,-53,-51,-121,-60,-71,-64,-26,-124,-73,-52,-58,-24,-59,-65,-25,]),'GREEN':([25,37,38,39,41,42,43,44,63,78,84,85,109,110,111,112,113,151,161,162,216,],[-125,-94,-115,-112,-125,-113,-116,-114,-37,-91,117,-36,-93,-87,-89,-88,-90,-40,117,-35,-34,]),'CYAN':([25,37,38,39,41,42,43,44,63,78,84,85,109,110,111,112,113,151,161,162,216,],[-125,-94,-115,-112,-125,-113,-116,-114,-37,-91,119,-36,-93,-87,-89,-88,-90,-40,119,-35,-34,]),'OVAL':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,58,83,92,127,128,129,146,154,160,172,173,182,183,184,185,187,188,189,191,193,196,197,199,203,204,213,215,220,221,],[7,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,7,-9,-70,-92,-61,7,-57,-39,-69,7,-72,7,-125,-122,-74,7,-53,-51,-121,-60,-71,-64,-26,-124,-73,-52,-58,-24,-59,-65,-25,]),'OFF':([21,],[59,]),'TRUE':([3,4,7,17,20,24,25,32,37,38,39,40,41,42,43,44,46,50,53,62,63,78,79,80,81,82,85,86,87,93,94,96,98,99,100,101,102,103,104,105,109,110,111,112,113,124,132,133,135,137,151,162,175,179,192,198,216,],[38,38,-95,-96,38,-97,-125,-98,-94,-115,-112,38,-125,-113,-116,-114,38,38,38,-38,-37,-91,38,38,38,38,-36,-43,38,38,38,38,38,-102,38,-99,-100,-101,38,38,-93,-87,-89,-88,-90,38,38,38,38,38,-40,-35,-38,-50,38,38,-34,]),'[':([25,49,88,106,107,162,177,],[62,-120,127,142,143,175,194,]),'RED':([25,37,38,39,41,42,43,44,63,78,84,85,109,110,111,112,113,151,161,162,216,],[-125,-94,-115,-112,-125,-113,-116,-114,-37,-91,123,-36,-93,-87,-89,-88,-90,-40,123,-35,-34,]),'#':([1,5,6,10,11,14,15,18,25,26,27,28,31,33,34,35,36,58,72,73,74,75,76,83,92,128,129,146,160,172,173,182,183,184,185,187,188,189,191,193,196,197,199,203,204,213,215,220,221,],[13,47,-8,-18,-16,-17,-11,-13,-42,-10,-12,-7,-15,-14,13,-125,-9,-70,108,-19,-20,-21,-22,-92,-61,-57,-39,-69,-72,13,-125,-122,-74,13,-53,-51,-121,-60,-71,-64,-26,-124,-73,-52,-58,-24,-59,-65,-25,]),')':([25,37,38,39,41,42,43,44,56,63,77,78,85,86,91,97,109,110,111,112,113,124,125,126,131,134,136,138,147,148,149,150,151,156,157,158,159,162,166,180,181,208,214,216,219,222,224,225,],[-125,-94,-115,-112,-125,-113,-116,-114,-125,-37,109,-91,-36,-43,130,-86,-93,-87,-89,-88,-90,-125,151,152,-84,-83,-85,-82,-45,-41,-44,-47,-40,-80,-79,-78,-81,-35,-125,-46,-49,218,-48,-34,-125,-28,-30,-29,]),'(':([3,4,7,8,16,17,20,24,25,32,37,38,39,40,41,42,43,44,46,47,48,50,51,52,53,62,63,78,79,80,81,82,85,86,87,93,94,96,98,99,100,101,102,103,104,105,109,110,111,112,113,124,132,133,135,137,144,145,151,162,165,175,178,179,192,198,216,],[40,40,-95,-119,53,-96,40,-97,-125,-98,-94,-115,-112,40,-125,-113,-116,-114,40,86,87,40,86,-42,40,-38,-37,-91,40,40,40,40,-36,-43,40,40,40,40,40,-102,40,-99,-100,-101,40,40,-93,-87,-89,-88,-90,40,40,40,40,40,-27,-23,-40,-35,-123,-38,195,-50,40,40,-34,]),'+':([25,37,38,39,41,42,43,44,45,46,56,63,78,84,85,109,110,111,112,113,131,134,136,138,139,140,141,150,151,156,157,158,159,162,206,216,],[-125,-94,-115,-112,-125,-113,-116,-114,79,79,79,-37,-91,79,-36,-93,-87,-89,-88,-90,79,79,79,79,79,79,79,79,-40,79,79,79,79,-35,79,-34,]),'*':([25,37,38,39,41,42,43,44,45,46,56,63,78,84,85,109,110,111,112,113,131,134,136,138,139,140,141,150,151,156,157,158,159,162,206,216,],[-125,-94,-115,-112,-125,-113,-116,-114,80,80,80,-37,-91,80,-36,-93,80,-89,80,-90,80,80,80,80,80,80,80,80,-40,80,80,80,80,-35,80,-34,]),'-':([25,37,38,39,41,42,43,44,45,46,56,63,78,84,85,109,110,111,112,113,131,134,136,138,139,140,141,150,151,156,157,158,159,162,206,216,],[-125,-94,-115,-112,-125,-113,-116,-114,81,81,81,-37,-91,81,-36,-93,-87,-89,-88,-90,81,81,81,81,81,81,81,81,-40,81,81,81,81,-35,81,-34,]),',':([25,37,38,39,41,42,43,44,63,78,85,109,110,111,112,113,150,151,162,166,216,219,],[-125,-94,-115,-112,-125,-113,-116,-114,-37,-91,-36,-93,-87,-89,-88,-90,-47,-40,-35,179,-34,223,]),'/':([25,37,38,39,41,42,43,44,45,46,56,63,78,84,85,109,110,111,112,113,131,134,136,138,139,140,141,150,151,156,157,158,159,162,206,216,],[-125,-94,-115,-112,-125,-113,-116,-114,82,82,82,-37,-91,82,-36,-93,82,-89,82,-90,82,82,82,82,82,82,82,82,-40,82,82,82,82,-35,82,-34,]),'INIT':([0,],[1,]),'ORANGE':([25,37,38,39,41,42,43,44,63,78,84,85,109,110,111,112,113,151,161,162,216,],[-125,-94,-115,-112,-125,-113,-116,-114,-37,-91,120,-36,-93,-87,-89,-88,-90,-40,120,-35,-34,]),';':([25,37,38,39,41,42,43,44,45,54,55,56,57,63,78,85,89,90,97,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,131,134,136,138,139,151,156,157,158,159,162,168,174,176,216,217,],[-125,-94,-115,-112,-125,-113,-116,-114,83,92,-63,-125,-62,-37,-91,-36,128,129,-86,-93,-87,-89,-88,-90,-105,146,-110,-106,-104,-111,-109,-107,-108,-103,-84,-83,-85,-82,160,-40,-80,-79,-78,-81,-35,183,191,193,-34,220,]),'=':([12,25,37,38,39,41,42,43,44,56,63,78,85,94,95,98,109,110,111,112,113,151,162,216,],[50,-125,-94,-115,-112,-125,-113,-116,-114,95,-37,-91,-36,132,135,137,-93,-87,-89,-88,-90,-40,-35,-34,]),'<':([25,37,38,39,41,42,43,44,56,63,78,85,109,110,111,112,113,151,162,216,],[-125,-94,-115,-112,-125,-113,-116,-114,94,-37,-91,-36,-93,-87,-89,-88,-90,-40,-35,-34,]),'$end':([2,19,22,61,],[0,-3,-1,-2,]),'CTE_STRING':([20,],[55,]),'AND':([25,37,38,39,41,42,43,44,56,63,78,85,109,110,111,112,113,151,162,216,],[-125,-94,-115,-112,-125,-113,-116,-114,93,-37,-91,-36,-93,-87,-89,-88,-90,-40,-35,-34,]),'TRIO':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,58,83,92,127,128,129,146,154,160,172,173,182,183,184,185,187,188,189,191,193,196,197,199,203,204,213,215,220,221,],[17,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,17,-9,-70,-92,-61,17,-57,-39,-69,17,-72,17,-125,-122,-74,17,-53,-51,-121,-60,-71,-64,-26,-124,-73,-52,-58,-24,-59,-65,-25,]),'END':([1,6,10,11,14,15,18,23,26,27,28,31,33,34,36,58,69,70,71,83,92,128,129,146,160,173,182,183,185,187,188,189,191,193,196,197,199,203,204,213,215,220,221,],[19,-8,-18,-16,-17,-11,-13,61,-10,-12,-7,-15,-14,-125,-9,-70,-6,-5,-4,-92,-61,-57,-39,-69,-72,-125,-122,-74,-53,-51,-121,-60,-71,-64,-26,-124,-73,-52,-58,-24,-59,-65,-25,]),'ECHO':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,58,83,92,128,129,146,160,172,173,182,183,184,185,187,188,189,191,193,196,197,199,203,204,213,215,220,221,],[20,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,20,-9,-70,-92,-61,-57,-39,-69,-72,20,-125,-122,-74,20,-53,-51,-121,-60,-71,-64,-26,-124,-73,-52,-58,-24,-59,-65,-25,]),'SAMPLE':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,58,83,92,127,128,129,146,154,160,172,173,182,183,184,185,187,188,189,191,193,196,197,199,203,204,213,215,220,221,],[21,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,21,-9,-70,-92,-61,21,-57,-39,-69,21,-72,21,-125,-122,-74,21,-53,-51,-121,-60,-71,-64,-26,-124,-73,-52,-58,-24,-59,-65,-25,]),'CTE_INTEGER':([3,4,7,9,17,20,24,25,32,37,38,39,40,41,42,43,44,46,50,53,62,63,78,79,80,81,82,85,86,87,93,94,96,98,99,100,101,102,103,104,105,109,110,111,112,113,124,132,133,135,137,140,142,143,151,162,175,179,192,194,198,216,],[42,42,-95,49,-96,42,-97,-125,-98,-94,-115,-112,42,-125,-113,-116,-114,42,42,42,-38,-37,-91,42,42,42,42,-36,-43,42,42,42,42,42,-102,42,-99,-100,-101,42,42,-93,-87,-89,-88,-90,42,42,42,42,42,161,163,164,-40,-35,-38,-50,42,207,42,-34,]),'QUAD':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,58,83,92,127,128,129,146,154,160,172,173,182,183,184,185,187,188,189,191,193,196,197,199,203,204,213,215,220,221,],[24,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,24,-9,-70,-92,-61,24,-57,-39,-69,24,-72,24,-125,-122,-74,24,-53,-51,-121,-60,-71,-64,-26,-124,-73,-52,-58,-24,-59,-65,-25,]),'WHITE':([25,37,38,39,41,42,43,44,63,78,84,85,109,110,111,112,113,151,161,162,216,],[-125,-94,-115,-112,-125,-113,-116,-114,-37,-91,122,-36,-93,-87,-89,-88,-90,-40,122,-35,-34,]),'ELSE':([173,185,187,203,],[190,-53,-51,-52,]),']':([25,37,38,39,41,42,43,44,58,63,78,85,109,110,111,112,113,141,146,151,153,154,160,162,163,164,169,170,171,191,206,207,216,],[-125,-94,-115,-112,-125,-113,-116,-114,-70,-37,-91,-36,-93,-87,-89,-88,-90,162,-69,-40,168,-125,-72,-35,176,177,-76,-75,-77,-71,216,217,-34,]),'ID':([1,3,4,6,7,10,11,13,14,15,17,18,20,24,25,26,27,28,31,32,33,34,36,37,38,39,40,41,42,43,44,46,50,53,58,62,63,64,65,66,67,68,78,79,80,81,82,83,85,86,87,92,93,94,96,98,99,100,101,102,103,104,105,108,109,110,111,112,113,124,128,129,132,133,135,137,146,151,160,162,172,173,175,179,182,183,184,185,187,188,189,191,192,193,196,197,198,199,203,204,209,210,211,212,213,215,216,220,221,],[25,25,25,-8,-95,-18,-16,52,-17,-11,-96,-13,25,-97,-125,-10,-12,-7,-15,-98,-14,25,-9,-94,-115,-112,25,-125,-113,-116,-114,25,25,25,-70,-38,-37,-66,-67,106,-68,107,-91,25,25,25,25,-92,-36,-43,25,-61,25,25,25,25,-102,25,-99,-100,-101,25,25,144,-93,-87,-89,-88,-90,25,-57,-39,25,25,25,25,-69,-40,-72,-35,25,-125,-38,-50,-122,-74,25,-53,-51,-121,-60,-71,25,-64,-26,-124,25,-73,-52,-58,-32,-31,-33,219,-24,-59,-34,-65,-25,]),'IF':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,58,83,92,128,129,146,160,172,173,182,183,184,185,187,188,189,191,193,196,197,199,203,204,213,215,220,221,],[16,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,16,-9,-70,-92,-61,-57,-39,-69,-72,16,-125,-122,-74,16,-53,-51,-121,-60,-71,-64,-26,-124,-73,-52,-58,-24,-59,-65,-25,]),'BLUE':([25,37,38,39,41,42,43,44,63,78,84,85,109,110,111,112,113,151,161,162,216,],[-125,-94,-115,-112,-125,-113,-116,-114,-37,-91,114,-36,-93,-87,-89,-88,-90,-40,114,-35,-34,]),'ON':([21,],[60,]),'ARR':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,58,83,92,128,129,146,160,172,173,182,183,184,185,187,188,189,191,193,196,197,199,203,204,213,215,220,221,],[29,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,29,-9,-70,-92,-61,-57,-39,-69,-72,29,-125,-122,-74,29,-53,-51,-121,-60,-71,-64,-26,-124,-73,-52,-58,-24,-59,-65,-25,]),'RIGHT':([59,60,],[99,99,]),'FALSE':([3,4,7,17,20,24,25,32,37,38,39,40,41,42,43,44,46,50,53,62,63,78,79,80,81,82,85,86,87,93,94,96,98,99,100,101,102,103,104,105,109,110,111,112,113,124,132,133,135,137,151,162,175,179,192,198,216,],[43,43,-95,-96,43,-97,-125,-98,-94,-115,-112,43,-125,-113,-116,-114,43,43,43,-38,-37,-91,43,43,43,43,-36,-43,43,43,43,43,43,-102,43,-99,-100,-101,43,43,-93,-87,-89,-88,-90,43,43,43,43,43,-40,-35,-38,-50,43,43,-34,]),'MAT':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,58,83,92,128,129,146,160,172,173,182,183,184,185,187,188,189,191,193,196,197,199,203,204,213,215,220,221,],[30,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,30,-9,-70,-92,-61,-57,-39,-69,-72,30,-125,-122,-74,30,-53,-51,-121,-60,-71,-64,-26,-124,-73,-52,-58,-24,-59,-65,-25,]),'INT':([29,30,35,195,223,],[64,64,73,210,210,]),'FLOAT':([29,30,35,195,223,],[65,65,74,209,209,]),'CTE_FLOAT':([3,4,7,17,20,24,25,32,37,38,39,40,41,42,43,44,46,50,53,62,63,78,79,80,81,82,85,86,87,93,94,96,98,99,100,101,102,103,104,105,109,110,111,112,113,124,132,133,135,137,151,162,175,179,192,198,216,],[44,44,-95,-96,44,-97,-125,-98,-94,-115,-112,44,-125,-113,-116,-114,44,44,44,-38,-37,-91,44,44,44,44,-36,-43,44,44,44,44,44,-102,44,-99,-100,-101,44,44,-93,-87,-89,-88,-90,44,44,44,44,44,-40,-35,-38,-50,44,44,-34,]),'UP':([59,60,],[101,101,]),'PURPLE':([25,37,38,39,41,42,43,44,63,78,84,85,109,110,111,112,113,151,161,162,216,],[-125,-94,-115,-112,-125,-113,-116,-114,-37,-91,116,-36,-93,-87,-89,-88,-90,-40,116,-35,-34,]),'ARC':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,58,83,92,127,128,129,146,154,160,172,173,182,183,184,185,187,188,189,191,193,196,197,199,203,204,213,215,220,221,],[32,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,32,-9,-70,-92,-61,32,-57,-39,-69,32,-72,32,-125,-122,-74,32,-53,-51,-121,-60,-71,-64,-26,-124,-73,-52,-58,-24,-59,-65,-25,]),'BOOL':([29,30,35,195,223,],[67,67,75,211,211,]),'BLACK':([25,37,38,39,41,42,43,44,63,78,84,85,109,110,111,112,113,151,161,162,216,],[-125,-94,-115,-112,-125,-113,-116,-114,-37,-91,121,-36,-93,-87,-89,-88,-90,-40,121,-35,-34,]),'{':([130,144,145,152,155,165,167,178,190,205,218,],[-117,-27,-23,-117,172,-123,172,172,-118,172,172,]),'>':([25,37,38,39,41,42,43,44,56,63,78,85,94,109,110,111,112,113,151,162,216,],[-125,-94,-115,-112,-125,-113,-116,-114,98,-37,-91,-36,133,-93,-87,-89,-88,-90,-40,-35,-34,]),'}':([10,11,14,15,18,26,27,31,33,36,58,83,92,128,129,146,160,172,173,182,183,184,185,186,187,188,189,191,193,199,200,201,202,203,204,215,220,],[-18,-16,-17,-11,-13,-10,-12,-15,-14,-9,-70,-92,-61,-57,-39,-69,-72,185,-125,-122,-74,-125,-53,203,-51,-121,-60,-71,-64,-73,-56,-54,-55,-52,-58,-59,-65,]),'OR':([25,37,38,39,41,42,43,44,56,63,78,85,109,110,111,112,113,151,162,216,],[-125,-94,-115,-112,-125,-113,-116,-114,96,-37,-91,-36,-93,-87,-89,-88,-90,-40,-35,-34,]),'LEFT':([59,60,],[103,103,]),'MOD':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,58,83,92,128,129,146,160,173,182,183,185,187,188,189,191,193,196,197,199,203,204,213,215,220,221,],[35,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,35,-9,-70,-92,-61,-57,-39,-69,-72,-125,-122,-74,-53,-51,-121,-60,-71,-64,-26,-124,-73,-52,-58,-24,-59,-65,-25,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'calling2':([47,51,],[85,90,]),'figure':([1,34,127,154,172,184,],[4,4,4,4,4,4,]),'continueGo':([188,],[204,]),'color':([84,161,],[115,174,]),'callID':([1,3,4,13,20,34,40,46,50,53,79,80,81,82,87,93,94,96,98,100,104,105,124,132,133,135,137,172,184,192,198,],[5,5,5,51,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'move':([59,60,],[100,104,]),'module':([1,34,],[6,6,]),'var_cte':([3,4,20,40,46,50,53,79,80,81,82,87,93,94,96,98,100,104,105,124,132,133,135,137,192,198,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'gotoE':([190,],[205,]),'writeA':([20,],[54,]),'array':([1,34,172,184,],[11,11,11,11,]),'id':([1,3,4,20,34,40,46,50,53,79,80,81,82,87,93,94,96,98,100,104,105,124,132,133,135,137,172,184,192,198,],[12,39,39,39,12,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,12,12,39,39,]),'matrix':([1,34,172,184,],[14,14,14,14,]),'blockA':([172,],[187,]),'sumXparam':([179,],[198,]),'typeDim':([29,30,],[66,68,]),'gotoFalse':([130,152,],[155,167,]),'write':([1,34,172,184,],[15,15,15,15,]),'program':([0,],[2,]),'maincalling':([86,],[125,]),'factor':([3,4,20,40,46,50,53,79,80,81,82,87,93,94,96,98,100,104,105,124,132,133,135,137,192,198,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'blockC':([184,],[201,]),'continueGoW':([182,],[199,]),'conditionA':([173,],[188,]),'addMod':([145,],[165,]),'empty':([25,34,35,41,56,124,154,166,173,184,219,],[63,69,76,78,97,147,171,181,189,200,224,]),'varsA':([219,],[222,]),'repeat':([1,34,172,184,],[18,18,18,18,]),'return':([1,34,172,184,],[10,10,10,10,]),'workspace':([1,34,],[34,34,]),'moduleA':([178,],[197,]),'repeatA':([127,154,],[153,169,]),'repeatB':([154,],[170,]),'endMod':([197,],[213,]),'insertEra':([86,],[124,]),'commandA':([21,],[58,]),'gotoW':([8,],[48,]),'gotoR':([49,],[88,]),'programA':([1,],[22,]),'programB':([1,34,],[23,70,]),'programC':([34,],[71,]),'insertQuadMod':([165,],[178,]),'condition':([1,34,172,184,],[26,26,26,26,]),'cycle':([1,34,172,184,],[27,27,27,27,]),'checkParam':([150,],[166,]),'statute':([1,34,172,184,],[28,28,184,184,]),'typeMod':([35,],[72,]),'type':([195,223,],[212,212,]),'vars':([195,223,],[208,225,]),'calling':([1,34,172,184,],[31,31,31,31,]),'callingA':([124,],[148,]),'callingB':([124,198,],[149,214,]),'callingC':([166,],[180,]),'command':([1,34,127,154,172,184,],[33,33,154,154,33,33,]),'blockB':([172,184,],[186,202,]),'exp':([3,4,20,40,46,50,53,79,80,81,82,87,93,94,96,98,100,104,105,124,132,133,135,137,192,198,],[45,46,56,56,84,56,56,110,111,112,113,56,131,134,136,138,139,140,141,150,156,157,158,159,206,150,]),'sumdim':([62,175,],[105,192,]),'expression':([20,40,50,53,87,],[57,77,89,91,126,]),'assign':([1,34,172,184,],[36,36,36,36,]),'block':([155,167,178,205,218,],[173,182,196,215,221,]),'moduleID':([108,],[145,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INIT programA','program',2,'p_program','sample_ly.py',108),
  ('programA -> programB END','programA',2,'p_programA','sample_ly.py',119),
  ('programA -> END','programA',1,'p_programA','sample_ly.py',120),
  ('programB -> workspace programC','programB',2,'p_programB','sample_ly.py',124),
  ('programC -> programB','programC',1,'p_programC','sample_ly.py',128),
  ('programC -> empty','programC',1,'p_programC','sample_ly.py',129),
  ('workspace -> statute','workspace',1,'p_workspace','sample_ly.py',133),
  ('workspace -> module','workspace',1,'p_workspace','sample_ly.py',134),
  ('statute -> assign','statute',1,'p_statute','sample_ly.py',140),
  ('statute -> condition','statute',1,'p_statute','sample_ly.py',141),
  ('statute -> write','statute',1,'p_statute','sample_ly.py',142),
  ('statute -> cycle','statute',1,'p_statute','sample_ly.py',143),
  ('statute -> repeat','statute',1,'p_statute','sample_ly.py',144),
  ('statute -> command','statute',1,'p_statute','sample_ly.py',145),
  ('statute -> calling','statute',1,'p_statute','sample_ly.py',146),
  ('statute -> array','statute',1,'p_statute','sample_ly.py',147),
  ('statute -> matrix','statute',1,'p_statute','sample_ly.py',148),
  ('statute -> return','statute',1,'p_statute','sample_ly.py',149),
  ('typeMod -> INT','typeMod',1,'p_typeMod','sample_ly.py',154),
  ('typeMod -> FLOAT','typeMod',1,'p_typeMod','sample_ly.py',155),
  ('typeMod -> BOOL','typeMod',1,'p_typeMod','sample_ly.py',156),
  ('typeMod -> empty','typeMod',1,'p_typeMod','sample_ly.py',157),
  ('addMod -> <empty>','addMod',0,'p_addMod','sample_ly.py',164),
  ('module -> MOD typeMod # moduleID addMod insertQuadMod moduleA endMod','module',8,'p_module','sample_ly.py',177),
  ('moduleA -> ( vars ) block','moduleA',4,'p_moduleA','sample_ly.py',209),
  ('moduleA -> block','moduleA',1,'p_moduleA','sample_ly.py',210),
  ('moduleID -> ID','moduleID',1,'p_moduleID','sample_ly.py',213),
  ('vars -> type ID varsA','vars',3,'p_vars','sample_ly.py',224),
  ('varsA -> , vars','varsA',2,'p_varsA','sample_ly.py',246),
  ('varsA -> empty','varsA',1,'p_varsA','sample_ly.py',247),
  ('type -> INT','type',1,'p_type','sample_ly.py',250),
  ('type -> FLOAT','type',1,'p_type','sample_ly.py',251),
  ('type -> BOOL','type',1,'p_type','sample_ly.py',252),
  ('id -> ID [ sumdim exp ] [ sumdim exp ]','id',9,'p_id','sample_ly.py',258),
  ('id -> ID [ sumdim exp ]','id',5,'p_id','sample_ly.py',259),
  ('id -> callID # calling2','id',3,'p_id','sample_ly.py',260),
  ('id -> ID empty','id',2,'p_id','sample_ly.py',261),
  ('sumdim -> <empty>','sumdim',0,'p_sumdim','sample_ly.py',312),
  ('calling -> # callID calling2 ;','calling',4,'p_calling','sample_ly.py',317),
  ('calling2 -> ( maincalling )','calling2',3,'p_calling2','sample_ly.py',320),
  ('maincalling -> insertEra callingA','maincalling',2,'p_maincalling','sample_ly.py',325),
  ('callID -> ID','callID',1,'p_callID','sample_ly.py',333),
  ('insertEra -> <empty>','insertEra',0,'p_insertEra','sample_ly.py',341),
  ('callingA -> callingB','callingA',1,'p_callingA','sample_ly.py',353),
  ('callingA -> empty','callingA',1,'p_callingA','sample_ly.py',354),
  ('callingB -> exp checkParam callingC','callingB',3,'p_callingB','sample_ly.py',357),
  ('checkParam -> <empty>','checkParam',0,'p_checkParam','sample_ly.py',360),
  ('callingC -> , sumXparam callingB','callingC',3,'p_callingC','sample_ly.py',375),
  ('callingC -> empty','callingC',1,'p_callingC','sample_ly.py',376),
  ('sumXparam -> <empty>','sumXparam',0,'p_sumXparam','sample_ly.py',379),
  ('block -> { blockA','block',2,'p_block','sample_ly.py',384),
  ('blockA -> blockB }','blockA',2,'p_blockA','sample_ly.py',387),
  ('blockA -> }','blockA',1,'p_blockA','sample_ly.py',388),
  ('blockB -> statute blockC','blockB',2,'p_blockB','sample_ly.py',391),
  ('blockC -> blockB','blockC',1,'p_blockC','sample_ly.py',394),
  ('blockC -> empty','blockC',1,'p_blockC','sample_ly.py',395),
  ('assign -> id = expression ;','assign',4,'p_assign','sample_ly.py',398),
  ('condition -> IF ( expression ) gotoFalse block conditionA continueGo','condition',8,'p_condition','sample_ly.py',431),
  ('conditionA -> ELSE gotoE block','conditionA',3,'p_conditionA','sample_ly.py',434),
  ('conditionA -> empty','conditionA',1,'p_conditionA','sample_ly.py',435),
  ('write -> ECHO writeA ;','write',3,'p_write','sample_ly.py',438),
  ('writeA -> expression','writeA',1,'p_writeA','sample_ly.py',449),
  ('writeA -> CTE_STRING','writeA',1,'p_writeA','sample_ly.py',450),
  ('array -> ARR typeDim ID [ CTE_INTEGER ] ;','array',7,'p_array','sample_ly.py',454),
  ('matrix -> MAT typeDim ID [ CTE_INTEGER ] [ CTE_INTEGER ] ;','matrix',10,'p_matrix','sample_ly.py',479),
  ('typeDim -> INT','typeDim',1,'p_typeDim','sample_ly.py',506),
  ('typeDim -> FLOAT','typeDim',1,'p_typeDim','sample_ly.py',507),
  ('typeDim -> BOOL','typeDim',1,'p_typeDim','sample_ly.py',508),
  ('command -> figure exp exp color ;','command',5,'p_command','sample_ly.py',512),
  ('command -> SAMPLE commandA','command',2,'p_command','sample_ly.py',513),
  ('commandA -> ON move exp CTE_INTEGER color ;','commandA',6,'p_commandA','sample_ly.py',531),
  ('commandA -> OFF move exp ;','commandA',4,'p_commandA','sample_ly.py',532),
  ('cycle -> WHILE gotoW ( expression ) gotoFalse block continueGoW','cycle',8,'p_cycle','sample_ly.py',543),
  ('repeat -> REPLAY CTE_INTEGER gotoR [ repeatA ] ;','repeat',7,'p_repeat','sample_ly.py',546),
  ('repeatA -> command repeatB','repeatA',2,'p_repeatA','sample_ly.py',558),
  ('repeatB -> repeatA','repeatB',1,'p_repeatB','sample_ly.py',561),
  ('repeatB -> empty','repeatB',1,'p_repeatB','sample_ly.py',562),
  ('expression -> exp = = exp','expression',4,'p_expression','sample_ly.py',565),
  ('expression -> exp < > exp','expression',4,'p_expression','sample_ly.py',566),
  ('expression -> exp < = exp','expression',4,'p_expression','sample_ly.py',567),
  ('expression -> exp > = exp','expression',4,'p_expression','sample_ly.py',568),
  ('expression -> exp > exp','expression',3,'p_expression','sample_ly.py',569),
  ('expression -> exp < exp','expression',3,'p_expression','sample_ly.py',570),
  ('expression -> exp AND exp','expression',3,'p_expression','sample_ly.py',571),
  ('expression -> exp OR exp','expression',3,'p_expression','sample_ly.py',572),
  ('expression -> exp empty','expression',2,'p_expression','sample_ly.py',573),
  ('exp -> exp + exp','exp',3,'p_exp','sample_ly.py',618),
  ('exp -> exp - exp','exp',3,'p_exp','sample_ly.py',619),
  ('exp -> exp * exp','exp',3,'p_exp','sample_ly.py',620),
  ('exp -> exp / exp','exp',3,'p_exp','sample_ly.py',621),
  ('exp -> factor empty','exp',2,'p_exp','sample_ly.py',622),
  ('return -> RETURN exp ;','return',3,'p_return','sample_ly.py',657),
  ('factor -> ( expression )','factor',3,'p_factor','sample_ly.py',669),
  ('factor -> var_cte','factor',1,'p_factor','sample_ly.py',670),
  ('figure -> OVAL','figure',1,'p_figure','sample_ly.py',678),
  ('figure -> TRIO','figure',1,'p_figure','sample_ly.py',679),
  ('figure -> QUAD','figure',1,'p_figure','sample_ly.py',680),
  ('figure -> ARC','figure',1,'p_figure','sample_ly.py',681),
  ('move -> UP','move',1,'p_move','sample_ly.py',685),
  ('move -> DOWN','move',1,'p_move','sample_ly.py',686),
  ('move -> LEFT','move',1,'p_move','sample_ly.py',687),
  ('move -> RIGHT','move',1,'p_move','sample_ly.py',688),
  ('color -> RED','color',1,'p_color','sample_ly.py',692),
  ('color -> YELLOW','color',1,'p_color','sample_ly.py',693),
  ('color -> BLUE','color',1,'p_color','sample_ly.py',694),
  ('color -> GREEN','color',1,'p_color','sample_ly.py',695),
  ('color -> BLACK','color',1,'p_color','sample_ly.py',696),
  ('color -> WHITE','color',1,'p_color','sample_ly.py',697),
  ('color -> ORANGE','color',1,'p_color','sample_ly.py',698),
  ('color -> PURPLE','color',1,'p_color','sample_ly.py',699),
  ('color -> CYAN','color',1,'p_color','sample_ly.py',700),
  ('var_cte -> id','var_cte',1,'p_var_cte','sample_ly.py',704),
  ('var_cte -> CTE_INTEGER','var_cte',1,'p_var_cte','sample_ly.py',705),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','sample_ly.py',706),
  ('var_cte -> TRUE','var_cte',1,'p_var_cte','sample_ly.py',707),
  ('var_cte -> FALSE','var_cte',1,'p_var_cte','sample_ly.py',708),
  ('gotoFalse -> <empty>','gotoFalse',0,'p_gotoFalse','sample_ly.py',751),
  ('gotoE -> <empty>','gotoE',0,'p_gotoE','sample_ly.py',761),
  ('gotoW -> <empty>','gotoW',0,'p_gotoW','sample_ly.py',765),
  ('gotoR -> <empty>','gotoR',0,'p_gotoR','sample_ly.py',769),
  ('continueGo -> <empty>','continueGo',0,'p_continueGo','sample_ly.py',780),
  ('continueGoW -> <empty>','continueGoW',0,'p_continueGoW','sample_ly.py',784),
  ('insertQuadMod -> <empty>','insertQuadMod',0,'p_insertQuadMod','sample_ly.py',788),
  ('endMod -> <empty>','endMod',0,'p_endMod','sample_ly.py',793),
  ('empty -> <empty>','empty',0,'p_empty','sample_ly.py',797),
]
