
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x17{\xe6C\x10\x9eJ[\tn\x14\x02R9\xb7;'
    
_lr_action_items = {'COUNT':([45,],[71,]),'YELLOW':([34,36,37,38,40,41,42,67,68,94,95,96,97,98,149,],[-104,-83,-103,-105,-115,-106,-102,103,-81,-82,-77,-79,-78,-80,103,]),'DOWN':([54,55,],[88,88,]),'WHILE':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,110,127,129,140,148,151,152,153,160,162,163,166,173,174,176,177,178,179,180,181,185,186,188,194,195,197,199,204,],[6,-8,-11,-10,-101,-13,-17,-12,-7,-16,-15,-100,-14,6,-9,-60,-51,-48,-55,-44,-59,-28,-62,-20,6,-114,-52,-54,-32,-115,6,-40,-38,-18,-112,-64,-53,-31,-111,-47,-61,-39,-63,-45,-19,-46,]),'REPLAY':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,110,127,129,140,148,151,152,153,160,162,163,166,173,174,176,177,178,179,180,181,185,186,188,194,195,197,199,204,],[7,-8,-11,-10,-101,-13,-17,-12,-7,-16,-15,-100,-14,7,-9,-60,-51,-48,-55,-44,-59,-28,-62,-20,7,-114,-52,-54,-32,-115,7,-40,-38,-18,-112,-64,-53,-31,-111,-47,-61,-39,-63,-45,-19,-46,]),'GREEN':([34,36,37,38,40,41,42,67,68,94,95,96,97,98,149,],[-104,-83,-103,-105,-115,-106,-102,102,-81,-82,-77,-79,-78,-80,102,]),'CYAN':([34,36,37,38,40,41,42,67,68,94,95,96,97,98,149,],[-104,-83,-103,-105,-115,-106,-102,104,-81,-82,-77,-79,-78,-80,104,]),'OVAL':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,109,110,127,129,132,140,148,151,152,153,160,162,163,166,173,174,176,177,178,179,180,181,185,186,188,194,195,197,199,204,],[5,-8,-11,-10,-101,-13,-17,-12,-7,-16,-15,-100,-14,5,-9,-60,-51,-48,5,-55,-44,-59,5,-28,-62,-20,5,-114,-52,-54,-32,-115,5,-40,-38,-18,-112,-64,-53,-31,-111,-47,-61,-39,-63,-45,-19,-46,]),'OFF':([19,],[54,]),'TRUE':([3,5,14,18,22,29,34,35,36,37,38,39,40,41,42,48,57,63,64,65,66,68,69,74,76,79,80,82,84,85,86,87,88,89,90,94,95,96,97,98,111,115,119,120,121,124,135,182,196,],[38,-84,-85,38,-86,-87,-104,38,-83,-103,-105,38,-115,-106,-102,38,38,38,38,38,38,-81,38,38,-30,38,38,38,38,-91,38,-88,-89,-90,38,-82,-77,-79,-78,-80,38,38,38,38,38,38,38,-37,38,]),'RED':([34,36,37,38,40,41,42,67,68,94,95,96,97,98,149,],[-104,-83,-103,-105,-115,-106,-102,107,-81,-82,-77,-79,-78,-80,107,]),'#':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,32,33,53,73,78,110,127,129,140,148,151,152,153,160,162,163,166,173,174,176,177,178,179,180,181,185,186,188,194,195,197,199,204,],[9,-8,-11,-10,-101,-13,-17,-12,-7,-16,-15,-100,-14,9,61,-9,-60,-51,-48,-55,-44,-59,-28,-62,-20,9,-114,-52,-54,-32,-115,9,-40,-38,-18,-112,-64,-53,-31,-111,-47,-61,-39,-63,-45,-19,-46,]),']':([34,36,37,38,40,41,42,53,68,94,95,96,97,98,112,113,129,131,132,136,137,148,156,157,158,161,188,],[-104,-83,-103,-105,-115,-106,-102,-60,-81,-82,-77,-79,-78,-80,134,-115,-59,155,-115,-56,-58,-62,-66,-65,-67,-57,-61,]),')':([34,36,37,38,40,41,42,51,62,68,76,77,83,94,95,96,97,98,108,114,115,117,118,122,123,133,141,142,144,145,146,147,165,168,183,184,190,200,202,203,205,],[-104,-83,-103,-105,-115,-106,-102,-115,94,-81,-30,116,-76,-82,-77,-79,-78,-80,130,138,139,-74,-73,-75,-72,159,164,-34,-70,-69,-68,-71,-115,189,-33,-36,-115,-22,-24,-35,-23,]),'(':([3,5,6,12,14,18,22,29,34,35,36,37,38,39,40,41,42,43,46,47,48,57,63,64,65,66,68,69,72,74,75,76,79,80,82,84,85,86,87,88,89,90,92,93,94,95,96,97,98,115,119,120,121,124,128,135,182,196,],[35,-84,-109,48,-85,35,-86,-87,-104,35,-83,-103,-105,35,-115,-106,-102,69,76,-29,35,35,35,35,35,35,-81,35,111,35,114,-30,35,35,35,35,-91,35,-88,-89,-90,35,-21,-113,-82,-77,-79,-78,-80,35,35,35,35,35,150,35,-37,35,]),'+':([34,36,37,38,39,40,41,42,51,67,68,94,95,96,97,98,113,117,118,122,123,125,126,144,145,146,147,],[-104,-83,-103,-105,63,-115,-106,-102,63,63,-81,-82,-77,-79,-78,-80,63,63,63,63,63,63,63,63,63,63,63,]),'*':([34,36,37,38,39,40,41,42,51,67,68,94,95,96,97,98,113,117,118,122,123,125,126,144,145,146,147,],[-104,-83,-103,-105,64,-115,-106,-102,64,64,-81,-82,64,-79,64,-80,64,64,64,64,64,64,64,64,64,64,64,]),'-':([34,36,37,38,39,40,41,42,51,67,68,94,95,96,97,98,113,117,118,122,123,125,126,144,145,146,147,],[-104,-83,-103,-105,65,-115,-106,-102,65,65,-81,-82,-77,-79,-78,-80,65,65,65,65,65,65,65,65,65,65,65,]),',':([34,36,37,38,40,41,42,51,68,83,94,95,96,97,98,113,117,118,122,123,142,144,145,146,147,165,190,],[-104,-83,-103,-105,-115,-106,-102,-115,-81,-76,-82,-77,-79,-78,-80,135,-74,-73,-75,-72,-34,-70,-69,-68,-71,182,201,]),'/':([34,36,37,38,39,40,41,42,51,67,68,94,95,96,97,98,113,117,118,122,123,125,126,144,145,146,147,],[-104,-83,-103,-105,66,-115,-106,-102,66,66,-81,-82,66,-79,66,-80,66,66,66,66,66,66,66,66,66,66,66,]),'PIPE':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,110,127,129,140,148,151,152,153,160,162,163,166,173,174,176,177,178,179,180,181,185,186,188,194,195,197,199,204,],[8,-8,-11,-10,-101,-13,-17,-12,-7,-16,-15,-100,-14,8,-9,-60,-51,-48,-55,-44,-59,-28,-62,-20,8,-114,-52,-54,-32,-115,8,-40,-38,-18,-112,-64,-53,-31,-111,-47,-61,-39,-63,-45,-19,-46,]),'INIT':([0,],[1,]),'ORANGE':([34,36,37,38,40,41,42,67,68,94,95,96,97,98,149,],[-104,-83,-103,-105,-115,-106,-102,105,-81,-82,-77,-79,-78,-80,105,]),';':([34,36,37,38,40,41,42,49,50,51,52,68,71,83,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,117,118,122,123,125,134,138,139,144,145,146,147,155,159,164,167,],[-104,-83,-103,-105,-115,-106,-102,78,-50,-115,-49,-81,110,-76,127,-82,-77,-79,-78,-80,-94,129,-98,-95,-93,-99,-97,-96,-92,-74,-73,-75,-72,148,160,162,163,-70,-69,-68,-71,179,180,181,188,]),'=':([23,34,36,37,38,40,41,42,51,68,80,81,84,94,95,96,97,98,],[57,-104,-83,-103,-105,-115,-106,-102,81,-81,119,121,124,-82,-77,-79,-78,-80,]),'<':([34,36,37,38,40,41,42,51,68,94,95,96,97,98,],[-104,-83,-103,-105,-115,-106,-102,80,-81,-82,-77,-79,-78,-80,]),'$end':([2,16,20,56,],[0,-3,-1,-2,]),'CTE_STRING':([18,],[50,]),'AND':([34,36,37,38,40,41,42,51,68,94,95,96,97,98,],[-104,-83,-103,-105,-115,-106,-102,79,-81,-82,-77,-79,-78,-80,]),'TRIO':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,109,110,127,129,132,140,148,151,152,153,160,162,163,166,173,174,176,177,178,179,180,181,185,186,188,194,195,197,199,204,],[14,-8,-11,-10,-101,-13,-17,-12,-7,-16,-15,-100,-14,14,-9,-60,-51,-48,14,-55,-44,-59,14,-28,-62,-20,14,-114,-52,-54,-32,-115,14,-40,-38,-18,-112,-64,-53,-31,-111,-47,-61,-39,-63,-45,-19,-46,]),'END':([1,4,10,11,13,15,17,21,24,25,26,27,28,30,31,33,53,58,59,60,73,78,110,127,129,140,148,151,153,160,162,163,166,174,176,177,178,179,180,181,185,186,188,194,195,197,199,204,],[16,-8,-11,-10,-101,-13,-17,56,-12,-7,-16,-15,-100,-14,-115,-9,-60,-6,-5,-4,-51,-48,-55,-44,-59,-28,-62,-20,-114,-52,-54,-32,-115,-40,-38,-18,-112,-64,-53,-31,-111,-47,-61,-39,-63,-45,-19,-46,]),'CLEAR':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,110,127,129,140,148,151,152,153,160,162,163,166,173,174,176,177,178,179,180,181,185,186,188,194,195,197,199,204,],[13,-8,-11,-10,-101,-13,-17,-12,-7,-16,-15,-100,-14,13,-9,-60,-51,-48,-55,-44,-59,-28,-62,-20,13,-114,-52,-54,-32,-115,13,-40,-38,-18,-112,-64,-53,-31,-111,-47,-61,-39,-63,-45,-19,-46,]),'ECHO':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,110,127,129,140,148,151,152,153,160,162,163,166,173,174,176,177,178,179,180,181,185,186,188,194,195,197,199,204,],[18,-8,-11,-10,-101,-13,-17,-12,-7,-16,-15,-100,-14,18,-9,-60,-51,-48,-55,-44,-59,-28,-62,-20,18,-114,-52,-54,-32,-115,18,-40,-38,-18,-112,-64,-53,-31,-111,-47,-61,-39,-63,-45,-19,-46,]),'SAMPLE':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,109,110,127,129,132,140,148,151,152,153,160,162,163,166,173,174,176,177,178,179,180,181,185,186,188,194,195,197,199,204,],[19,-8,-11,-10,-101,-13,-17,-12,-7,-16,-15,-100,-14,19,-9,-60,-51,-48,19,-55,-44,-59,19,-28,-62,-20,19,-114,-52,-54,-32,-115,19,-40,-38,-18,-112,-64,-53,-31,-111,-47,-61,-39,-63,-45,-19,-46,]),'CTE_INTEGER':([3,5,7,14,18,22,29,34,35,36,37,38,39,40,41,42,48,57,63,64,65,66,68,69,74,76,79,80,82,84,85,86,87,88,89,90,94,95,96,97,98,111,115,119,120,121,124,126,135,182,196,],[37,-84,44,-85,37,-86,-87,-104,37,-83,-103,-105,37,-115,-106,-102,37,37,37,37,37,37,-81,37,37,-30,37,37,37,37,-91,37,-88,-89,-90,37,-82,-77,-79,-78,-80,37,37,37,37,37,37,149,37,-37,37,]),'IN':([45,],[72,]),'QUAD':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,109,110,127,129,132,140,148,151,152,153,160,162,163,166,173,174,176,177,178,179,180,181,185,186,188,194,195,197,199,204,],[22,-8,-11,-10,-101,-13,-17,-12,-7,-16,-15,-100,-14,22,-9,-60,-51,-48,22,-55,-44,-59,22,-28,-62,-20,22,-114,-52,-54,-32,-115,22,-40,-38,-18,-112,-64,-53,-31,-111,-47,-61,-39,-63,-45,-19,-46,]),'[':([44,45,70,],[-110,74,109,]),'ELSE':([166,174,176,194,],[187,-40,-38,-39,]),'WHERE':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,110,127,129,140,148,151,152,153,160,162,163,166,173,174,176,177,178,179,180,181,185,186,188,194,195,197,199,204,],[28,-8,-11,-10,-101,-13,-17,-12,-7,-16,-15,-100,-14,28,-9,-60,-51,-48,-55,-44,-59,-28,-62,-20,28,-114,-52,-54,-32,-115,28,-40,-38,-18,-112,-64,-53,-31,-111,-47,-61,-39,-63,-45,-19,-46,]),'ID':([1,3,4,5,8,9,10,11,13,14,15,17,18,22,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,48,53,57,61,63,64,65,66,68,69,73,74,76,78,79,80,82,84,85,86,87,88,89,90,94,95,96,97,98,110,111,115,119,120,121,124,127,129,135,140,148,151,152,153,160,162,163,166,169,170,171,172,173,174,176,177,178,179,180,181,182,185,186,188,194,195,196,197,199,204,],[23,42,-8,-84,45,47,-11,-10,-101,-85,-13,-17,42,-86,-12,-7,-16,-15,-100,-87,-14,23,-9,-104,42,-83,-103,-105,42,-115,-106,-102,42,-60,42,92,42,42,42,42,-81,42,-51,42,-30,-48,42,42,42,42,-91,42,-88,-89,-90,42,-82,-77,-79,-78,-80,-55,42,42,42,42,42,42,-44,-59,42,-28,-62,-20,23,-114,-52,-54,-32,-115,-26,-25,-27,190,23,-40,-38,-18,-112,-64,-53,-31,-37,-111,-47,-61,-39,-63,42,-45,-19,-46,]),'IF':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,110,127,129,140,148,151,152,153,160,162,163,166,173,174,176,177,178,179,180,181,185,186,188,194,195,197,199,204,],[12,-8,-11,-10,-101,-13,-17,-12,-7,-16,-15,-100,-14,12,-9,-60,-51,-48,-55,-44,-59,-28,-62,-20,12,-114,-52,-54,-32,-115,12,-40,-38,-18,-112,-64,-53,-31,-111,-47,-61,-39,-63,-45,-19,-46,]),'BLUE':([34,36,37,38,40,41,42,67,68,94,95,96,97,98,149,],[-104,-83,-103,-105,-115,-106,-102,99,-81,-82,-77,-79,-78,-80,99,]),'ON':([19,],[55,]),'RIGHT':([54,55,],[85,85,]),'FALSE':([3,5,14,18,22,29,34,35,36,37,38,39,40,41,42,48,57,63,64,65,66,68,69,74,76,79,80,82,84,85,86,87,88,89,90,94,95,96,97,98,111,115,119,120,121,124,135,182,196,],[41,-84,-85,41,-86,-87,-104,41,-83,-103,-105,41,-115,-106,-102,41,41,41,41,41,41,-81,41,41,-30,41,41,41,41,-91,41,-88,-89,-90,41,-82,-77,-79,-78,-80,41,41,41,41,41,41,41,-37,41,]),'INT':([150,201,],[170,170,]),'OUT':([45,],[75,]),'FLOAT':([150,201,],[169,169,]),'CTE_FLOAT':([3,5,14,18,22,29,34,35,36,37,38,39,40,41,42,48,57,63,64,65,66,68,69,74,76,79,80,82,84,85,86,87,88,89,90,94,95,96,97,98,111,115,119,120,121,124,135,182,196,],[34,-84,-85,34,-86,-87,-104,34,-83,-103,-105,34,-115,-106,-102,34,34,34,34,34,34,-81,34,34,-30,34,34,34,34,-91,34,-88,-89,-90,34,-82,-77,-79,-78,-80,34,34,34,34,34,34,34,-37,34,]),'UP':([54,55,],[87,87,]),'PURPLE':([34,36,37,38,40,41,42,67,68,94,95,96,97,98,149,],[-104,-83,-103,-105,-115,-106,-102,101,-81,-82,-77,-79,-78,-80,101,]),'ARC':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,109,110,127,129,132,140,148,151,152,153,160,162,163,166,173,174,176,177,178,179,180,181,185,186,188,194,195,197,199,204,],[29,-8,-11,-10,-101,-13,-17,-12,-7,-16,-15,-100,-14,29,-9,-60,-51,-48,29,-55,-44,-59,29,-28,-62,-20,29,-114,-52,-54,-32,-115,29,-40,-38,-18,-112,-64,-53,-31,-111,-47,-61,-39,-63,-45,-19,-46,]),'BOOL':([150,201,],[171,171,]),'BLACK':([34,36,37,38,40,41,42,67,68,94,95,96,97,98,149,],[-104,-83,-103,-105,-115,-106,-102,106,-81,-82,-77,-79,-78,-80,106,]),'{':([92,93,116,128,130,143,154,187,189,198,],[-21,-113,-107,152,-107,152,152,-108,152,152,]),'>':([34,36,37,38,40,41,42,51,68,80,94,95,96,97,98,],[-104,-83,-103,-105,-115,-106,-102,84,-81,120,-82,-77,-79,-78,-80,]),'}':([10,11,13,15,17,24,26,27,28,30,33,53,73,78,110,127,129,140,148,152,160,162,163,166,173,174,175,176,178,179,180,181,185,186,188,191,192,193,194,195,197,204,],[-11,-10,-101,-13,-17,-12,-16,-15,-100,-14,-9,-60,-51,-48,-55,-44,-59,-28,-62,174,-52,-54,-32,-115,-115,-40,194,-38,-112,-64,-53,-31,-111,-47,-61,-43,-41,-42,-39,-63,-45,-46,]),'OR':([34,36,37,38,40,41,42,51,68,94,95,96,97,98,],[-104,-83,-103,-105,-115,-106,-102,82,-81,-82,-77,-79,-78,-80,]),'LEFT':([54,55,],[89,89,]),'MOD':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,110,127,129,140,148,151,153,160,162,163,166,174,176,177,178,179,180,181,185,186,188,194,195,197,199,204,],[32,-8,-11,-10,-101,-13,-17,-12,-7,-16,-15,-100,-14,32,-9,-60,-51,-48,-55,-44,-59,-28,-62,-20,-114,-52,-54,-32,-115,-40,-38,-18,-112,-64,-53,-31,-111,-47,-61,-39,-63,-45,-19,-46,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'figure':([1,31,109,132,152,173,],[3,3,3,3,3,3,]),'continueGo':([185,],[197,]),'color':([67,149,],[100,167,]),'callID':([9,],[46,]),'move':([54,55,],[86,90,]),'module':([1,31,],[4,4,]),'var_cte':([3,18,35,39,48,57,63,64,65,66,69,74,79,80,82,84,86,90,111,115,119,120,121,124,135,196,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,133,36,36,36,36,36,36,36,]),'gotoE':([187,],[198,]),'conditionA':([166,],[185,]),'writeA':([18,],[49,]),'vars':([150,201,],[168,205,]),'blockA':([152,],[176,]),'sumXparam':([182,],[196,]),'gotoFalse':([116,130,],[143,154,]),'write':([1,31,152,173,],[10,10,10,10,]),'program':([0,],[2,]),'moduleA':([128,],[153,]),'factor':([3,18,35,39,48,57,63,64,65,66,69,74,79,80,82,84,86,90,115,119,120,121,124,135,196,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'pipelineC':([113,],[136,]),'continueGoW':([178,],[195,]),'type':([150,201,],[172,172,]),'repeatB':([132,],[157,]),'empty':([31,40,51,113,132,165,166,173,190,],[58,68,83,137,158,184,186,191,202,]),'pipelineB':([74,135,],[112,161,]),'varsA':([190,],[200,]),'repeat':([1,31,152,173,],[15,15,15,15,]),'exp':([3,18,35,39,48,57,63,64,65,66,69,74,79,80,82,84,86,90,115,119,120,121,124,135,196,],[39,51,51,67,51,51,95,96,97,98,51,113,117,118,122,123,125,126,51,144,145,146,147,113,51,]),'repeatA':([109,132,],[131,156,]),'screen':([1,31,152,173,],[17,17,17,17,]),'endMod':([153,],[177,]),'insertEra':([76,],[115,]),'commandA':([19,],[53,]),'gotoW':([6,],[43,]),'gotoR':([44,],[70,]),'programA':([1,],[20,]),'programB':([1,31,],[21,59,]),'programC':([31,],[60,]),'insertQuadMod':([93,],[128,]),'blockB':([152,173,],[175,193,]),'condition':([1,31,152,173,],[11,11,11,11,]),'cycle':([1,31,152,173,],[24,24,24,24,]),'checkParam':([142,],[165,]),'statute':([1,31,152,173,],[25,25,173,173,]),'pipeline':([1,31,152,173,],[26,26,26,26,]),'blockC':([173,],[192,]),'calling':([1,31,152,173,],[27,27,27,27,]),'callingA':([115,],[140,]),'callingB':([115,196,],[141,203,]),'callingC':([165,],[183,]),'command':([1,31,109,132,152,173,],[30,30,132,132,30,30,]),'pipelineA':([45,],[73,]),'workspace':([1,31,],[31,31,]),'expression':([18,35,48,57,69,115,196,],[52,62,77,91,108,142,142,]),'assign':([1,31,152,173,],[33,33,33,33,]),'block':([128,143,154,189,198,],[151,166,178,199,204,]),'moduleID':([61,],[93,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INIT programA','program',2,'p_program','sample_ly.py',105),
  ('programA -> programB END','programA',2,'p_programA','sample_ly.py',116),
  ('programA -> END','programA',1,'p_programA','sample_ly.py',117),
  ('programB -> workspace programC','programB',2,'p_programB','sample_ly.py',121),
  ('programC -> programB','programC',1,'p_programC','sample_ly.py',125),
  ('programC -> empty','programC',1,'p_programC','sample_ly.py',126),
  ('workspace -> statute','workspace',1,'p_workspace','sample_ly.py',130),
  ('workspace -> module','workspace',1,'p_workspace','sample_ly.py',131),
  ('statute -> assign','statute',1,'p_statute','sample_ly.py',136),
  ('statute -> condition','statute',1,'p_statute','sample_ly.py',137),
  ('statute -> write','statute',1,'p_statute','sample_ly.py',138),
  ('statute -> cycle','statute',1,'p_statute','sample_ly.py',139),
  ('statute -> repeat','statute',1,'p_statute','sample_ly.py',140),
  ('statute -> command','statute',1,'p_statute','sample_ly.py',141),
  ('statute -> calling','statute',1,'p_statute','sample_ly.py',142),
  ('statute -> pipeline','statute',1,'p_statute','sample_ly.py',143),
  ('statute -> screen','statute',1,'p_statute','sample_ly.py',144),
  ('module -> MOD # moduleID insertQuadMod moduleA endMod','module',6,'p_module','sample_ly.py',149),
  ('moduleA -> ( vars ) block','moduleA',4,'p_moduleA','sample_ly.py',171),
  ('moduleA -> block','moduleA',1,'p_moduleA','sample_ly.py',172),
  ('moduleID -> ID','moduleID',1,'p_moduleID','sample_ly.py',175),
  ('vars -> type ID varsA','vars',3,'p_vars','sample_ly.py',179),
  ('varsA -> , vars','varsA',2,'p_varsA','sample_ly.py',201),
  ('varsA -> empty','varsA',1,'p_varsA','sample_ly.py',202),
  ('type -> INT','type',1,'p_type','sample_ly.py',205),
  ('type -> FLOAT','type',1,'p_type','sample_ly.py',206),
  ('type -> BOOL','type',1,'p_type','sample_ly.py',207),
  ('calling -> # callID ( insertEra callingA','calling',5,'p_calling','sample_ly.py',213),
  ('callID -> ID','callID',1,'p_callID','sample_ly.py',220),
  ('insertEra -> <empty>','insertEra',0,'p_insertEra','sample_ly.py',227),
  ('callingA -> callingB ) ;','callingA',3,'p_callingA','sample_ly.py',238),
  ('callingA -> ) ;','callingA',2,'p_callingA','sample_ly.py',239),
  ('callingB -> expression checkParam callingC','callingB',3,'p_callingB','sample_ly.py',244),
  ('checkParam -> <empty>','checkParam',0,'p_checkParam','sample_ly.py',247),
  ('callingC -> , sumXparam callingB','callingC',3,'p_callingC','sample_ly.py',258),
  ('callingC -> empty','callingC',1,'p_callingC','sample_ly.py',259),
  ('sumXparam -> <empty>','sumXparam',0,'p_sumXparam','sample_ly.py',262),
  ('block -> { blockA','block',2,'p_block','sample_ly.py',267),
  ('blockA -> blockB }','blockA',2,'p_blockA','sample_ly.py',270),
  ('blockA -> }','blockA',1,'p_blockA','sample_ly.py',271),
  ('blockB -> statute blockC','blockB',2,'p_blockB','sample_ly.py',274),
  ('blockC -> blockB','blockC',1,'p_blockC','sample_ly.py',277),
  ('blockC -> empty','blockC',1,'p_blockC','sample_ly.py',278),
  ('assign -> ID = expression ;','assign',4,'p_assign','sample_ly.py',281),
  ('condition -> IF ( expression ) gotoFalse block conditionA continueGo','condition',8,'p_condition','sample_ly.py',308),
  ('conditionA -> ELSE gotoE block','conditionA',3,'p_conditionA','sample_ly.py',311),
  ('conditionA -> empty','conditionA',1,'p_conditionA','sample_ly.py',312),
  ('write -> ECHO writeA ;','write',3,'p_write','sample_ly.py',315),
  ('writeA -> expression','writeA',1,'p_writeA','sample_ly.py',325),
  ('writeA -> CTE_STRING','writeA',1,'p_writeA','sample_ly.py',326),
  ('pipeline -> PIPE ID pipelineA','pipeline',3,'p_pipeline','sample_ly.py',330),
  ('pipelineA -> [ pipelineB ] ;','pipelineA',4,'p_pipelineA','sample_ly.py',333),
  ('pipelineA -> IN ( var_cte ) ;','pipelineA',5,'p_pipelineA','sample_ly.py',334),
  ('pipelineA -> OUT ( ) ;','pipelineA',4,'p_pipelineA','sample_ly.py',335),
  ('pipelineA -> COUNT ;','pipelineA',2,'p_pipelineA','sample_ly.py',336),
  ('pipelineB -> exp pipelineC','pipelineB',2,'p_pipelineB','sample_ly.py',339),
  ('pipelineC -> , pipelineB','pipelineC',2,'p_pipelineC','sample_ly.py',342),
  ('pipelineC -> empty','pipelineC',1,'p_pipelineC','sample_ly.py',343),
  ('command -> figure exp exp color ;','command',5,'p_command','sample_ly.py',346),
  ('command -> SAMPLE commandA','command',2,'p_command','sample_ly.py',347),
  ('commandA -> ON move exp CTE_INTEGER color ;','commandA',6,'p_commandA','sample_ly.py',365),
  ('commandA -> OFF move exp ;','commandA',4,'p_commandA','sample_ly.py',366),
  ('cycle -> WHILE gotoW ( expression ) gotoFalse block continueGoW','cycle',8,'p_cycle','sample_ly.py',375),
  ('repeat -> REPLAY CTE_INTEGER gotoR [ repeatA ] ;','repeat',7,'p_repeat','sample_ly.py',378),
  ('repeatA -> command repeatB','repeatA',2,'p_repeatA','sample_ly.py',382),
  ('repeatB -> repeatA','repeatB',1,'p_repeatB','sample_ly.py',385),
  ('repeatB -> empty','repeatB',1,'p_repeatB','sample_ly.py',386),
  ('expression -> exp = = exp','expression',4,'p_expression','sample_ly.py',389),
  ('expression -> exp < > exp','expression',4,'p_expression','sample_ly.py',390),
  ('expression -> exp < = exp','expression',4,'p_expression','sample_ly.py',391),
  ('expression -> exp > = exp','expression',4,'p_expression','sample_ly.py',392),
  ('expression -> exp > exp','expression',3,'p_expression','sample_ly.py',393),
  ('expression -> exp < exp','expression',3,'p_expression','sample_ly.py',394),
  ('expression -> exp AND exp','expression',3,'p_expression','sample_ly.py',395),
  ('expression -> exp OR exp','expression',3,'p_expression','sample_ly.py',396),
  ('expression -> exp empty','expression',2,'p_expression','sample_ly.py',397),
  ('exp -> exp + exp','exp',3,'p_exp','sample_ly.py',431),
  ('exp -> exp - exp','exp',3,'p_exp','sample_ly.py',432),
  ('exp -> exp * exp','exp',3,'p_exp','sample_ly.py',433),
  ('exp -> exp / exp','exp',3,'p_exp','sample_ly.py',434),
  ('exp -> factor empty','exp',2,'p_exp','sample_ly.py',435),
  ('factor -> ( expression )','factor',3,'p_factor','sample_ly.py',460),
  ('factor -> var_cte','factor',1,'p_factor','sample_ly.py',461),
  ('figure -> OVAL','figure',1,'p_figure','sample_ly.py',468),
  ('figure -> TRIO','figure',1,'p_figure','sample_ly.py',469),
  ('figure -> QUAD','figure',1,'p_figure','sample_ly.py',470),
  ('figure -> ARC','figure',1,'p_figure','sample_ly.py',471),
  ('move -> UP','move',1,'p_move','sample_ly.py',475),
  ('move -> DOWN','move',1,'p_move','sample_ly.py',476),
  ('move -> LEFT','move',1,'p_move','sample_ly.py',477),
  ('move -> RIGHT','move',1,'p_move','sample_ly.py',478),
  ('color -> RED','color',1,'p_color','sample_ly.py',482),
  ('color -> YELLOW','color',1,'p_color','sample_ly.py',483),
  ('color -> BLUE','color',1,'p_color','sample_ly.py',484),
  ('color -> GREEN','color',1,'p_color','sample_ly.py',485),
  ('color -> BLACK','color',1,'p_color','sample_ly.py',486),
  ('color -> ORANGE','color',1,'p_color','sample_ly.py',487),
  ('color -> PURPLE','color',1,'p_color','sample_ly.py',488),
  ('color -> CYAN','color',1,'p_color','sample_ly.py',489),
  ('screen -> WHERE','screen',1,'p_screen','sample_ly.py',493),
  ('screen -> CLEAR','screen',1,'p_screen','sample_ly.py',494),
  ('var_cte -> ID','var_cte',1,'p_var_cte','sample_ly.py',497),
  ('var_cte -> CTE_INTEGER','var_cte',1,'p_var_cte','sample_ly.py',498),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','sample_ly.py',499),
  ('var_cte -> TRUE','var_cte',1,'p_var_cte','sample_ly.py',500),
  ('var_cte -> FALSE','var_cte',1,'p_var_cte','sample_ly.py',501),
  ('gotoFalse -> <empty>','gotoFalse',0,'p_gotoFalse','sample_ly.py',536),
  ('gotoE -> <empty>','gotoE',0,'p_gotoE','sample_ly.py',543),
  ('gotoW -> <empty>','gotoW',0,'p_gotoW','sample_ly.py',547),
  ('gotoR -> <empty>','gotoR',0,'p_gotoR','sample_ly.py',551),
  ('continueGo -> <empty>','continueGo',0,'p_continueGo','sample_ly.py',555),
  ('continueGoW -> <empty>','continueGoW',0,'p_continueGoW','sample_ly.py',559),
  ('insertQuadMod -> <empty>','insertQuadMod',0,'p_insertQuadMod','sample_ly.py',563),
  ('endMod -> <empty>','endMod',0,'p_endMod','sample_ly.py',568),
  ('empty -> <empty>','empty',0,'p_empty','sample_ly.py',572),
]
