
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'E]\x8eY^\x0c4\xb9\xc3;\xdf\xe1\x8ci$\xe1'
    
_lr_action_items = {'YELLOW':([24,37,38,39,41,42,43,44,71,76,100,101,102,103,104,148,149,210,],[-31,-85,-108,-105,-118,-106,-109,-107,-83,109,-84,-79,-81,-80,-82,109,-30,-29,]),'DOWN':([57,58,],[92,92,]),'WHILE':([1,4,8,11,12,14,16,18,25,26,27,30,31,33,34,36,56,82,117,134,139,147,153,154,155,161,164,174,175,177,178,179,180,181,185,186,188,190,197,198,200,204,209,213,],[6,-8,-16,-17,-11,-104,-13,-18,-10,-12,-7,-15,-103,-14,6,-9,-62,-53,-49,-61,-33,-64,-21,6,-117,-37,-118,6,-45,-43,-19,-115,-66,-36,-114,-52,-63,-56,-44,-65,-50,-20,-51,-57,]),'REPLAY':([1,4,8,11,12,14,16,18,25,26,27,30,31,33,34,36,56,82,117,134,139,147,153,154,155,161,164,174,175,177,178,179,180,181,185,186,188,190,197,198,200,204,209,213,],[7,-8,-16,-17,-11,-104,-13,-18,-10,-12,-7,-15,-103,-14,7,-9,-62,-53,-49,-61,-33,-64,-21,7,-117,-37,-118,7,-45,-43,-19,-115,-66,-36,-114,-52,-63,-56,-44,-65,-50,-20,-51,-57,]),'GREEN':([24,37,38,39,41,42,43,44,71,76,100,101,102,103,104,148,149,210,],[-31,-85,-108,-105,-118,-106,-109,-107,-83,108,-84,-79,-81,-80,-82,108,-30,-29,]),'CYAN':([24,37,38,39,41,42,43,44,71,76,100,101,102,103,104,148,149,210,],[-31,-85,-108,-105,-118,-106,-109,-107,-83,110,-84,-79,-81,-80,-82,110,-30,-29,]),'OVAL':([1,4,8,11,12,14,16,18,25,26,27,30,31,33,34,36,56,82,116,117,134,137,139,147,153,154,155,161,164,174,175,177,178,179,180,181,185,186,188,190,197,198,200,204,209,213,],[5,-8,-16,-17,-11,-104,-13,-18,-10,-12,-7,-15,-103,-14,5,-9,-62,-53,5,-49,-61,5,-33,-64,-21,5,-117,-37,-118,5,-45,-43,-19,-115,-66,-36,-114,-52,-63,-56,-44,-65,-50,-20,-51,-57,]),'OFF':([20,],[57,]),'TRUE':([3,5,15,19,23,24,32,37,38,39,40,41,42,43,44,45,48,51,60,71,72,73,74,75,77,80,83,84,86,88,89,90,91,92,93,94,95,100,101,102,103,104,118,121,122,124,126,149,166,182,189,199,210,],[38,-86,-87,38,-88,-31,-89,-85,-108,-105,38,-118,-106,-109,-107,38,38,38,-32,-83,38,38,38,38,38,-35,38,38,38,38,-93,38,-90,-91,-92,38,38,-84,-79,-81,-80,-82,38,38,38,38,38,-30,-32,-42,38,38,-29,]),'[':([24,47,78,96,97,149,168,],[60,-113,116,131,132,166,191,]),'RED':([24,37,38,39,41,42,43,44,71,76,100,101,102,103,104,148,149,210,],[-31,-85,-108,-105,-118,-106,-109,-107,-83,114,-84,-79,-81,-80,-82,114,-30,-29,]),'#':([1,4,8,11,12,14,16,18,25,26,27,30,31,33,34,35,36,56,82,117,134,139,147,153,154,155,161,164,174,175,177,178,179,180,181,185,186,188,190,197,198,200,204,209,213,],[10,-8,-16,-17,-11,-104,-13,-18,-10,-12,-7,-15,-103,-14,10,69,-9,-62,-53,-49,-61,-33,-64,-21,10,-117,-37,-118,10,-45,-43,-19,-115,-66,-36,-114,-52,-63,-56,-44,-65,-50,-20,-51,-57,]),']':([24,37,38,39,41,42,43,44,56,71,100,101,102,103,104,130,134,136,137,147,149,150,151,158,159,160,188,202,203,210,],[-31,-85,-108,-105,-118,-106,-109,-107,-62,-83,-84,-79,-81,-80,-82,149,-61,157,-118,-64,-30,167,168,-68,-67,-69,-63,210,211,-29,]),')':([24,37,38,39,41,42,43,44,54,70,71,80,81,87,100,101,102,103,104,115,118,120,123,125,127,140,141,143,144,145,146,149,163,169,183,184,193,205,207,208,210,212,],[-31,-85,-108,-105,-118,-106,-109,-107,-118,100,-83,-35,119,-78,-84,-79,-81,-80,-82,135,138,-76,-75,-77,-74,162,-39,-72,-71,-70,-73,-30,-118,192,-38,-41,-118,-23,-25,-40,-29,-24,]),'(':([3,5,6,13,15,19,23,24,32,37,38,39,40,41,42,43,44,45,46,48,49,50,51,60,71,72,73,74,75,77,80,83,84,86,88,89,90,91,92,93,94,95,98,99,100,101,102,103,104,118,121,122,124,126,133,149,166,182,189,199,210,],[40,-86,-112,51,-87,40,-88,-31,-89,-85,-108,-105,40,-118,-106,-109,-107,40,77,40,80,-34,40,-32,-83,40,40,40,40,40,-35,40,40,40,40,-93,40,-90,-91,-92,40,40,-22,-116,-84,-79,-81,-80,-82,40,40,40,40,40,152,-30,-32,-42,40,40,-29,]),'+':([24,37,38,39,41,42,43,44,45,54,71,76,100,101,102,103,104,120,123,125,127,128,129,130,143,144,145,146,149,202,210,],[-31,-85,-108,-105,-118,-106,-109,-107,72,72,-83,72,-84,-79,-81,-80,-82,72,72,72,72,72,72,72,72,72,72,72,-30,72,-29,]),'*':([24,37,38,39,41,42,43,44,45,54,71,76,100,101,102,103,104,120,123,125,127,128,129,130,143,144,145,146,149,202,210,],[-31,-85,-108,-105,-118,-106,-109,-107,73,73,-83,73,-84,73,-81,73,-82,73,73,73,73,73,73,73,73,73,73,73,-30,73,-29,]),'-':([24,37,38,39,41,42,43,44,45,54,71,76,100,101,102,103,104,120,123,125,127,128,129,130,143,144,145,146,149,202,210,],[-31,-85,-108,-105,-118,-106,-109,-107,74,74,-83,74,-84,-79,-81,-80,-82,74,74,74,74,74,74,74,74,74,74,74,-30,74,-29,]),',':([24,37,38,39,41,42,43,44,54,71,87,100,101,102,103,104,120,123,125,127,141,143,144,145,146,149,163,193,210,],[-31,-85,-108,-105,-118,-106,-109,-107,-118,-83,-78,-84,-79,-81,-80,-82,-76,-75,-77,-74,-39,-72,-71,-70,-73,-30,182,206,-29,]),'/':([24,37,38,39,41,42,43,44,45,54,71,76,100,101,102,103,104,120,123,125,127,128,129,130,143,144,145,146,149,202,210,],[-31,-85,-108,-105,-118,-106,-109,-107,75,75,-83,75,-84,75,-81,75,-82,75,75,75,75,75,75,75,75,75,75,75,-30,75,-29,]),'INIT':([0,],[1,]),'ORANGE':([24,37,38,39,41,42,43,44,71,76,100,101,102,103,104,148,149,210,],[-31,-85,-108,-105,-118,-106,-109,-107,-83,111,-84,-79,-81,-80,-82,111,-30,-29,]),';':([24,37,38,39,41,42,43,44,52,53,54,55,71,79,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,120,123,125,127,128,138,143,144,145,146,149,157,162,165,167,210,211,],[-31,-85,-108,-105,-118,-106,-109,-107,82,-55,-118,-54,-83,117,-78,-84,-79,-81,-80,-82,-96,134,-101,-97,-95,-102,-100,-98,-99,-94,-76,-75,-77,-74,147,161,-72,-71,-70,-73,-30,180,181,188,190,-29,213,]),'=':([9,24,37,38,39,41,42,43,44,54,71,84,85,88,100,101,102,103,104,149,210,],[48,-31,-85,-108,-105,-118,-106,-109,-107,85,-83,121,124,126,-84,-79,-81,-80,-82,-30,-29,]),'<':([24,37,38,39,41,42,43,44,54,71,100,101,102,103,104,149,210,],[-31,-85,-108,-105,-118,-106,-109,-107,84,-83,-84,-79,-81,-80,-82,-30,-29,]),'$end':([2,17,21,59,],[0,-3,-1,-2,]),'CTE_STRING':([19,],[53,]),'AND':([24,37,38,39,41,42,43,44,54,71,100,101,102,103,104,149,210,],[-31,-85,-108,-105,-118,-106,-109,-107,83,-83,-84,-79,-81,-80,-82,-30,-29,]),'TRIO':([1,4,8,11,12,14,16,18,25,26,27,30,31,33,34,36,56,82,116,117,134,137,139,147,153,154,155,161,164,174,175,177,178,179,180,181,185,186,188,190,197,198,200,204,209,213,],[15,-8,-16,-17,-11,-104,-13,-18,-10,-12,-7,-15,-103,-14,15,-9,-62,-53,15,-49,-61,15,-33,-64,-21,15,-117,-37,-118,15,-45,-43,-19,-115,-66,-36,-114,-52,-63,-56,-44,-65,-50,-20,-51,-57,]),'END':([1,4,8,11,12,14,16,18,22,25,26,27,30,31,33,34,36,56,66,67,68,82,117,134,139,147,153,155,161,164,175,177,178,179,180,181,185,186,188,190,197,198,200,204,209,213,],[17,-8,-16,-17,-11,-104,-13,-18,59,-10,-12,-7,-15,-103,-14,-118,-9,-62,-6,-5,-4,-53,-49,-61,-33,-64,-21,-117,-37,-118,-45,-43,-19,-115,-66,-36,-114,-52,-63,-56,-44,-65,-50,-20,-51,-57,]),'CLEAR':([1,4,8,11,12,14,16,18,25,26,27,30,31,33,34,36,56,82,117,134,139,147,153,154,155,161,164,174,175,177,178,179,180,181,185,186,188,190,197,198,200,204,209,213,],[14,-8,-16,-17,-11,-104,-13,-18,-10,-12,-7,-15,-103,-14,14,-9,-62,-53,-49,-61,-33,-64,-21,14,-117,-37,-118,14,-45,-43,-19,-115,-66,-36,-114,-52,-63,-56,-44,-65,-50,-20,-51,-57,]),'ECHO':([1,4,8,11,12,14,16,18,25,26,27,30,31,33,34,36,56,82,117,134,139,147,153,154,155,161,164,174,175,177,178,179,180,181,185,186,188,190,197,198,200,204,209,213,],[19,-8,-16,-17,-11,-104,-13,-18,-10,-12,-7,-15,-103,-14,19,-9,-62,-53,-49,-61,-33,-64,-21,19,-117,-37,-118,19,-45,-43,-19,-115,-66,-36,-114,-52,-63,-56,-44,-65,-50,-20,-51,-57,]),'SAMPLE':([1,4,8,11,12,14,16,18,25,26,27,30,31,33,34,36,56,82,116,117,134,137,139,147,153,154,155,161,164,174,175,177,178,179,180,181,185,186,188,190,197,198,200,204,209,213,],[20,-8,-16,-17,-11,-104,-13,-18,-10,-12,-7,-15,-103,-14,20,-9,-62,-53,20,-49,-61,20,-33,-64,-21,20,-117,-37,-118,20,-45,-43,-19,-115,-66,-36,-114,-52,-63,-56,-44,-65,-50,-20,-51,-57,]),'CTE_INTEGER':([3,5,7,15,19,23,24,32,37,38,39,40,41,42,43,44,45,48,51,60,71,72,73,74,75,77,80,83,84,86,88,89,90,91,92,93,94,95,100,101,102,103,104,118,121,122,124,126,129,131,132,149,166,182,189,191,199,210,],[42,-86,47,-87,42,-88,-31,-89,-85,-108,-105,42,-118,-106,-109,-107,42,42,42,-32,-83,42,42,42,42,42,-35,42,42,42,42,-93,42,-90,-91,-92,42,42,-84,-79,-81,-80,-82,42,42,42,42,42,148,150,151,-30,-32,-42,42,203,42,-29,]),'QUAD':([1,4,8,11,12,14,16,18,25,26,27,30,31,33,34,36,56,82,116,117,134,137,139,147,153,154,155,161,164,174,175,177,178,179,180,181,185,186,188,190,197,198,200,204,209,213,],[23,-8,-16,-17,-11,-104,-13,-18,-10,-12,-7,-15,-103,-14,23,-9,-62,-53,23,-49,-61,23,-33,-64,-21,23,-117,-37,-118,23,-45,-43,-19,-115,-66,-36,-114,-52,-63,-56,-44,-65,-50,-20,-51,-57,]),'WHITE':([24,37,38,39,41,42,43,44,71,76,100,101,102,103,104,148,149,210,],[-31,-85,-108,-105,-118,-106,-109,-107,-83,113,-84,-79,-81,-80,-82,113,-30,-29,]),'ELSE':([164,175,177,197,],[187,-45,-43,-44,]),'WHERE':([1,4,8,11,12,14,16,18,25,26,27,30,31,33,34,36,56,82,117,134,139,147,153,154,155,161,164,174,175,177,178,179,180,181,185,186,188,190,197,198,200,204,209,213,],[31,-8,-16,-17,-11,-104,-13,-18,-10,-12,-7,-15,-103,-14,31,-9,-62,-53,-49,-61,-33,-64,-21,31,-117,-37,-118,31,-45,-43,-19,-115,-66,-36,-114,-52,-63,-56,-44,-65,-50,-20,-51,-57,]),'ID':([1,3,4,5,8,10,11,12,14,15,16,18,19,23,24,25,26,27,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,48,51,56,60,61,62,63,64,65,69,71,72,73,74,75,77,80,82,83,84,86,88,89,90,91,92,93,94,95,100,101,102,103,104,117,118,121,122,124,126,134,139,147,149,153,154,155,161,164,166,170,171,172,173,174,175,177,178,179,180,181,182,185,186,188,189,190,197,198,199,200,204,209,210,213,],[24,24,-8,-86,-16,50,-17,-11,-104,-87,-13,-18,24,-88,-31,-10,-12,-7,-15,-103,-89,-14,24,-9,-85,-108,-105,24,-118,-106,-109,-107,24,24,24,-62,-32,-58,-59,96,-60,97,98,-83,24,24,24,24,24,-35,-53,24,24,24,24,-93,24,-90,-91,-92,24,24,-84,-79,-81,-80,-82,-49,24,24,24,24,24,-61,-33,-64,-30,-21,24,-117,-37,-118,-32,-27,-26,-28,193,24,-45,-43,-19,-115,-66,-36,-42,-114,-52,-63,24,-56,-44,-65,24,-50,-20,-51,-29,-57,]),'IF':([1,4,8,11,12,14,16,18,25,26,27,30,31,33,34,36,56,82,117,134,139,147,153,154,155,161,164,174,175,177,178,179,180,181,185,186,188,190,197,198,200,204,209,213,],[13,-8,-16,-17,-11,-104,-13,-18,-10,-12,-7,-15,-103,-14,13,-9,-62,-53,-49,-61,-33,-64,-21,13,-117,-37,-118,13,-45,-43,-19,-115,-66,-36,-114,-52,-63,-56,-44,-65,-50,-20,-51,-57,]),'BLUE':([24,37,38,39,41,42,43,44,71,76,100,101,102,103,104,148,149,210,],[-31,-85,-108,-105,-118,-106,-109,-107,-83,105,-84,-79,-81,-80,-82,105,-30,-29,]),'ON':([20,],[58,]),'ARR':([1,4,8,11,12,14,16,18,25,26,27,30,31,33,34,36,56,82,117,134,139,147,153,154,155,161,164,174,175,177,178,179,180,181,185,186,188,190,197,198,200,204,209,213,],[28,-8,-16,-17,-11,-104,-13,-18,-10,-12,-7,-15,-103,-14,28,-9,-62,-53,-49,-61,-33,-64,-21,28,-117,-37,-118,28,-45,-43,-19,-115,-66,-36,-114,-52,-63,-56,-44,-65,-50,-20,-51,-57,]),'RIGHT':([57,58,],[89,89,]),'FALSE':([3,5,15,19,23,24,32,37,38,39,40,41,42,43,44,45,48,51,60,71,72,73,74,75,77,80,83,84,86,88,89,90,91,92,93,94,95,100,101,102,103,104,118,121,122,124,126,149,166,182,189,199,210,],[43,-86,-87,43,-88,-31,-89,-85,-108,-105,43,-118,-106,-109,-107,43,43,43,-32,-83,43,43,43,43,43,-35,43,43,43,43,-93,43,-90,-91,-92,43,43,-84,-79,-81,-80,-82,43,43,43,43,43,-30,-32,-42,43,43,-29,]),'MAT':([1,4,8,11,12,14,16,18,25,26,27,30,31,33,34,36,56,82,117,134,139,147,153,154,155,161,164,174,175,177,178,179,180,181,185,186,188,190,197,198,200,204,209,213,],[29,-8,-16,-17,-11,-104,-13,-18,-10,-12,-7,-15,-103,-14,29,-9,-62,-53,-49,-61,-33,-64,-21,29,-117,-37,-118,29,-45,-43,-19,-115,-66,-36,-114,-52,-63,-56,-44,-65,-50,-20,-51,-57,]),'INT':([28,29,152,206,],[61,61,171,171,]),'FLOAT':([28,29,152,206,],[62,62,170,170,]),'CTE_FLOAT':([3,5,15,19,23,24,32,37,38,39,40,41,42,43,44,45,48,51,60,71,72,73,74,75,77,80,83,84,86,88,89,90,91,92,93,94,95,100,101,102,103,104,118,121,122,124,126,149,166,182,189,199,210,],[44,-86,-87,44,-88,-31,-89,-85,-108,-105,44,-118,-106,-109,-107,44,44,44,-32,-83,44,44,44,44,44,-35,44,44,44,44,-93,44,-90,-91,-92,44,44,-84,-79,-81,-80,-82,44,44,44,44,44,-30,-32,-42,44,44,-29,]),'UP':([57,58,],[91,91,]),'PURPLE':([24,37,38,39,41,42,43,44,71,76,100,101,102,103,104,148,149,210,],[-31,-85,-108,-105,-118,-106,-109,-107,-83,107,-84,-79,-81,-80,-82,107,-30,-29,]),'ARC':([1,4,8,11,12,14,16,18,25,26,27,30,31,33,34,36,56,82,116,117,134,137,139,147,153,154,155,161,164,174,175,177,178,179,180,181,185,186,188,190,197,198,200,204,209,213,],[32,-8,-16,-17,-11,-104,-13,-18,-10,-12,-7,-15,-103,-14,32,-9,-62,-53,32,-49,-61,32,-33,-64,-21,32,-117,-37,-118,32,-45,-43,-19,-115,-66,-36,-114,-52,-63,-56,-44,-65,-50,-20,-51,-57,]),'BOOL':([28,29,152,206,],[64,64,172,172,]),'BLACK':([24,37,38,39,41,42,43,44,71,76,100,101,102,103,104,148,149,210,],[-31,-85,-108,-105,-118,-106,-109,-107,-83,112,-84,-79,-81,-80,-82,112,-30,-29,]),'{':([98,99,119,133,135,142,156,187,192,201,],[-22,-116,-110,154,-110,154,154,-111,154,154,]),'>':([24,37,38,39,41,42,43,44,54,71,84,100,101,102,103,104,149,210,],[-31,-85,-108,-105,-118,-106,-109,-107,88,-83,122,-84,-79,-81,-80,-82,-30,-29,]),'}':([8,11,12,14,16,18,25,26,30,31,33,36,56,82,117,134,139,147,154,161,164,174,175,176,177,179,180,181,185,186,188,190,194,195,196,197,198,200,209,213,],[-16,-17,-11,-104,-13,-18,-10,-12,-15,-103,-14,-9,-62,-53,-49,-61,-33,-64,175,-37,-118,-118,-45,197,-43,-115,-66,-36,-114,-52,-63,-56,-48,-46,-47,-44,-65,-50,-51,-57,]),'OR':([24,37,38,39,41,42,43,44,54,71,100,101,102,103,104,149,210,],[-31,-85,-108,-105,-118,-106,-109,-107,86,-83,-84,-79,-81,-80,-82,-30,-29,]),'LEFT':([57,58,],[93,93,]),'MOD':([1,4,8,11,12,14,16,18,25,26,27,30,31,33,34,36,56,82,117,134,139,147,153,155,161,164,175,177,178,179,180,181,185,186,188,190,197,198,200,204,209,213,],[35,-8,-16,-17,-11,-104,-13,-18,-10,-12,-7,-15,-103,-14,35,-9,-62,-53,-49,-61,-33,-64,-21,-117,-37,-118,-45,-43,-19,-115,-66,-36,-114,-52,-63,-56,-44,-65,-50,-20,-51,-57,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'figure':([1,34,116,137,154,174,],[3,3,3,3,3,3,]),'continueGo':([185,],[200,]),'color':([76,148,],[106,165,]),'callID':([10,],[49,]),'move':([57,58,],[90,94,]),'module':([1,34,],[4,4,]),'var_cte':([3,19,40,45,48,51,72,73,74,75,77,83,84,86,88,90,94,95,118,121,122,124,126,189,199,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'vars':([152,206,],[169,212,]),'conditionA':([164,],[185,]),'writeA':([19,],[52,]),'array':([1,34,154,174,],[8,8,8,8,]),'id':([1,3,19,34,40,45,48,51,72,73,74,75,77,83,84,86,88,90,94,95,118,121,122,124,126,154,174,189,199,],[9,39,39,9,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,9,9,39,39,]),'gotoE':([187,],[201,]),'matrix':([1,34,154,174,],[11,11,11,11,]),'blockA':([154,],[177,]),'sumXparam':([182,],[199,]),'typeDim':([28,29,],[63,65,]),'gotoFalse':([119,135,],[142,156,]),'write':([1,34,154,174,],[12,12,12,12,]),'program':([0,],[2,]),'moduleA':([133,],[155,]),'factor':([3,19,40,45,48,51,72,73,74,75,77,83,84,86,88,90,94,95,118,121,122,124,126,189,199,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'blockC':([174,],[195,]),'continueGoW':([179,],[198,]),'type':([152,206,],[173,173,]),'repeatB':([137,],[159,]),'empty':([34,41,54,137,163,164,174,193,],[66,71,87,160,184,186,194,207,]),'varsA':([193,],[205,]),'repeat':([1,34,154,174,],[16,16,16,16,]),'workspace':([1,34,],[34,34,]),'repeatA':([116,137,],[136,158,]),'screen':([1,34,154,174,],[18,18,18,18,]),'endMod':([155,],[178,]),'insertEra':([80,],[118,]),'commandA':([20,],[56,]),'gotoW':([6,],[46,]),'gotoR':([47,],[78,]),'programA':([1,],[21,]),'programB':([1,34,],[22,67,]),'programC':([34,],[68,]),'insertQuadMod':([99,],[133,]),'condition':([1,34,154,174,],[25,25,25,25,]),'cycle':([1,34,154,174,],[26,26,26,26,]),'checkParam':([141,],[163,]),'statute':([1,34,154,174,],[27,27,174,174,]),'calling':([1,34,154,174,],[30,30,30,30,]),'callingA':([118,],[139,]),'callingB':([118,199,],[140,208,]),'callingC':([163,],[183,]),'command':([1,34,116,137,154,174,],[33,33,137,137,33,33,]),'blockB':([154,174,],[176,196,]),'exp':([3,19,40,45,48,51,72,73,74,75,77,83,84,86,88,90,94,95,118,121,122,124,126,189,199,],[45,54,54,76,54,54,101,102,103,104,54,120,123,125,127,128,129,130,54,143,144,145,146,202,54,]),'sumdim':([60,166,],[95,189,]),'expression':([19,40,48,51,77,118,199,],[55,70,79,81,115,141,141,]),'assign':([1,34,154,174,],[36,36,36,36,]),'block':([133,142,156,192,201,],[153,164,179,204,209,]),'moduleID':([69,],[99,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INIT programA','program',2,'p_program','sample_ly.py',109),
  ('programA -> programB END','programA',2,'p_programA','sample_ly.py',120),
  ('programA -> END','programA',1,'p_programA','sample_ly.py',121),
  ('programB -> workspace programC','programB',2,'p_programB','sample_ly.py',125),
  ('programC -> programB','programC',1,'p_programC','sample_ly.py',129),
  ('programC -> empty','programC',1,'p_programC','sample_ly.py',130),
  ('workspace -> statute','workspace',1,'p_workspace','sample_ly.py',134),
  ('workspace -> module','workspace',1,'p_workspace','sample_ly.py',135),
  ('statute -> assign','statute',1,'p_statute','sample_ly.py',141),
  ('statute -> condition','statute',1,'p_statute','sample_ly.py',142),
  ('statute -> write','statute',1,'p_statute','sample_ly.py',143),
  ('statute -> cycle','statute',1,'p_statute','sample_ly.py',144),
  ('statute -> repeat','statute',1,'p_statute','sample_ly.py',145),
  ('statute -> command','statute',1,'p_statute','sample_ly.py',146),
  ('statute -> calling','statute',1,'p_statute','sample_ly.py',147),
  ('statute -> array','statute',1,'p_statute','sample_ly.py',148),
  ('statute -> matrix','statute',1,'p_statute','sample_ly.py',149),
  ('statute -> screen','statute',1,'p_statute','sample_ly.py',150),
  ('module -> MOD # moduleID insertQuadMod moduleA endMod','module',6,'p_module','sample_ly.py',155),
  ('moduleA -> ( vars ) block','moduleA',4,'p_moduleA','sample_ly.py',188),
  ('moduleA -> block','moduleA',1,'p_moduleA','sample_ly.py',189),
  ('moduleID -> ID','moduleID',1,'p_moduleID','sample_ly.py',192),
  ('vars -> type ID varsA','vars',3,'p_vars','sample_ly.py',202),
  ('varsA -> , vars','varsA',2,'p_varsA','sample_ly.py',224),
  ('varsA -> empty','varsA',1,'p_varsA','sample_ly.py',225),
  ('type -> INT','type',1,'p_type','sample_ly.py',228),
  ('type -> FLOAT','type',1,'p_type','sample_ly.py',229),
  ('type -> BOOL','type',1,'p_type','sample_ly.py',230),
  ('id -> ID [ sumdim exp ] [ sumdim exp ]','id',9,'p_id','sample_ly.py',236),
  ('id -> ID [ sumdim exp ]','id',5,'p_id','sample_ly.py',237),
  ('id -> ID','id',1,'p_id','sample_ly.py',238),
  ('sumdim -> <empty>','sumdim',0,'p_sumdim','sample_ly.py',288),
  ('calling -> # callID ( insertEra callingA','calling',5,'p_calling','sample_ly.py',293),
  ('callID -> ID','callID',1,'p_callID','sample_ly.py',301),
  ('insertEra -> <empty>','insertEra',0,'p_insertEra','sample_ly.py',308),
  ('callingA -> callingB ) ;','callingA',3,'p_callingA','sample_ly.py',319),
  ('callingA -> ) ;','callingA',2,'p_callingA','sample_ly.py',320),
  ('callingB -> expression checkParam callingC','callingB',3,'p_callingB','sample_ly.py',325),
  ('checkParam -> <empty>','checkParam',0,'p_checkParam','sample_ly.py',328),
  ('callingC -> , sumXparam callingB','callingC',3,'p_callingC','sample_ly.py',343),
  ('callingC -> empty','callingC',1,'p_callingC','sample_ly.py',344),
  ('sumXparam -> <empty>','sumXparam',0,'p_sumXparam','sample_ly.py',347),
  ('block -> { blockA','block',2,'p_block','sample_ly.py',352),
  ('blockA -> blockB }','blockA',2,'p_blockA','sample_ly.py',355),
  ('blockA -> }','blockA',1,'p_blockA','sample_ly.py',356),
  ('blockB -> statute blockC','blockB',2,'p_blockB','sample_ly.py',359),
  ('blockC -> blockB','blockC',1,'p_blockC','sample_ly.py',362),
  ('blockC -> empty','blockC',1,'p_blockC','sample_ly.py',363),
  ('assign -> id = expression ;','assign',4,'p_assign','sample_ly.py',366),
  ('condition -> IF ( expression ) gotoFalse block conditionA continueGo','condition',8,'p_condition','sample_ly.py',399),
  ('conditionA -> ELSE gotoE block','conditionA',3,'p_conditionA','sample_ly.py',402),
  ('conditionA -> empty','conditionA',1,'p_conditionA','sample_ly.py',403),
  ('write -> ECHO writeA ;','write',3,'p_write','sample_ly.py',406),
  ('writeA -> expression','writeA',1,'p_writeA','sample_ly.py',417),
  ('writeA -> CTE_STRING','writeA',1,'p_writeA','sample_ly.py',418),
  ('array -> ARR typeDim ID [ CTE_INTEGER ] ;','array',7,'p_array','sample_ly.py',422),
  ('matrix -> MAT typeDim ID [ CTE_INTEGER ] [ CTE_INTEGER ] ;','matrix',10,'p_matrix','sample_ly.py',447),
  ('typeDim -> INT','typeDim',1,'p_typeDim','sample_ly.py',474),
  ('typeDim -> FLOAT','typeDim',1,'p_typeDim','sample_ly.py',475),
  ('typeDim -> BOOL','typeDim',1,'p_typeDim','sample_ly.py',476),
  ('command -> figure exp exp color ;','command',5,'p_command','sample_ly.py',480),
  ('command -> SAMPLE commandA','command',2,'p_command','sample_ly.py',481),
  ('commandA -> ON move exp CTE_INTEGER color ;','commandA',6,'p_commandA','sample_ly.py',499),
  ('commandA -> OFF move exp ;','commandA',4,'p_commandA','sample_ly.py',500),
  ('cycle -> WHILE gotoW ( expression ) gotoFalse block continueGoW','cycle',8,'p_cycle','sample_ly.py',511),
  ('repeat -> REPLAY CTE_INTEGER gotoR [ repeatA ] ;','repeat',7,'p_repeat','sample_ly.py',514),
  ('repeatA -> command repeatB','repeatA',2,'p_repeatA','sample_ly.py',526),
  ('repeatB -> repeatA','repeatB',1,'p_repeatB','sample_ly.py',529),
  ('repeatB -> empty','repeatB',1,'p_repeatB','sample_ly.py',530),
  ('expression -> exp = = exp','expression',4,'p_expression','sample_ly.py',533),
  ('expression -> exp < > exp','expression',4,'p_expression','sample_ly.py',534),
  ('expression -> exp < = exp','expression',4,'p_expression','sample_ly.py',535),
  ('expression -> exp > = exp','expression',4,'p_expression','sample_ly.py',536),
  ('expression -> exp > exp','expression',3,'p_expression','sample_ly.py',537),
  ('expression -> exp < exp','expression',3,'p_expression','sample_ly.py',538),
  ('expression -> exp AND exp','expression',3,'p_expression','sample_ly.py',539),
  ('expression -> exp OR exp','expression',3,'p_expression','sample_ly.py',540),
  ('expression -> exp empty','expression',2,'p_expression','sample_ly.py',541),
  ('exp -> exp + exp','exp',3,'p_exp','sample_ly.py',586),
  ('exp -> exp - exp','exp',3,'p_exp','sample_ly.py',587),
  ('exp -> exp * exp','exp',3,'p_exp','sample_ly.py',588),
  ('exp -> exp / exp','exp',3,'p_exp','sample_ly.py',589),
  ('exp -> factor empty','exp',2,'p_exp','sample_ly.py',590),
  ('factor -> ( expression )','factor',3,'p_factor','sample_ly.py',625),
  ('factor -> var_cte','factor',1,'p_factor','sample_ly.py',626),
  ('figure -> OVAL','figure',1,'p_figure','sample_ly.py',634),
  ('figure -> TRIO','figure',1,'p_figure','sample_ly.py',635),
  ('figure -> QUAD','figure',1,'p_figure','sample_ly.py',636),
  ('figure -> ARC','figure',1,'p_figure','sample_ly.py',637),
  ('move -> UP','move',1,'p_move','sample_ly.py',641),
  ('move -> DOWN','move',1,'p_move','sample_ly.py',642),
  ('move -> LEFT','move',1,'p_move','sample_ly.py',643),
  ('move -> RIGHT','move',1,'p_move','sample_ly.py',644),
  ('color -> RED','color',1,'p_color','sample_ly.py',648),
  ('color -> YELLOW','color',1,'p_color','sample_ly.py',649),
  ('color -> BLUE','color',1,'p_color','sample_ly.py',650),
  ('color -> GREEN','color',1,'p_color','sample_ly.py',651),
  ('color -> BLACK','color',1,'p_color','sample_ly.py',652),
  ('color -> WHITE','color',1,'p_color','sample_ly.py',653),
  ('color -> ORANGE','color',1,'p_color','sample_ly.py',654),
  ('color -> PURPLE','color',1,'p_color','sample_ly.py',655),
  ('color -> CYAN','color',1,'p_color','sample_ly.py',656),
  ('screen -> WHERE','screen',1,'p_screen','sample_ly.py',660),
  ('screen -> CLEAR','screen',1,'p_screen','sample_ly.py',661),
  ('var_cte -> id','var_cte',1,'p_var_cte','sample_ly.py',664),
  ('var_cte -> CTE_INTEGER','var_cte',1,'p_var_cte','sample_ly.py',665),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','sample_ly.py',666),
  ('var_cte -> TRUE','var_cte',1,'p_var_cte','sample_ly.py',667),
  ('var_cte -> FALSE','var_cte',1,'p_var_cte','sample_ly.py',668),
  ('gotoFalse -> <empty>','gotoFalse',0,'p_gotoFalse','sample_ly.py',711),
  ('gotoE -> <empty>','gotoE',0,'p_gotoE','sample_ly.py',721),
  ('gotoW -> <empty>','gotoW',0,'p_gotoW','sample_ly.py',725),
  ('gotoR -> <empty>','gotoR',0,'p_gotoR','sample_ly.py',729),
  ('continueGo -> <empty>','continueGo',0,'p_continueGo','sample_ly.py',740),
  ('continueGoW -> <empty>','continueGoW',0,'p_continueGoW','sample_ly.py',744),
  ('insertQuadMod -> <empty>','insertQuadMod',0,'p_insertQuadMod','sample_ly.py',748),
  ('endMod -> <empty>','endMod',0,'p_endMod','sample_ly.py',753),
  ('empty -> <empty>','empty',0,'p_empty','sample_ly.py',757),
]
