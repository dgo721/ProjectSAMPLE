
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '&\xc1\x83\xf0\xec\x1a\x89*\xa0\xb4\xbf\xba\x969^\x00'
    
_lr_action_items = {'COUNT':([45,],[71,]),'YELLOW':([34,36,37,38,40,41,42,67,68,94,95,96,97,98,150,],[-105,-83,-104,-106,-116,-107,-103,103,-81,-82,-77,-79,-78,-80,103,]),'DOWN':([54,55,],[88,88,]),'WHILE':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,111,128,130,141,149,152,153,154,161,163,164,167,174,175,177,178,179,180,181,182,186,187,189,195,196,198,200,205,],[6,-8,-11,-10,-102,-13,-17,-12,-7,-16,-15,-101,-14,6,-9,-60,-51,-48,-55,-44,-59,-28,-62,-20,6,-115,-52,-54,-32,-116,6,-40,-38,-18,-113,-64,-53,-31,-112,-47,-61,-39,-63,-45,-19,-46,]),'REPLAY':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,111,128,130,141,149,152,153,154,161,163,164,167,174,175,177,178,179,180,181,182,186,187,189,195,196,198,200,205,],[7,-8,-11,-10,-102,-13,-17,-12,-7,-16,-15,-101,-14,7,-9,-60,-51,-48,-55,-44,-59,-28,-62,-20,7,-115,-52,-54,-32,-116,7,-40,-38,-18,-113,-64,-53,-31,-112,-47,-61,-39,-63,-45,-19,-46,]),'GREEN':([34,36,37,38,40,41,42,67,68,94,95,96,97,98,150,],[-105,-83,-104,-106,-116,-107,-103,102,-81,-82,-77,-79,-78,-80,102,]),'CYAN':([34,36,37,38,40,41,42,67,68,94,95,96,97,98,150,],[-105,-83,-104,-106,-116,-107,-103,104,-81,-82,-77,-79,-78,-80,104,]),'OVAL':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,110,111,128,130,133,141,149,152,153,154,161,163,164,167,174,175,177,178,179,180,181,182,186,187,189,195,196,198,200,205,],[5,-8,-11,-10,-102,-13,-17,-12,-7,-16,-15,-101,-14,5,-9,-60,-51,-48,5,-55,-44,-59,5,-28,-62,-20,5,-115,-52,-54,-32,-116,5,-40,-38,-18,-113,-64,-53,-31,-112,-47,-61,-39,-63,-45,-19,-46,]),'OFF':([19,],[54,]),'TRUE':([3,5,14,18,22,29,34,35,36,37,38,39,40,41,42,48,57,63,64,65,66,68,69,74,76,79,80,82,84,85,86,87,88,89,90,94,95,96,97,98,112,116,120,121,122,125,136,183,197,],[38,-84,-85,38,-86,-87,-105,38,-83,-104,-106,38,-116,-107,-103,38,38,38,38,38,38,-81,38,38,-30,38,38,38,38,-91,38,-88,-89,-90,38,-82,-77,-79,-78,-80,38,38,38,38,38,38,38,-37,38,]),'[':([44,45,70,],[-111,74,110,]),'RED':([34,36,37,38,40,41,42,67,68,94,95,96,97,98,150,],[-105,-83,-104,-106,-116,-107,-103,108,-81,-82,-77,-79,-78,-80,108,]),'#':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,32,33,53,73,78,111,128,130,141,149,152,153,154,161,163,164,167,174,175,177,178,179,180,181,182,186,187,189,195,196,198,200,205,],[9,-8,-11,-10,-102,-13,-17,-12,-7,-16,-15,-101,-14,9,61,-9,-60,-51,-48,-55,-44,-59,-28,-62,-20,9,-115,-52,-54,-32,-116,9,-40,-38,-18,-113,-64,-53,-31,-112,-47,-61,-39,-63,-45,-19,-46,]),']':([34,36,37,38,40,41,42,53,68,94,95,96,97,98,113,114,130,132,133,137,138,149,157,158,159,162,189,],[-105,-83,-104,-106,-116,-107,-103,-60,-81,-82,-77,-79,-78,-80,135,-116,-59,156,-116,-56,-58,-62,-66,-65,-67,-57,-61,]),')':([34,36,37,38,40,41,42,51,62,68,76,77,83,94,95,96,97,98,109,115,116,118,119,123,124,134,142,143,145,146,147,148,166,169,184,185,191,201,203,204,206,],[-105,-83,-104,-106,-116,-107,-103,-116,94,-81,-30,117,-76,-82,-77,-79,-78,-80,131,139,140,-74,-73,-75,-72,160,165,-34,-70,-69,-68,-71,-116,190,-33,-36,-116,-22,-24,-35,-23,]),'(':([3,5,6,12,14,18,22,29,34,35,36,37,38,39,40,41,42,43,46,47,48,57,63,64,65,66,68,69,72,74,75,76,79,80,82,84,85,86,87,88,89,90,92,93,94,95,96,97,98,116,120,121,122,125,129,136,183,197,],[35,-84,-110,48,-85,35,-86,-87,-105,35,-83,-104,-106,35,-116,-107,-103,69,76,-29,35,35,35,35,35,35,-81,35,112,35,115,-30,35,35,35,35,-91,35,-88,-89,-90,35,-21,-114,-82,-77,-79,-78,-80,35,35,35,35,35,151,35,-37,35,]),'+':([34,36,37,38,39,40,41,42,51,67,68,94,95,96,97,98,114,118,119,123,124,126,127,145,146,147,148,],[-105,-83,-104,-106,63,-116,-107,-103,63,63,-81,-82,-77,-79,-78,-80,63,63,63,63,63,63,63,63,63,63,63,]),'*':([34,36,37,38,39,40,41,42,51,67,68,94,95,96,97,98,114,118,119,123,124,126,127,145,146,147,148,],[-105,-83,-104,-106,64,-116,-107,-103,64,64,-81,-82,64,-79,64,-80,64,64,64,64,64,64,64,64,64,64,64,]),'-':([34,36,37,38,39,40,41,42,51,67,68,94,95,96,97,98,114,118,119,123,124,126,127,145,146,147,148,],[-105,-83,-104,-106,65,-116,-107,-103,65,65,-81,-82,-77,-79,-78,-80,65,65,65,65,65,65,65,65,65,65,65,]),',':([34,36,37,38,40,41,42,51,68,83,94,95,96,97,98,114,118,119,123,124,143,145,146,147,148,166,191,],[-105,-83,-104,-106,-116,-107,-103,-116,-81,-76,-82,-77,-79,-78,-80,136,-74,-73,-75,-72,-34,-70,-69,-68,-71,183,202,]),'/':([34,36,37,38,39,40,41,42,51,67,68,94,95,96,97,98,114,118,119,123,124,126,127,145,146,147,148,],[-105,-83,-104,-106,66,-116,-107,-103,66,66,-81,-82,66,-79,66,-80,66,66,66,66,66,66,66,66,66,66,66,]),'PIPE':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,111,128,130,141,149,152,153,154,161,163,164,167,174,175,177,178,179,180,181,182,186,187,189,195,196,198,200,205,],[8,-8,-11,-10,-102,-13,-17,-12,-7,-16,-15,-101,-14,8,-9,-60,-51,-48,-55,-44,-59,-28,-62,-20,8,-115,-52,-54,-32,-116,8,-40,-38,-18,-113,-64,-53,-31,-112,-47,-61,-39,-63,-45,-19,-46,]),'INIT':([0,],[1,]),'ORANGE':([34,36,37,38,40,41,42,67,68,94,95,96,97,98,150,],[-105,-83,-104,-106,-116,-107,-103,105,-81,-82,-77,-79,-78,-80,105,]),';':([34,36,37,38,40,41,42,49,50,51,52,68,71,83,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,118,119,123,124,126,135,139,140,145,146,147,148,156,160,165,168,],[-105,-83,-104,-106,-116,-107,-103,78,-50,-116,-49,-81,111,-76,128,-82,-77,-79,-78,-80,-94,130,-99,-95,-93,-100,-98,-96,-97,-92,-74,-73,-75,-72,149,161,163,164,-70,-69,-68,-71,180,181,182,189,]),'=':([23,34,36,37,38,40,41,42,51,68,80,81,84,94,95,96,97,98,],[57,-105,-83,-104,-106,-116,-107,-103,81,-81,120,122,125,-82,-77,-79,-78,-80,]),'<':([34,36,37,38,40,41,42,51,68,94,95,96,97,98,],[-105,-83,-104,-106,-116,-107,-103,80,-81,-82,-77,-79,-78,-80,]),'$end':([2,16,20,56,],[0,-3,-1,-2,]),'CTE_STRING':([18,],[50,]),'AND':([34,36,37,38,40,41,42,51,68,94,95,96,97,98,],[-105,-83,-104,-106,-116,-107,-103,79,-81,-82,-77,-79,-78,-80,]),'TRIO':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,110,111,128,130,133,141,149,152,153,154,161,163,164,167,174,175,177,178,179,180,181,182,186,187,189,195,196,198,200,205,],[14,-8,-11,-10,-102,-13,-17,-12,-7,-16,-15,-101,-14,14,-9,-60,-51,-48,14,-55,-44,-59,14,-28,-62,-20,14,-115,-52,-54,-32,-116,14,-40,-38,-18,-113,-64,-53,-31,-112,-47,-61,-39,-63,-45,-19,-46,]),'END':([1,4,10,11,13,15,17,21,24,25,26,27,28,30,31,33,53,58,59,60,73,78,111,128,130,141,149,152,154,161,163,164,167,175,177,178,179,180,181,182,186,187,189,195,196,198,200,205,],[16,-8,-11,-10,-102,-13,-17,56,-12,-7,-16,-15,-101,-14,-116,-9,-60,-6,-5,-4,-51,-48,-55,-44,-59,-28,-62,-20,-115,-52,-54,-32,-116,-40,-38,-18,-113,-64,-53,-31,-112,-47,-61,-39,-63,-45,-19,-46,]),'CLEAR':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,111,128,130,141,149,152,153,154,161,163,164,167,174,175,177,178,179,180,181,182,186,187,189,195,196,198,200,205,],[13,-8,-11,-10,-102,-13,-17,-12,-7,-16,-15,-101,-14,13,-9,-60,-51,-48,-55,-44,-59,-28,-62,-20,13,-115,-52,-54,-32,-116,13,-40,-38,-18,-113,-64,-53,-31,-112,-47,-61,-39,-63,-45,-19,-46,]),'ECHO':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,111,128,130,141,149,152,153,154,161,163,164,167,174,175,177,178,179,180,181,182,186,187,189,195,196,198,200,205,],[18,-8,-11,-10,-102,-13,-17,-12,-7,-16,-15,-101,-14,18,-9,-60,-51,-48,-55,-44,-59,-28,-62,-20,18,-115,-52,-54,-32,-116,18,-40,-38,-18,-113,-64,-53,-31,-112,-47,-61,-39,-63,-45,-19,-46,]),'SAMPLE':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,110,111,128,130,133,141,149,152,153,154,161,163,164,167,174,175,177,178,179,180,181,182,186,187,189,195,196,198,200,205,],[19,-8,-11,-10,-102,-13,-17,-12,-7,-16,-15,-101,-14,19,-9,-60,-51,-48,19,-55,-44,-59,19,-28,-62,-20,19,-115,-52,-54,-32,-116,19,-40,-38,-18,-113,-64,-53,-31,-112,-47,-61,-39,-63,-45,-19,-46,]),'CTE_INTEGER':([3,5,7,14,18,22,29,34,35,36,37,38,39,40,41,42,48,57,63,64,65,66,68,69,74,76,79,80,82,84,85,86,87,88,89,90,94,95,96,97,98,112,116,120,121,122,125,127,136,183,197,],[37,-84,44,-85,37,-86,-87,-105,37,-83,-104,-106,37,-116,-107,-103,37,37,37,37,37,37,-81,37,37,-30,37,37,37,37,-91,37,-88,-89,-90,37,-82,-77,-79,-78,-80,37,37,37,37,37,37,150,37,-37,37,]),'IN':([45,],[72,]),'QUAD':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,110,111,128,130,133,141,149,152,153,154,161,163,164,167,174,175,177,178,179,180,181,182,186,187,189,195,196,198,200,205,],[22,-8,-11,-10,-102,-13,-17,-12,-7,-16,-15,-101,-14,22,-9,-60,-51,-48,22,-55,-44,-59,22,-28,-62,-20,22,-115,-52,-54,-32,-116,22,-40,-38,-18,-113,-64,-53,-31,-112,-47,-61,-39,-63,-45,-19,-46,]),'WHITE':([34,36,37,38,40,41,42,67,68,94,95,96,97,98,150,],[-105,-83,-104,-106,-116,-107,-103,107,-81,-82,-77,-79,-78,-80,107,]),'ELSE':([167,175,177,195,],[188,-40,-38,-39,]),'WHERE':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,111,128,130,141,149,152,153,154,161,163,164,167,174,175,177,178,179,180,181,182,186,187,189,195,196,198,200,205,],[28,-8,-11,-10,-102,-13,-17,-12,-7,-16,-15,-101,-14,28,-9,-60,-51,-48,-55,-44,-59,-28,-62,-20,28,-115,-52,-54,-32,-116,28,-40,-38,-18,-113,-64,-53,-31,-112,-47,-61,-39,-63,-45,-19,-46,]),'ID':([1,3,4,5,8,9,10,11,13,14,15,17,18,22,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,48,53,57,61,63,64,65,66,68,69,73,74,76,78,79,80,82,84,85,86,87,88,89,90,94,95,96,97,98,111,112,116,120,121,122,125,128,130,136,141,149,152,153,154,161,163,164,167,170,171,172,173,174,175,177,178,179,180,181,182,183,186,187,189,195,196,197,198,200,205,],[23,42,-8,-84,45,47,-11,-10,-102,-85,-13,-17,42,-86,-12,-7,-16,-15,-101,-87,-14,23,-9,-105,42,-83,-104,-106,42,-116,-107,-103,42,-60,42,92,42,42,42,42,-81,42,-51,42,-30,-48,42,42,42,42,-91,42,-88,-89,-90,42,-82,-77,-79,-78,-80,-55,42,42,42,42,42,42,-44,-59,42,-28,-62,-20,23,-115,-52,-54,-32,-116,-26,-25,-27,191,23,-40,-38,-18,-113,-64,-53,-31,-37,-112,-47,-61,-39,-63,42,-45,-19,-46,]),'IF':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,111,128,130,141,149,152,153,154,161,163,164,167,174,175,177,178,179,180,181,182,186,187,189,195,196,198,200,205,],[12,-8,-11,-10,-102,-13,-17,-12,-7,-16,-15,-101,-14,12,-9,-60,-51,-48,-55,-44,-59,-28,-62,-20,12,-115,-52,-54,-32,-116,12,-40,-38,-18,-113,-64,-53,-31,-112,-47,-61,-39,-63,-45,-19,-46,]),'BLUE':([34,36,37,38,40,41,42,67,68,94,95,96,97,98,150,],[-105,-83,-104,-106,-116,-107,-103,99,-81,-82,-77,-79,-78,-80,99,]),'ON':([19,],[55,]),'RIGHT':([54,55,],[85,85,]),'FALSE':([3,5,14,18,22,29,34,35,36,37,38,39,40,41,42,48,57,63,64,65,66,68,69,74,76,79,80,82,84,85,86,87,88,89,90,94,95,96,97,98,112,116,120,121,122,125,136,183,197,],[41,-84,-85,41,-86,-87,-105,41,-83,-104,-106,41,-116,-107,-103,41,41,41,41,41,41,-81,41,41,-30,41,41,41,41,-91,41,-88,-89,-90,41,-82,-77,-79,-78,-80,41,41,41,41,41,41,41,-37,41,]),'INT':([151,202,],[171,171,]),'OUT':([45,],[75,]),'FLOAT':([151,202,],[170,170,]),'CTE_FLOAT':([3,5,14,18,22,29,34,35,36,37,38,39,40,41,42,48,57,63,64,65,66,68,69,74,76,79,80,82,84,85,86,87,88,89,90,94,95,96,97,98,112,116,120,121,122,125,136,183,197,],[34,-84,-85,34,-86,-87,-105,34,-83,-104,-106,34,-116,-107,-103,34,34,34,34,34,34,-81,34,34,-30,34,34,34,34,-91,34,-88,-89,-90,34,-82,-77,-79,-78,-80,34,34,34,34,34,34,34,-37,34,]),'UP':([54,55,],[87,87,]),'PURPLE':([34,36,37,38,40,41,42,67,68,94,95,96,97,98,150,],[-105,-83,-104,-106,-116,-107,-103,101,-81,-82,-77,-79,-78,-80,101,]),'ARC':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,110,111,128,130,133,141,149,152,153,154,161,163,164,167,174,175,177,178,179,180,181,182,186,187,189,195,196,198,200,205,],[29,-8,-11,-10,-102,-13,-17,-12,-7,-16,-15,-101,-14,29,-9,-60,-51,-48,29,-55,-44,-59,29,-28,-62,-20,29,-115,-52,-54,-32,-116,29,-40,-38,-18,-113,-64,-53,-31,-112,-47,-61,-39,-63,-45,-19,-46,]),'BOOL':([151,202,],[172,172,]),'BLACK':([34,36,37,38,40,41,42,67,68,94,95,96,97,98,150,],[-105,-83,-104,-106,-116,-107,-103,106,-81,-82,-77,-79,-78,-80,106,]),'{':([92,93,117,129,131,144,155,188,190,199,],[-21,-114,-108,153,-108,153,153,-109,153,153,]),'>':([34,36,37,38,40,41,42,51,68,80,94,95,96,97,98,],[-105,-83,-104,-106,-116,-107,-103,84,-81,121,-82,-77,-79,-78,-80,]),'}':([10,11,13,15,17,24,26,27,28,30,33,53,73,78,111,128,130,141,149,153,161,163,164,167,174,175,176,177,179,180,181,182,186,187,189,192,193,194,195,196,198,205,],[-11,-10,-102,-13,-17,-12,-16,-15,-101,-14,-9,-60,-51,-48,-55,-44,-59,-28,-62,175,-52,-54,-32,-116,-116,-40,195,-38,-113,-64,-53,-31,-112,-47,-61,-43,-41,-42,-39,-63,-45,-46,]),'OR':([34,36,37,38,40,41,42,51,68,94,95,96,97,98,],[-105,-83,-104,-106,-116,-107,-103,82,-81,-82,-77,-79,-78,-80,]),'LEFT':([54,55,],[89,89,]),'MOD':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,33,53,73,78,111,128,130,141,149,152,154,161,163,164,167,175,177,178,179,180,181,182,186,187,189,195,196,198,200,205,],[32,-8,-11,-10,-102,-13,-17,-12,-7,-16,-15,-101,-14,32,-9,-60,-51,-48,-55,-44,-59,-28,-62,-20,-115,-52,-54,-32,-116,-40,-38,-18,-113,-64,-53,-31,-112,-47,-61,-39,-63,-45,-19,-46,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'figure':([1,31,110,133,153,174,],[3,3,3,3,3,3,]),'continueGo':([186,],[198,]),'color':([67,150,],[100,168,]),'callID':([9,],[46,]),'move':([54,55,],[86,90,]),'module':([1,31,],[4,4,]),'var_cte':([3,18,35,39,48,57,63,64,65,66,69,74,79,80,82,84,86,90,112,116,120,121,122,125,136,197,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,134,36,36,36,36,36,36,36,]),'gotoE':([188,],[199,]),'conditionA':([167,],[186,]),'writeA':([18,],[49,]),'vars':([151,202,],[169,206,]),'blockA':([153,],[177,]),'sumXparam':([183,],[197,]),'gotoFalse':([117,131,],[144,155,]),'write':([1,31,153,174,],[10,10,10,10,]),'program':([0,],[2,]),'moduleA':([129,],[154,]),'factor':([3,18,35,39,48,57,63,64,65,66,69,74,79,80,82,84,86,90,116,120,121,122,125,136,197,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'pipelineC':([114,],[137,]),'continueGoW':([179,],[196,]),'type':([151,202,],[173,173,]),'repeatB':([133,],[158,]),'empty':([31,40,51,114,133,166,167,174,191,],[58,68,83,138,159,185,187,192,203,]),'pipelineB':([74,136,],[113,162,]),'varsA':([191,],[201,]),'repeat':([1,31,153,174,],[15,15,15,15,]),'exp':([3,18,35,39,48,57,63,64,65,66,69,74,79,80,82,84,86,90,116,120,121,122,125,136,197,],[39,51,51,67,51,51,95,96,97,98,51,114,118,119,123,124,126,127,51,145,146,147,148,114,51,]),'repeatA':([110,133,],[132,157,]),'screen':([1,31,153,174,],[17,17,17,17,]),'endMod':([154,],[178,]),'insertEra':([76,],[116,]),'commandA':([19,],[53,]),'gotoW':([6,],[43,]),'gotoR':([44,],[70,]),'programA':([1,],[20,]),'programB':([1,31,],[21,59,]),'programC':([31,],[60,]),'insertQuadMod':([93,],[129,]),'blockB':([153,174,],[176,194,]),'condition':([1,31,153,174,],[11,11,11,11,]),'cycle':([1,31,153,174,],[24,24,24,24,]),'checkParam':([143,],[166,]),'statute':([1,31,153,174,],[25,25,174,174,]),'pipeline':([1,31,153,174,],[26,26,26,26,]),'blockC':([174,],[193,]),'calling':([1,31,153,174,],[27,27,27,27,]),'callingA':([116,],[141,]),'callingB':([116,197,],[142,204,]),'callingC':([166,],[184,]),'command':([1,31,110,133,153,174,],[30,30,133,133,30,30,]),'pipelineA':([45,],[73,]),'workspace':([1,31,],[31,31,]),'expression':([18,35,48,57,69,116,197,],[52,62,77,91,109,143,143,]),'assign':([1,31,153,174,],[33,33,33,33,]),'block':([129,144,155,190,199,],[152,167,179,200,205,]),'moduleID':([61,],[93,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INIT programA','program',2,'p_program','sample_ly.py',114),
  ('programA -> programB END','programA',2,'p_programA','sample_ly.py',125),
  ('programA -> END','programA',1,'p_programA','sample_ly.py',126),
  ('programB -> workspace programC','programB',2,'p_programB','sample_ly.py',130),
  ('programC -> programB','programC',1,'p_programC','sample_ly.py',134),
  ('programC -> empty','programC',1,'p_programC','sample_ly.py',135),
  ('workspace -> statute','workspace',1,'p_workspace','sample_ly.py',139),
  ('workspace -> module','workspace',1,'p_workspace','sample_ly.py',140),
  ('statute -> assign','statute',1,'p_statute','sample_ly.py',146),
  ('statute -> condition','statute',1,'p_statute','sample_ly.py',147),
  ('statute -> write','statute',1,'p_statute','sample_ly.py',148),
  ('statute -> cycle','statute',1,'p_statute','sample_ly.py',149),
  ('statute -> repeat','statute',1,'p_statute','sample_ly.py',150),
  ('statute -> command','statute',1,'p_statute','sample_ly.py',151),
  ('statute -> calling','statute',1,'p_statute','sample_ly.py',152),
  ('statute -> pipeline','statute',1,'p_statute','sample_ly.py',153),
  ('statute -> screen','statute',1,'p_statute','sample_ly.py',154),
  ('module -> MOD # moduleID insertQuadMod moduleA endMod','module',6,'p_module','sample_ly.py',159),
  ('moduleA -> ( vars ) block','moduleA',4,'p_moduleA','sample_ly.py',188),
  ('moduleA -> block','moduleA',1,'p_moduleA','sample_ly.py',189),
  ('moduleID -> ID','moduleID',1,'p_moduleID','sample_ly.py',192),
  ('vars -> type ID varsA','vars',3,'p_vars','sample_ly.py',201),
  ('varsA -> , vars','varsA',2,'p_varsA','sample_ly.py',223),
  ('varsA -> empty','varsA',1,'p_varsA','sample_ly.py',224),
  ('type -> INT','type',1,'p_type','sample_ly.py',227),
  ('type -> FLOAT','type',1,'p_type','sample_ly.py',228),
  ('type -> BOOL','type',1,'p_type','sample_ly.py',229),
  ('calling -> # callID ( insertEra callingA','calling',5,'p_calling','sample_ly.py',235),
  ('callID -> ID','callID',1,'p_callID','sample_ly.py',242),
  ('insertEra -> <empty>','insertEra',0,'p_insertEra','sample_ly.py',249),
  ('callingA -> callingB ) ;','callingA',3,'p_callingA','sample_ly.py',260),
  ('callingA -> ) ;','callingA',2,'p_callingA','sample_ly.py',261),
  ('callingB -> expression checkParam callingC','callingB',3,'p_callingB','sample_ly.py',266),
  ('checkParam -> <empty>','checkParam',0,'p_checkParam','sample_ly.py',269),
  ('callingC -> , sumXparam callingB','callingC',3,'p_callingC','sample_ly.py',282),
  ('callingC -> empty','callingC',1,'p_callingC','sample_ly.py',283),
  ('sumXparam -> <empty>','sumXparam',0,'p_sumXparam','sample_ly.py',286),
  ('block -> { blockA','block',2,'p_block','sample_ly.py',291),
  ('blockA -> blockB }','blockA',2,'p_blockA','sample_ly.py',294),
  ('blockA -> }','blockA',1,'p_blockA','sample_ly.py',295),
  ('blockB -> statute blockC','blockB',2,'p_blockB','sample_ly.py',298),
  ('blockC -> blockB','blockC',1,'p_blockC','sample_ly.py',301),
  ('blockC -> empty','blockC',1,'p_blockC','sample_ly.py',302),
  ('assign -> ID = expression ;','assign',4,'p_assign','sample_ly.py',305),
  ('condition -> IF ( expression ) gotoFalse block conditionA continueGo','condition',8,'p_condition','sample_ly.py',335),
  ('conditionA -> ELSE gotoE block','conditionA',3,'p_conditionA','sample_ly.py',338),
  ('conditionA -> empty','conditionA',1,'p_conditionA','sample_ly.py',339),
  ('write -> ECHO writeA ;','write',3,'p_write','sample_ly.py',342),
  ('writeA -> expression','writeA',1,'p_writeA','sample_ly.py',352),
  ('writeA -> CTE_STRING','writeA',1,'p_writeA','sample_ly.py',353),
  ('pipeline -> PIPE ID pipelineA','pipeline',3,'p_pipeline','sample_ly.py',357),
  ('pipelineA -> [ pipelineB ] ;','pipelineA',4,'p_pipelineA','sample_ly.py',360),
  ('pipelineA -> IN ( var_cte ) ;','pipelineA',5,'p_pipelineA','sample_ly.py',361),
  ('pipelineA -> OUT ( ) ;','pipelineA',4,'p_pipelineA','sample_ly.py',362),
  ('pipelineA -> COUNT ;','pipelineA',2,'p_pipelineA','sample_ly.py',363),
  ('pipelineB -> exp pipelineC','pipelineB',2,'p_pipelineB','sample_ly.py',366),
  ('pipelineC -> , pipelineB','pipelineC',2,'p_pipelineC','sample_ly.py',369),
  ('pipelineC -> empty','pipelineC',1,'p_pipelineC','sample_ly.py',370),
  ('command -> figure exp exp color ;','command',5,'p_command','sample_ly.py',373),
  ('command -> SAMPLE commandA','command',2,'p_command','sample_ly.py',374),
  ('commandA -> ON move exp CTE_INTEGER color ;','commandA',6,'p_commandA','sample_ly.py',392),
  ('commandA -> OFF move exp ;','commandA',4,'p_commandA','sample_ly.py',393),
  ('cycle -> WHILE gotoW ( expression ) gotoFalse block continueGoW','cycle',8,'p_cycle','sample_ly.py',404),
  ('repeat -> REPLAY CTE_INTEGER gotoR [ repeatA ] ;','repeat',7,'p_repeat','sample_ly.py',407),
  ('repeatA -> command repeatB','repeatA',2,'p_repeatA','sample_ly.py',411),
  ('repeatB -> repeatA','repeatB',1,'p_repeatB','sample_ly.py',414),
  ('repeatB -> empty','repeatB',1,'p_repeatB','sample_ly.py',415),
  ('expression -> exp = = exp','expression',4,'p_expression','sample_ly.py',418),
  ('expression -> exp < > exp','expression',4,'p_expression','sample_ly.py',419),
  ('expression -> exp < = exp','expression',4,'p_expression','sample_ly.py',420),
  ('expression -> exp > = exp','expression',4,'p_expression','sample_ly.py',421),
  ('expression -> exp > exp','expression',3,'p_expression','sample_ly.py',422),
  ('expression -> exp < exp','expression',3,'p_expression','sample_ly.py',423),
  ('expression -> exp AND exp','expression',3,'p_expression','sample_ly.py',424),
  ('expression -> exp OR exp','expression',3,'p_expression','sample_ly.py',425),
  ('expression -> exp empty','expression',2,'p_expression','sample_ly.py',426),
  ('exp -> exp + exp','exp',3,'p_exp','sample_ly.py',467),
  ('exp -> exp - exp','exp',3,'p_exp','sample_ly.py',468),
  ('exp -> exp * exp','exp',3,'p_exp','sample_ly.py',469),
  ('exp -> exp / exp','exp',3,'p_exp','sample_ly.py',470),
  ('exp -> factor empty','exp',2,'p_exp','sample_ly.py',471),
  ('factor -> ( expression )','factor',3,'p_factor','sample_ly.py',506),
  ('factor -> var_cte','factor',1,'p_factor','sample_ly.py',507),
  ('figure -> OVAL','figure',1,'p_figure','sample_ly.py',514),
  ('figure -> TRIO','figure',1,'p_figure','sample_ly.py',515),
  ('figure -> QUAD','figure',1,'p_figure','sample_ly.py',516),
  ('figure -> ARC','figure',1,'p_figure','sample_ly.py',517),
  ('move -> UP','move',1,'p_move','sample_ly.py',521),
  ('move -> DOWN','move',1,'p_move','sample_ly.py',522),
  ('move -> LEFT','move',1,'p_move','sample_ly.py',523),
  ('move -> RIGHT','move',1,'p_move','sample_ly.py',524),
  ('color -> RED','color',1,'p_color','sample_ly.py',528),
  ('color -> YELLOW','color',1,'p_color','sample_ly.py',529),
  ('color -> BLUE','color',1,'p_color','sample_ly.py',530),
  ('color -> GREEN','color',1,'p_color','sample_ly.py',531),
  ('color -> BLACK','color',1,'p_color','sample_ly.py',532),
  ('color -> WHITE','color',1,'p_color','sample_ly.py',533),
  ('color -> ORANGE','color',1,'p_color','sample_ly.py',534),
  ('color -> PURPLE','color',1,'p_color','sample_ly.py',535),
  ('color -> CYAN','color',1,'p_color','sample_ly.py',536),
  ('screen -> WHERE','screen',1,'p_screen','sample_ly.py',540),
  ('screen -> CLEAR','screen',1,'p_screen','sample_ly.py',541),
  ('var_cte -> ID','var_cte',1,'p_var_cte','sample_ly.py',544),
  ('var_cte -> CTE_INTEGER','var_cte',1,'p_var_cte','sample_ly.py',545),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','sample_ly.py',546),
  ('var_cte -> TRUE','var_cte',1,'p_var_cte','sample_ly.py',547),
  ('var_cte -> FALSE','var_cte',1,'p_var_cte','sample_ly.py',548),
  ('gotoFalse -> <empty>','gotoFalse',0,'p_gotoFalse','sample_ly.py',586),
  ('gotoE -> <empty>','gotoE',0,'p_gotoE','sample_ly.py',596),
  ('gotoW -> <empty>','gotoW',0,'p_gotoW','sample_ly.py',600),
  ('gotoR -> <empty>','gotoR',0,'p_gotoR','sample_ly.py',604),
  ('continueGo -> <empty>','continueGo',0,'p_continueGo','sample_ly.py',608),
  ('continueGoW -> <empty>','continueGoW',0,'p_continueGoW','sample_ly.py',612),
  ('insertQuadMod -> <empty>','insertQuadMod',0,'p_insertQuadMod','sample_ly.py',616),
  ('endMod -> <empty>','endMod',0,'p_endMod','sample_ly.py',621),
  ('empty -> <empty>','empty',0,'p_empty','sample_ly.py',625),
]
