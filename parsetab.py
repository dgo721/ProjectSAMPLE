
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xa0\xc6\xdb\xa7g\xc3\x1e\xefK\xc7!\xe8G\x8b\x91\x90'
    
_lr_action_items = {'COUNT':([45,],[71,]),'YELLOW':([34,36,37,38,40,41,42,67,68,93,94,95,96,97,148,],[-103,-82,-102,-104,-114,-105,-101,102,-80,-81,-76,-78,-77,-79,102,]),'DOWN':([54,55,],[88,88,]),'WHILE':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,32,53,73,78,109,126,128,139,147,150,151,152,159,161,162,165,172,173,175,176,177,178,179,180,184,185,187,193,194,196,198,203,],[6,-8,-11,-10,-100,-13,-17,-12,-7,-16,-15,-99,-14,6,-9,-59,-50,-47,-54,-43,-58,-27,-61,-20,6,-113,-51,-53,-31,-114,6,-39,-37,-18,-111,-63,-52,-30,-110,-46,-60,-38,-62,-44,-19,-45,]),'REPLAY':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,32,53,73,78,109,126,128,139,147,150,151,152,159,161,162,165,172,173,175,176,177,178,179,180,184,185,187,193,194,196,198,203,],[7,-8,-11,-10,-100,-13,-17,-12,-7,-16,-15,-99,-14,7,-9,-59,-50,-47,-54,-43,-58,-27,-61,-20,7,-113,-51,-53,-31,-114,7,-39,-37,-18,-111,-63,-52,-30,-110,-46,-60,-38,-62,-44,-19,-45,]),'GREEN':([34,36,37,38,40,41,42,67,68,93,94,95,96,97,148,],[-103,-82,-102,-104,-114,-105,-101,101,-80,-81,-76,-78,-77,-79,101,]),'CYAN':([34,36,37,38,40,41,42,67,68,93,94,95,96,97,148,],[-103,-82,-102,-104,-114,-105,-101,103,-80,-81,-76,-78,-77,-79,103,]),'OVAL':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,32,53,73,78,108,109,126,128,131,139,147,150,151,152,159,161,162,165,172,173,175,176,177,178,179,180,184,185,187,193,194,196,198,203,],[5,-8,-11,-10,-100,-13,-17,-12,-7,-16,-15,-99,-14,5,-9,-59,-50,-47,5,-54,-43,-58,5,-27,-61,-20,5,-113,-51,-53,-31,-114,5,-39,-37,-18,-111,-63,-52,-30,-110,-46,-60,-38,-62,-44,-19,-45,]),'OFF':([19,],[54,]),'TRUE':([3,5,14,18,22,29,34,35,36,37,38,39,40,41,42,48,57,63,64,65,66,68,69,74,76,79,80,82,84,85,86,87,88,89,90,93,94,95,96,97,110,114,118,119,120,123,134,181,195,],[38,-83,-84,38,-85,-86,-103,38,-82,-102,-104,38,-114,-105,-101,38,38,38,38,38,38,-80,38,38,-29,38,38,38,38,-90,38,-87,-88,-89,38,-81,-76,-78,-77,-79,38,38,38,38,38,38,38,-36,38,]),'RED':([34,36,37,38,40,41,42,67,68,93,94,95,96,97,148,],[-103,-82,-102,-104,-114,-105,-101,106,-80,-81,-76,-78,-77,-79,106,]),'#':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,32,33,53,73,78,109,126,128,139,147,150,151,152,159,161,162,165,172,173,175,176,177,178,179,180,184,185,187,193,194,196,198,203,],[9,-8,-11,-10,-100,-13,-17,-12,-7,-16,-15,-99,-14,9,-9,61,-59,-50,-47,-54,-43,-58,-27,-61,-20,9,-113,-51,-53,-31,-114,9,-39,-37,-18,-111,-63,-52,-30,-110,-46,-60,-38,-62,-44,-19,-45,]),']':([34,36,37,38,40,41,42,53,68,93,94,95,96,97,111,112,128,130,131,135,136,147,155,156,157,160,187,],[-103,-82,-102,-104,-114,-105,-101,-59,-80,-81,-76,-78,-77,-79,133,-114,-58,154,-114,-55,-57,-61,-65,-64,-66,-56,-60,]),')':([34,36,37,38,40,41,42,51,62,68,76,77,83,93,94,95,96,97,107,113,114,116,117,121,122,132,140,141,143,144,145,146,164,167,182,183,189,199,201,202,204,],[-103,-82,-102,-104,-114,-105,-101,-114,93,-80,-29,115,-75,-81,-76,-78,-77,-79,129,137,138,-73,-72,-74,-71,158,163,-33,-69,-68,-67,-70,-114,188,-32,-35,-114,-21,-23,-34,-22,]),'(':([3,5,6,12,14,18,22,29,34,35,36,37,38,39,40,41,42,43,46,47,48,57,63,64,65,66,68,69,72,74,75,76,79,80,82,84,85,86,87,88,89,90,92,93,94,95,96,97,114,118,119,120,123,127,134,181,195,],[35,-83,-108,48,-84,35,-85,-86,-103,35,-82,-102,-104,35,-114,-105,-101,69,76,-28,35,35,35,35,35,35,-80,35,110,35,113,-29,35,35,35,35,-90,35,-87,-88,-89,35,-112,-81,-76,-78,-77,-79,35,35,35,35,35,149,35,-36,35,]),'+':([34,36,37,38,39,40,41,42,51,67,68,93,94,95,96,97,112,116,117,121,122,124,125,143,144,145,146,],[-103,-82,-102,-104,63,-114,-105,-101,63,63,-80,-81,-76,-78,-77,-79,63,63,63,63,63,63,63,63,63,63,63,]),'*':([34,36,37,38,39,40,41,42,51,67,68,93,94,95,96,97,112,116,117,121,122,124,125,143,144,145,146,],[-103,-82,-102,-104,64,-114,-105,-101,64,64,-80,-81,64,-78,64,-79,64,64,64,64,64,64,64,64,64,64,64,]),'-':([34,36,37,38,39,40,41,42,51,67,68,93,94,95,96,97,112,116,117,121,122,124,125,143,144,145,146,],[-103,-82,-102,-104,65,-114,-105,-101,65,65,-80,-81,-76,-78,-77,-79,65,65,65,65,65,65,65,65,65,65,65,]),',':([34,36,37,38,40,41,42,51,68,83,93,94,95,96,97,112,116,117,121,122,141,143,144,145,146,164,189,],[-103,-82,-102,-104,-114,-105,-101,-114,-80,-75,-81,-76,-78,-77,-79,134,-73,-72,-74,-71,-33,-69,-68,-67,-70,181,200,]),'/':([34,36,37,38,39,40,41,42,51,67,68,93,94,95,96,97,112,116,117,121,122,124,125,143,144,145,146,],[-103,-82,-102,-104,66,-114,-105,-101,66,66,-80,-81,66,-78,66,-79,66,66,66,66,66,66,66,66,66,66,66,]),'PIPE':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,32,53,73,78,109,126,128,139,147,150,151,152,159,161,162,165,172,173,175,176,177,178,179,180,184,185,187,193,194,196,198,203,],[8,-8,-11,-10,-100,-13,-17,-12,-7,-16,-15,-99,-14,8,-9,-59,-50,-47,-54,-43,-58,-27,-61,-20,8,-113,-51,-53,-31,-114,8,-39,-37,-18,-111,-63,-52,-30,-110,-46,-60,-38,-62,-44,-19,-45,]),'INIT':([0,],[1,]),'ORANGE':([34,36,37,38,40,41,42,67,68,93,94,95,96,97,148,],[-103,-82,-102,-104,-114,-105,-101,104,-80,-81,-76,-78,-77,-79,104,]),';':([34,36,37,38,40,41,42,49,50,51,52,68,71,83,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,116,117,121,122,124,133,137,138,143,144,145,146,154,158,163,166,],[-103,-82,-102,-104,-114,-105,-101,78,-49,-114,-48,-80,109,-75,126,-81,-76,-78,-77,-79,-93,128,-97,-94,-92,-98,-96,-95,-91,-73,-72,-74,-71,147,159,161,162,-69,-68,-67,-70,178,179,180,187,]),'=':([23,34,36,37,38,40,41,42,51,68,80,81,84,93,94,95,96,97,],[57,-103,-82,-102,-104,-114,-105,-101,81,-80,118,120,123,-81,-76,-78,-77,-79,]),'<':([34,36,37,38,40,41,42,51,68,93,94,95,96,97,],[-103,-82,-102,-104,-114,-105,-101,80,-80,-81,-76,-78,-77,-79,]),'$end':([2,16,20,56,],[0,-3,-1,-2,]),'CTE_STRING':([18,],[50,]),'AND':([34,36,37,38,40,41,42,51,68,93,94,95,96,97,],[-103,-82,-102,-104,-114,-105,-101,79,-80,-81,-76,-78,-77,-79,]),'TRIO':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,32,53,73,78,108,109,126,128,131,139,147,150,151,152,159,161,162,165,172,173,175,176,177,178,179,180,184,185,187,193,194,196,198,203,],[14,-8,-11,-10,-100,-13,-17,-12,-7,-16,-15,-99,-14,14,-9,-59,-50,-47,14,-54,-43,-58,14,-27,-61,-20,14,-113,-51,-53,-31,-114,14,-39,-37,-18,-111,-63,-52,-30,-110,-46,-60,-38,-62,-44,-19,-45,]),'END':([1,4,10,11,13,15,17,21,24,25,26,27,28,30,31,32,53,58,59,60,73,78,109,126,128,139,147,150,152,159,161,162,165,173,175,176,177,178,179,180,184,185,187,193,194,196,198,203,],[16,-8,-11,-10,-100,-13,-17,56,-12,-7,-16,-15,-99,-14,-114,-9,-59,-6,-5,-4,-50,-47,-54,-43,-58,-27,-61,-20,-113,-51,-53,-31,-114,-39,-37,-18,-111,-63,-52,-30,-110,-46,-60,-38,-62,-44,-19,-45,]),'CLEAR':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,32,53,73,78,109,126,128,139,147,150,151,152,159,161,162,165,172,173,175,176,177,178,179,180,184,185,187,193,194,196,198,203,],[13,-8,-11,-10,-100,-13,-17,-12,-7,-16,-15,-99,-14,13,-9,-59,-50,-47,-54,-43,-58,-27,-61,-20,13,-113,-51,-53,-31,-114,13,-39,-37,-18,-111,-63,-52,-30,-110,-46,-60,-38,-62,-44,-19,-45,]),'ECHO':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,32,53,73,78,109,126,128,139,147,150,151,152,159,161,162,165,172,173,175,176,177,178,179,180,184,185,187,193,194,196,198,203,],[18,-8,-11,-10,-100,-13,-17,-12,-7,-16,-15,-99,-14,18,-9,-59,-50,-47,-54,-43,-58,-27,-61,-20,18,-113,-51,-53,-31,-114,18,-39,-37,-18,-111,-63,-52,-30,-110,-46,-60,-38,-62,-44,-19,-45,]),'SAMPLE':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,32,53,73,78,108,109,126,128,131,139,147,150,151,152,159,161,162,165,172,173,175,176,177,178,179,180,184,185,187,193,194,196,198,203,],[19,-8,-11,-10,-100,-13,-17,-12,-7,-16,-15,-99,-14,19,-9,-59,-50,-47,19,-54,-43,-58,19,-27,-61,-20,19,-113,-51,-53,-31,-114,19,-39,-37,-18,-111,-63,-52,-30,-110,-46,-60,-38,-62,-44,-19,-45,]),'CTE_INTEGER':([3,5,7,14,18,22,29,34,35,36,37,38,39,40,41,42,48,57,63,64,65,66,68,69,74,76,79,80,82,84,85,86,87,88,89,90,93,94,95,96,97,110,114,118,119,120,123,125,134,181,195,],[37,-83,44,-84,37,-85,-86,-103,37,-82,-102,-104,37,-114,-105,-101,37,37,37,37,37,37,-80,37,37,-29,37,37,37,37,-90,37,-87,-88,-89,37,-81,-76,-78,-77,-79,37,37,37,37,37,37,148,37,-36,37,]),'IN':([45,],[72,]),'QUAD':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,32,53,73,78,108,109,126,128,131,139,147,150,151,152,159,161,162,165,172,173,175,176,177,178,179,180,184,185,187,193,194,196,198,203,],[22,-8,-11,-10,-100,-13,-17,-12,-7,-16,-15,-99,-14,22,-9,-59,-50,-47,22,-54,-43,-58,22,-27,-61,-20,22,-113,-51,-53,-31,-114,22,-39,-37,-18,-111,-63,-52,-30,-110,-46,-60,-38,-62,-44,-19,-45,]),'[':([44,45,70,],[-109,74,108,]),'ELSE':([165,173,175,193,],[186,-39,-37,-38,]),'WHERE':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,32,53,73,78,109,126,128,139,147,150,151,152,159,161,162,165,172,173,175,176,177,178,179,180,184,185,187,193,194,196,198,203,],[28,-8,-11,-10,-100,-13,-17,-12,-7,-16,-15,-99,-14,28,-9,-59,-50,-47,-54,-43,-58,-27,-61,-20,28,-113,-51,-53,-31,-114,28,-39,-37,-18,-111,-63,-52,-30,-110,-46,-60,-38,-62,-44,-19,-45,]),'ID':([1,3,4,5,8,9,10,11,13,14,15,17,18,22,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,48,53,57,61,63,64,65,66,68,69,73,74,76,78,79,80,82,84,85,86,87,88,89,90,93,94,95,96,97,109,110,114,118,119,120,123,126,128,134,139,147,150,151,152,159,161,162,165,168,169,170,171,172,173,175,176,177,178,179,180,181,184,185,187,193,194,195,196,198,203,],[23,42,-8,-83,45,47,-11,-10,-100,-84,-13,-17,42,-85,-12,-7,-16,-15,-99,-86,-14,23,-9,-103,42,-82,-102,-104,42,-114,-105,-101,42,-59,42,92,42,42,42,42,-80,42,-50,42,-29,-47,42,42,42,42,-90,42,-87,-88,-89,42,-81,-76,-78,-77,-79,-54,42,42,42,42,42,42,-43,-58,42,-27,-61,-20,23,-113,-51,-53,-31,-114,-25,-24,-26,189,23,-39,-37,-18,-111,-63,-52,-30,-36,-110,-46,-60,-38,-62,42,-44,-19,-45,]),'IF':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,32,53,73,78,109,126,128,139,147,150,151,152,159,161,162,165,172,173,175,176,177,178,179,180,184,185,187,193,194,196,198,203,],[12,-8,-11,-10,-100,-13,-17,-12,-7,-16,-15,-99,-14,12,-9,-59,-50,-47,-54,-43,-58,-27,-61,-20,12,-113,-51,-53,-31,-114,12,-39,-37,-18,-111,-63,-52,-30,-110,-46,-60,-38,-62,-44,-19,-45,]),'BLUE':([34,36,37,38,40,41,42,67,68,93,94,95,96,97,148,],[-103,-82,-102,-104,-114,-105,-101,98,-80,-81,-76,-78,-77,-79,98,]),'ON':([19,],[55,]),'RIGHT':([54,55,],[85,85,]),'FALSE':([3,5,14,18,22,29,34,35,36,37,38,39,40,41,42,48,57,63,64,65,66,68,69,74,76,79,80,82,84,85,86,87,88,89,90,93,94,95,96,97,110,114,118,119,120,123,134,181,195,],[41,-83,-84,41,-85,-86,-103,41,-82,-102,-104,41,-114,-105,-101,41,41,41,41,41,41,-80,41,41,-29,41,41,41,41,-90,41,-87,-88,-89,41,-81,-76,-78,-77,-79,41,41,41,41,41,41,41,-36,41,]),'INT':([149,200,],[169,169,]),'OUT':([45,],[75,]),'FLOAT':([149,200,],[168,168,]),'CTE_FLOAT':([3,5,14,18,22,29,34,35,36,37,38,39,40,41,42,48,57,63,64,65,66,68,69,74,76,79,80,82,84,85,86,87,88,89,90,93,94,95,96,97,110,114,118,119,120,123,134,181,195,],[34,-83,-84,34,-85,-86,-103,34,-82,-102,-104,34,-114,-105,-101,34,34,34,34,34,34,-80,34,34,-29,34,34,34,34,-90,34,-87,-88,-89,34,-81,-76,-78,-77,-79,34,34,34,34,34,34,34,-36,34,]),'UP':([54,55,],[87,87,]),'PURPLE':([34,36,37,38,40,41,42,67,68,93,94,95,96,97,148,],[-103,-82,-102,-104,-114,-105,-101,100,-80,-81,-76,-78,-77,-79,100,]),'ARC':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,32,53,73,78,108,109,126,128,131,139,147,150,151,152,159,161,162,165,172,173,175,176,177,178,179,180,184,185,187,193,194,196,198,203,],[29,-8,-11,-10,-100,-13,-17,-12,-7,-16,-15,-99,-14,29,-9,-59,-50,-47,29,-54,-43,-58,29,-27,-61,-20,29,-113,-51,-53,-31,-114,29,-39,-37,-18,-111,-63,-52,-30,-110,-46,-60,-38,-62,-44,-19,-45,]),'BOOL':([149,200,],[170,170,]),'BLACK':([34,36,37,38,40,41,42,67,68,93,94,95,96,97,148,],[-103,-82,-102,-104,-114,-105,-101,105,-80,-81,-76,-78,-77,-79,105,]),'{':([92,115,127,129,142,153,186,188,197,],[-112,-106,151,-106,151,151,-107,151,151,]),'>':([34,36,37,38,40,41,42,51,68,80,93,94,95,96,97,],[-103,-82,-102,-104,-114,-105,-101,84,-80,119,-81,-76,-78,-77,-79,]),'}':([10,11,13,15,17,24,26,27,28,30,32,53,73,78,109,126,128,139,147,151,159,161,162,165,172,173,174,175,177,178,179,180,184,185,187,190,191,192,193,194,196,203,],[-11,-10,-100,-13,-17,-12,-16,-15,-99,-14,-9,-59,-50,-47,-54,-43,-58,-27,-61,173,-51,-53,-31,-114,-114,-39,193,-37,-111,-63,-52,-30,-110,-46,-60,-42,-40,-41,-38,-62,-44,-45,]),'OR':([34,36,37,38,40,41,42,51,68,93,94,95,96,97,],[-103,-82,-102,-104,-114,-105,-101,82,-80,-81,-76,-78,-77,-79,]),'LEFT':([54,55,],[89,89,]),'MOD':([1,4,10,11,13,15,17,24,25,26,27,28,30,31,32,53,73,78,109,126,128,139,147,150,152,159,161,162,165,173,175,176,177,178,179,180,184,185,187,193,194,196,198,203,],[33,-8,-11,-10,-100,-13,-17,-12,-7,-16,-15,-99,-14,33,-9,-59,-50,-47,-54,-43,-58,-27,-61,-20,-113,-51,-53,-31,-114,-39,-37,-18,-111,-63,-52,-30,-110,-46,-60,-38,-62,-44,-19,-45,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'figure':([1,31,108,131,151,172,],[3,3,3,3,3,3,]),'continueGo':([184,],[196,]),'color':([67,148,],[99,166,]),'callID':([9,],[46,]),'move':([54,55,],[86,90,]),'module':([1,31,],[4,4,]),'var_cte':([3,18,35,39,48,57,63,64,65,66,69,74,79,80,82,84,86,90,110,114,118,119,120,123,134,195,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,132,36,36,36,36,36,36,36,]),'gotoE':([186,],[197,]),'conditionA':([165,],[184,]),'writeA':([18,],[49,]),'vars':([149,200,],[167,204,]),'blockA':([151,],[175,]),'sumXparam':([181,],[195,]),'gotoFalse':([115,129,],[142,153,]),'write':([1,31,151,172,],[10,10,10,10,]),'program':([0,],[2,]),'moduleA':([127,],[152,]),'factor':([3,18,35,39,48,57,63,64,65,66,69,74,79,80,82,84,86,90,114,118,119,120,123,134,195,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'pipelineC':([112,],[135,]),'continueGoW':([177,],[194,]),'type':([149,200,],[171,171,]),'repeatB':([131,],[156,]),'empty':([31,40,51,112,131,164,165,172,189,],[58,68,83,136,157,183,185,190,201,]),'pipelineB':([74,134,],[111,160,]),'varsA':([189,],[199,]),'repeat':([1,31,151,172,],[15,15,15,15,]),'exp':([3,18,35,39,48,57,63,64,65,66,69,74,79,80,82,84,86,90,114,118,119,120,123,134,195,],[39,51,51,67,51,51,94,95,96,97,51,112,116,117,121,122,124,125,51,143,144,145,146,112,51,]),'repeatA':([108,131,],[130,155,]),'screen':([1,31,151,172,],[17,17,17,17,]),'endMod':([152,],[176,]),'insertEra':([76,],[114,]),'commandA':([19,],[53,]),'gotoW':([6,],[43,]),'gotoR':([44,],[70,]),'programA':([1,],[20,]),'programB':([1,31,],[21,59,]),'programC':([31,],[60,]),'insertQuadMod':([92,],[127,]),'blockB':([151,172,],[174,192,]),'condition':([1,31,151,172,],[11,11,11,11,]),'cycle':([1,31,151,172,],[24,24,24,24,]),'checkParam':([141,],[164,]),'statute':([1,31,151,172,],[25,25,172,172,]),'pipeline':([1,31,151,172,],[26,26,26,26,]),'blockC':([172,],[191,]),'calling':([1,31,151,172,],[27,27,27,27,]),'callingA':([114,],[139,]),'callingB':([114,195,],[140,202,]),'callingC':([164,],[182,]),'command':([1,31,108,131,151,172,],[30,30,131,131,30,30,]),'pipelineA':([45,],[73,]),'workspace':([1,31,],[31,31,]),'expression':([18,35,48,57,69,114,195,],[52,62,77,91,107,141,141,]),'assign':([1,31,151,172,],[32,32,32,32,]),'block':([127,142,153,188,197,],[150,165,177,198,203,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INIT programA','program',2,'p_program','sample_ly.py',105),
  ('programA -> programB END','programA',2,'p_programA','sample_ly.py',116),
  ('programA -> END','programA',1,'p_programA','sample_ly.py',117),
  ('programB -> workspace programC','programB',2,'p_programB','sample_ly.py',121),
  ('programC -> programB','programC',1,'p_programC','sample_ly.py',125),
  ('programC -> empty','programC',1,'p_programC','sample_ly.py',126),
  ('workspace -> statute','workspace',1,'p_workspace','sample_ly.py',130),
  ('workspace -> module','workspace',1,'p_workspace','sample_ly.py',131),
  ('statute -> assign','statute',1,'p_statute','sample_ly.py',136),
  ('statute -> condition','statute',1,'p_statute','sample_ly.py',137),
  ('statute -> write','statute',1,'p_statute','sample_ly.py',138),
  ('statute -> cycle','statute',1,'p_statute','sample_ly.py',139),
  ('statute -> repeat','statute',1,'p_statute','sample_ly.py',140),
  ('statute -> command','statute',1,'p_statute','sample_ly.py',141),
  ('statute -> calling','statute',1,'p_statute','sample_ly.py',142),
  ('statute -> pipeline','statute',1,'p_statute','sample_ly.py',143),
  ('statute -> screen','statute',1,'p_statute','sample_ly.py',144),
  ('module -> MOD # ID insertQuadMod moduleA endMod','module',6,'p_module','sample_ly.py',149),
  ('moduleA -> ( vars ) block','moduleA',4,'p_moduleA','sample_ly.py',171),
  ('moduleA -> block','moduleA',1,'p_moduleA','sample_ly.py',172),
  ('vars -> type ID varsA','vars',3,'p_vars','sample_ly.py',175),
  ('varsA -> , vars','varsA',2,'p_varsA','sample_ly.py',184),
  ('varsA -> empty','varsA',1,'p_varsA','sample_ly.py',185),
  ('type -> INT','type',1,'p_type','sample_ly.py',188),
  ('type -> FLOAT','type',1,'p_type','sample_ly.py',189),
  ('type -> BOOL','type',1,'p_type','sample_ly.py',190),
  ('calling -> # callID ( insertEra callingA','calling',5,'p_calling','sample_ly.py',196),
  ('callID -> ID','callID',1,'p_callID','sample_ly.py',201),
  ('insertEra -> <empty>','insertEra',0,'p_insertEra','sample_ly.py',209),
  ('callingA -> callingB ) ;','callingA',3,'p_callingA','sample_ly.py',220),
  ('callingA -> ) ;','callingA',2,'p_callingA','sample_ly.py',221),
  ('callingB -> expression checkParam callingC','callingB',3,'p_callingB','sample_ly.py',227),
  ('checkParam -> <empty>','checkParam',0,'p_checkParam','sample_ly.py',230),
  ('callingC -> , sumXparam callingB','callingC',3,'p_callingC','sample_ly.py',242),
  ('callingC -> empty','callingC',1,'p_callingC','sample_ly.py',243),
  ('sumXparam -> <empty>','sumXparam',0,'p_sumXparam','sample_ly.py',246),
  ('block -> { blockA','block',2,'p_block','sample_ly.py',251),
  ('blockA -> blockB }','blockA',2,'p_blockA','sample_ly.py',254),
  ('blockA -> }','blockA',1,'p_blockA','sample_ly.py',255),
  ('blockB -> statute blockC','blockB',2,'p_blockB','sample_ly.py',258),
  ('blockC -> blockB','blockC',1,'p_blockC','sample_ly.py',261),
  ('blockC -> empty','blockC',1,'p_blockC','sample_ly.py',262),
  ('assign -> ID = expression ;','assign',4,'p_assign','sample_ly.py',265),
  ('condition -> IF ( expression ) gotoFalse block conditionA continueGo','condition',8,'p_condition','sample_ly.py',292),
  ('conditionA -> ELSE gotoE block','conditionA',3,'p_conditionA','sample_ly.py',295),
  ('conditionA -> empty','conditionA',1,'p_conditionA','sample_ly.py',296),
  ('write -> ECHO writeA ;','write',3,'p_write','sample_ly.py',299),
  ('writeA -> expression','writeA',1,'p_writeA','sample_ly.py',309),
  ('writeA -> CTE_STRING','writeA',1,'p_writeA','sample_ly.py',310),
  ('pipeline -> PIPE ID pipelineA','pipeline',3,'p_pipeline','sample_ly.py',314),
  ('pipelineA -> [ pipelineB ] ;','pipelineA',4,'p_pipelineA','sample_ly.py',317),
  ('pipelineA -> IN ( var_cte ) ;','pipelineA',5,'p_pipelineA','sample_ly.py',318),
  ('pipelineA -> OUT ( ) ;','pipelineA',4,'p_pipelineA','sample_ly.py',319),
  ('pipelineA -> COUNT ;','pipelineA',2,'p_pipelineA','sample_ly.py',320),
  ('pipelineB -> exp pipelineC','pipelineB',2,'p_pipelineB','sample_ly.py',323),
  ('pipelineC -> , pipelineB','pipelineC',2,'p_pipelineC','sample_ly.py',326),
  ('pipelineC -> empty','pipelineC',1,'p_pipelineC','sample_ly.py',327),
  ('command -> figure exp exp color ;','command',5,'p_command','sample_ly.py',330),
  ('command -> SAMPLE commandA','command',2,'p_command','sample_ly.py',331),
  ('commandA -> ON move exp CTE_INTEGER color ;','commandA',6,'p_commandA','sample_ly.py',349),
  ('commandA -> OFF move exp ;','commandA',4,'p_commandA','sample_ly.py',350),
  ('cycle -> WHILE gotoW ( expression ) gotoFalse block continueGoW','cycle',8,'p_cycle','sample_ly.py',359),
  ('repeat -> REPLAY CTE_INTEGER gotoR [ repeatA ] ;','repeat',7,'p_repeat','sample_ly.py',362),
  ('repeatA -> command repeatB','repeatA',2,'p_repeatA','sample_ly.py',366),
  ('repeatB -> repeatA','repeatB',1,'p_repeatB','sample_ly.py',369),
  ('repeatB -> empty','repeatB',1,'p_repeatB','sample_ly.py',370),
  ('expression -> exp = = exp','expression',4,'p_expression','sample_ly.py',373),
  ('expression -> exp < > exp','expression',4,'p_expression','sample_ly.py',374),
  ('expression -> exp < = exp','expression',4,'p_expression','sample_ly.py',375),
  ('expression -> exp > = exp','expression',4,'p_expression','sample_ly.py',376),
  ('expression -> exp > exp','expression',3,'p_expression','sample_ly.py',377),
  ('expression -> exp < exp','expression',3,'p_expression','sample_ly.py',378),
  ('expression -> exp AND exp','expression',3,'p_expression','sample_ly.py',379),
  ('expression -> exp OR exp','expression',3,'p_expression','sample_ly.py',380),
  ('expression -> exp empty','expression',2,'p_expression','sample_ly.py',381),
  ('exp -> exp + exp','exp',3,'p_exp','sample_ly.py',415),
  ('exp -> exp - exp','exp',3,'p_exp','sample_ly.py',416),
  ('exp -> exp * exp','exp',3,'p_exp','sample_ly.py',417),
  ('exp -> exp / exp','exp',3,'p_exp','sample_ly.py',418),
  ('exp -> factor empty','exp',2,'p_exp','sample_ly.py',419),
  ('factor -> ( expression )','factor',3,'p_factor','sample_ly.py',444),
  ('factor -> var_cte','factor',1,'p_factor','sample_ly.py',445),
  ('figure -> OVAL','figure',1,'p_figure','sample_ly.py',452),
  ('figure -> TRIO','figure',1,'p_figure','sample_ly.py',453),
  ('figure -> QUAD','figure',1,'p_figure','sample_ly.py',454),
  ('figure -> ARC','figure',1,'p_figure','sample_ly.py',455),
  ('move -> UP','move',1,'p_move','sample_ly.py',459),
  ('move -> DOWN','move',1,'p_move','sample_ly.py',460),
  ('move -> LEFT','move',1,'p_move','sample_ly.py',461),
  ('move -> RIGHT','move',1,'p_move','sample_ly.py',462),
  ('color -> RED','color',1,'p_color','sample_ly.py',466),
  ('color -> YELLOW','color',1,'p_color','sample_ly.py',467),
  ('color -> BLUE','color',1,'p_color','sample_ly.py',468),
  ('color -> GREEN','color',1,'p_color','sample_ly.py',469),
  ('color -> BLACK','color',1,'p_color','sample_ly.py',470),
  ('color -> ORANGE','color',1,'p_color','sample_ly.py',471),
  ('color -> PURPLE','color',1,'p_color','sample_ly.py',472),
  ('color -> CYAN','color',1,'p_color','sample_ly.py',473),
  ('screen -> WHERE','screen',1,'p_screen','sample_ly.py',477),
  ('screen -> CLEAR','screen',1,'p_screen','sample_ly.py',478),
  ('var_cte -> ID','var_cte',1,'p_var_cte','sample_ly.py',481),
  ('var_cte -> CTE_INTEGER','var_cte',1,'p_var_cte','sample_ly.py',482),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','sample_ly.py',483),
  ('var_cte -> TRUE','var_cte',1,'p_var_cte','sample_ly.py',484),
  ('var_cte -> FALSE','var_cte',1,'p_var_cte','sample_ly.py',485),
  ('gotoFalse -> <empty>','gotoFalse',0,'p_gotoFalse','sample_ly.py',520),
  ('gotoE -> <empty>','gotoE',0,'p_gotoE','sample_ly.py',527),
  ('gotoW -> <empty>','gotoW',0,'p_gotoW','sample_ly.py',531),
  ('gotoR -> <empty>','gotoR',0,'p_gotoR','sample_ly.py',535),
  ('continueGo -> <empty>','continueGo',0,'p_continueGo','sample_ly.py',539),
  ('continueGoW -> <empty>','continueGoW',0,'p_continueGoW','sample_ly.py',543),
  ('insertQuadMod -> <empty>','insertQuadMod',0,'p_insertQuadMod','sample_ly.py',547),
  ('endMod -> <empty>','endMod',0,'p_endMod','sample_ly.py',552),
  ('empty -> <empty>','empty',0,'p_empty','sample_ly.py',556),
]
