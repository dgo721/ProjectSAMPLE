
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'j`\x13\xdcDnf\x1b\xda\xcb\x9d\x01\x1f\xc7ZI'
    
_lr_action_items = {'COUNT':([51,],[83,]),'YELLOW':([39,41,42,43,45,46,47,78,79,108,109,110,111,112,168,],[-116,-94,-115,-117,-127,-118,-114,117,-92,-93,-88,-90,-89,-91,117,]),'DOWN':([64,65,],[101,101,]),'WHILE':([1,4,8,12,13,15,17,19,27,28,29,30,32,33,35,36,38,63,85,91,125,126,147,158,167,172,173,174,181,183,184,187,197,198,200,201,202,203,204,205,209,210,212,213,221,222,224,228,233,237,],[6,-8,-16,-17,-11,-113,-13,-19,-10,-12,-7,-18,-15,-112,-14,6,-9,-71,-59,-54,-50,-63,-70,-34,-73,-22,6,-126,-60,-62,-38,-127,6,-46,-44,-20,-124,-75,-61,-37,-123,-53,-57,-72,-45,-74,-51,-21,-52,-58,]),'REPLAY':([1,4,8,12,13,15,17,19,27,28,29,30,32,33,35,36,38,63,85,91,125,126,147,158,167,172,173,174,181,183,184,187,197,198,200,201,202,203,204,205,209,210,212,213,221,222,224,228,233,237,],[7,-8,-16,-17,-11,-113,-13,-19,-10,-12,-7,-18,-15,-112,-14,7,-9,-71,-59,-54,-50,-63,-70,-34,-73,-22,7,-126,-60,-62,-38,-127,7,-46,-44,-20,-124,-75,-61,-37,-123,-53,-57,-72,-45,-74,-51,-21,-52,-58,]),'GREEN':([39,41,42,43,45,46,47,78,79,108,109,110,111,112,168,],[-116,-94,-115,-117,-127,-118,-114,116,-92,-93,-88,-90,-89,-91,116,]),'CYAN':([39,41,42,43,45,46,47,78,79,108,109,110,111,112,168,],[-116,-94,-115,-117,-127,-118,-114,118,-92,-93,-88,-90,-89,-91,118,]),'OVAL':([1,4,8,12,13,15,17,19,27,28,29,30,32,33,35,36,38,63,85,91,124,125,126,147,150,158,167,172,173,174,181,183,184,187,197,198,200,201,202,203,204,205,209,210,212,213,221,222,224,228,233,237,],[5,-8,-16,-17,-11,-113,-13,-19,-10,-12,-7,-18,-15,-112,-14,5,-9,-71,-59,-54,5,-50,-63,-70,5,-34,-73,-22,5,-126,-60,-62,-38,-127,5,-46,-44,-20,-124,-75,-61,-37,-123,-53,-57,-72,-45,-74,-51,-21,-52,-58,]),'OFF':([22,],[64,]),'TRUE':([3,5,16,21,25,34,39,40,41,42,43,44,45,46,47,50,54,67,74,75,76,77,79,80,86,88,92,93,95,97,98,99,100,101,102,103,104,108,109,110,111,112,127,131,136,137,138,141,153,190,206,214,223,],[43,-95,-96,43,-97,-98,-116,43,-94,-115,-117,43,-127,-118,-114,43,43,-33,43,43,43,43,-92,43,43,-36,43,43,43,43,-102,43,-99,-100,-101,43,43,-93,-88,-90,-89,-91,43,43,43,43,43,43,43,-33,-43,43,43,]),'WHITE':([39,41,42,43,45,46,47,78,79,108,109,110,111,112,168,],[-116,-94,-115,-117,-127,-118,-114,121,-92,-93,-88,-90,-89,-91,121,]),'RED':([39,41,42,43,45,46,47,78,79,108,109,110,111,112,168,],[-116,-94,-115,-117,-127,-118,-114,122,-92,-93,-88,-90,-89,-91,122,]),'#':([1,4,8,12,13,15,17,19,27,28,29,30,32,33,35,36,37,38,63,85,91,125,126,147,158,167,172,173,174,181,183,184,187,197,198,200,201,202,203,204,205,209,210,212,213,221,222,224,228,233,237,],[11,-8,-16,-17,-11,-113,-13,-19,-10,-12,-7,-18,-15,-112,-14,11,72,-9,-71,-59,-54,-50,-63,-70,-34,-73,-22,11,-126,-60,-62,-38,-127,11,-46,-44,-20,-124,-75,-61,-37,-123,-53,-57,-72,-45,-74,-51,-21,-52,-58,]),']':([39,41,42,43,45,46,47,63,79,108,109,110,111,112,128,129,144,147,149,150,154,155,162,167,170,177,178,179,182,213,226,227,],[-116,-94,-115,-117,-127,-118,-114,-71,-92,-93,-88,-90,-89,-91,152,-127,169,-70,176,-127,-64,-66,188,-73,191,-77,-76,-78,-65,-72,234,235,]),')':([39,41,42,43,45,46,47,61,73,79,88,89,96,108,109,110,111,112,123,130,131,134,135,139,140,151,159,160,163,164,165,166,186,192,207,208,217,229,231,232,236,],[-116,-94,-115,-117,-127,-118,-114,-127,108,-92,-36,132,-87,-93,-88,-90,-89,-91,148,156,157,-85,-84,-86,-83,180,185,-40,-81,-80,-79,-82,-127,216,-39,-42,-127,-24,-26,-41,-25,]),'(':([3,5,6,14,16,21,25,34,39,40,41,42,43,44,45,46,47,48,50,52,53,54,67,74,75,76,77,79,80,84,86,87,88,92,93,95,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,131,136,137,138,141,146,153,190,206,214,223,],[40,-95,-121,54,-96,40,-97,-98,-116,40,-94,-115,-117,40,-127,-118,-114,80,40,88,-35,40,-33,40,40,40,40,-92,40,127,40,130,-36,40,40,40,40,-102,40,-99,-100,-101,40,40,-23,-125,-93,-88,-90,-89,-91,40,40,40,40,40,171,40,-33,-43,40,40,]),'+':([39,41,42,43,44,45,46,47,61,78,79,108,109,110,111,112,129,134,135,139,140,142,143,144,163,164,165,166,226,],[-116,-94,-115,-117,74,-127,-118,-114,74,74,-92,-93,-88,-90,-89,-91,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'*':([39,41,42,43,44,45,46,47,61,78,79,108,109,110,111,112,129,134,135,139,140,142,143,144,163,164,165,166,226,],[-116,-94,-115,-117,75,-127,-118,-114,75,75,-92,-93,75,-90,75,-91,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'-':([39,41,42,43,44,45,46,47,61,78,79,108,109,110,111,112,129,134,135,139,140,142,143,144,163,164,165,166,226,],[-116,-94,-115,-117,76,-127,-118,-114,76,76,-92,-93,-88,-90,-89,-91,76,76,76,76,76,76,76,76,76,76,76,76,76,]),',':([39,41,42,43,45,46,47,61,79,96,108,109,110,111,112,129,134,135,139,140,160,163,164,165,166,186,217,],[-116,-94,-115,-117,-127,-118,-114,-127,-92,-87,-93,-88,-90,-89,-91,153,-85,-84,-86,-83,-40,-81,-80,-79,-82,206,230,]),'/':([39,41,42,43,44,45,46,47,61,78,79,108,109,110,111,112,129,134,135,139,140,142,143,144,163,164,165,166,226,],[-116,-94,-115,-117,77,-127,-118,-114,77,77,-92,-93,77,-90,77,-91,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'PIPE':([1,4,8,12,13,15,17,19,27,28,29,30,32,33,35,36,38,63,85,91,125,126,147,158,167,172,173,174,181,183,184,187,197,198,200,201,202,203,204,205,209,210,212,213,221,222,224,228,233,237,],[10,-8,-16,-17,-11,-113,-13,-19,-10,-12,-7,-18,-15,-112,-14,10,-9,-71,-59,-54,-50,-63,-70,-34,-73,-22,10,-126,-60,-62,-38,-127,10,-46,-44,-20,-124,-75,-61,-37,-123,-53,-57,-72,-45,-74,-51,-21,-52,-58,]),'INIT':([0,],[1,]),'ORANGE':([39,41,42,43,45,46,47,78,79,108,109,110,111,112,168,],[-116,-94,-115,-117,-127,-118,-114,119,-92,-93,-88,-90,-89,-91,119,]),';':([39,41,42,43,45,46,47,59,60,61,62,79,82,83,96,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,135,139,140,142,152,156,157,163,164,165,166,176,180,185,188,189,235,],[-116,-94,-115,-117,-127,-118,-114,91,-56,-127,-55,-92,125,126,-87,-93,-88,-90,-89,-91,-105,147,-110,-106,-104,-111,-109,-107,-108,-103,-85,-84,-86,-83,167,181,183,184,-81,-80,-79,-82,203,204,205,212,213,237,]),'=':([9,26,39,41,42,43,45,46,47,61,79,93,94,97,108,109,110,111,112,169,234,],[50,-32,-116,-94,-115,-117,-127,-118,-114,94,-92,136,138,141,-93,-88,-90,-89,-91,-31,-30,]),'<':([39,41,42,43,45,46,47,61,79,108,109,110,111,112,],[-116,-94,-115,-117,-127,-118,-114,93,-92,-93,-88,-90,-89,-91,]),'$end':([2,18,23,66,],[0,-3,-1,-2,]),'CTE_STRING':([21,],[60,]),'AND':([39,41,42,43,45,46,47,61,79,108,109,110,111,112,],[-116,-94,-115,-117,-127,-118,-114,92,-92,-93,-88,-90,-89,-91,]),'TRIO':([1,4,8,12,13,15,17,19,27,28,29,30,32,33,35,36,38,63,85,91,124,125,126,147,150,158,167,172,173,174,181,183,184,187,197,198,200,201,202,203,204,205,209,210,212,213,221,222,224,228,233,237,],[16,-8,-16,-17,-11,-113,-13,-19,-10,-12,-7,-18,-15,-112,-14,16,-9,-71,-59,-54,16,-50,-63,-70,16,-34,-73,-22,16,-126,-60,-62,-38,-127,16,-46,-44,-20,-124,-75,-61,-37,-123,-53,-57,-72,-45,-74,-51,-21,-52,-58,]),'END':([1,4,8,12,13,15,17,19,24,27,28,29,30,32,33,35,36,38,63,69,70,71,85,91,125,126,147,158,167,172,174,181,183,184,187,198,200,201,202,203,204,205,209,210,212,213,221,222,224,228,233,237,],[18,-8,-16,-17,-11,-113,-13,-19,66,-10,-12,-7,-18,-15,-112,-14,-127,-9,-71,-6,-5,-4,-59,-54,-50,-63,-70,-34,-73,-22,-126,-60,-62,-38,-127,-46,-44,-20,-124,-75,-61,-37,-123,-53,-57,-72,-45,-74,-51,-21,-52,-58,]),'CLEAR':([1,4,8,12,13,15,17,19,27,28,29,30,32,33,35,36,38,63,85,91,125,126,147,158,167,172,173,174,181,183,184,187,197,198,200,201,202,203,204,205,209,210,212,213,221,222,224,228,233,237,],[15,-8,-16,-17,-11,-113,-13,-19,-10,-12,-7,-18,-15,-112,-14,15,-9,-71,-59,-54,-50,-63,-70,-34,-73,-22,15,-126,-60,-62,-38,-127,15,-46,-44,-20,-124,-75,-61,-37,-123,-53,-57,-72,-45,-74,-51,-21,-52,-58,]),'ECHO':([1,4,8,12,13,15,17,19,27,28,29,30,32,33,35,36,38,63,85,91,125,126,147,158,167,172,173,174,181,183,184,187,197,198,200,201,202,203,204,205,209,210,212,213,221,222,224,228,233,237,],[21,-8,-16,-17,-11,-113,-13,-19,-10,-12,-7,-18,-15,-112,-14,21,-9,-71,-59,-54,-50,-63,-70,-34,-73,-22,21,-126,-60,-62,-38,-127,21,-46,-44,-20,-124,-75,-61,-37,-123,-53,-57,-72,-45,-74,-51,-21,-52,-58,]),'SAMPLE':([1,4,8,12,13,15,17,19,27,28,29,30,32,33,35,36,38,63,85,91,124,125,126,147,150,158,167,172,173,174,181,183,184,187,197,198,200,201,202,203,204,205,209,210,212,213,221,222,224,228,233,237,],[22,-8,-16,-17,-11,-113,-13,-19,-10,-12,-7,-18,-15,-112,-14,22,-9,-71,-59,-54,22,-50,-63,-70,22,-34,-73,-22,22,-126,-60,-62,-38,-127,22,-46,-44,-20,-124,-75,-61,-37,-123,-53,-57,-72,-45,-74,-51,-21,-52,-58,]),'CTE_INTEGER':([3,5,7,16,21,25,34,39,40,41,42,43,44,45,46,47,50,54,67,74,75,76,77,79,80,86,88,92,93,95,97,98,99,100,101,102,103,104,108,109,110,111,112,127,131,133,136,137,138,141,143,145,153,190,206,214,215,223,],[42,-95,49,-96,42,-97,-98,-116,42,-94,-115,-117,42,-127,-118,-114,42,42,-33,42,42,42,42,-92,42,42,-36,42,42,42,42,-102,42,-99,-100,-101,42,42,-93,-88,-90,-89,-91,42,42,162,42,42,42,42,168,170,42,-33,-43,42,227,42,]),'IN':([51,],[84,]),'QUAD':([1,4,8,12,13,15,17,19,27,28,29,30,32,33,35,36,38,63,85,91,124,125,126,147,150,158,167,172,173,174,181,183,184,187,197,198,200,201,202,203,204,205,209,210,212,213,221,222,224,228,233,237,],[25,-8,-16,-17,-11,-113,-13,-19,-10,-12,-7,-18,-15,-112,-14,25,-9,-71,-59,-54,25,-50,-63,-70,25,-34,-73,-22,25,-126,-60,-62,-38,-127,25,-46,-44,-20,-124,-75,-61,-37,-123,-53,-57,-72,-45,-74,-51,-21,-52,-58,]),'[':([26,49,51,81,90,105,169,191,],[67,-122,86,124,133,145,190,215,]),'ELSE':([187,198,200,221,],[211,-46,-44,-45,]),'WHERE':([1,4,8,12,13,15,17,19,27,28,29,30,32,33,35,36,38,63,85,91,125,126,147,158,167,172,173,174,181,183,184,187,197,198,200,201,202,203,204,205,209,210,212,213,221,222,224,228,233,237,],[33,-8,-16,-17,-11,-113,-13,-19,-10,-12,-7,-18,-15,-112,-14,33,-9,-71,-59,-54,-50,-63,-70,-34,-73,-22,33,-126,-60,-62,-38,-127,33,-46,-44,-20,-124,-75,-61,-37,-123,-53,-57,-72,-45,-74,-51,-21,-52,-58,]),'ID':([1,3,4,5,8,10,11,12,13,15,16,17,19,21,25,27,28,29,30,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,50,54,55,56,57,58,63,67,68,72,74,75,76,77,79,80,85,86,88,91,92,93,95,97,98,99,100,101,102,103,104,108,109,110,111,112,125,126,127,131,136,137,138,141,147,153,158,167,172,173,174,181,183,184,187,190,193,194,195,196,197,198,200,201,202,203,204,205,206,209,210,212,213,214,221,222,223,224,228,233,237,],[26,47,-8,-95,-16,51,53,-17,-11,-113,-96,-13,-19,47,-97,-10,-12,-7,-18,-15,-112,-98,-14,26,-9,-116,47,-94,-115,-117,47,-127,-118,-114,47,47,-67,-68,90,-69,-71,-33,105,106,47,47,47,47,-92,47,-59,47,-36,-54,47,47,47,47,-102,47,-99,-100,-101,47,47,-93,-88,-90,-89,-91,-50,-63,47,47,47,47,47,47,-70,47,-34,-73,-22,26,-126,-60,-62,-38,-127,-33,-28,-27,-29,217,26,-46,-44,-20,-124,-75,-61,-37,-43,-123,-53,-57,-72,47,-45,-74,47,-51,-21,-52,-58,]),'IF':([1,4,8,12,13,15,17,19,27,28,29,30,32,33,35,36,38,63,85,91,125,126,147,158,167,172,173,174,181,183,184,187,197,198,200,201,202,203,204,205,209,210,212,213,221,222,224,228,233,237,],[14,-8,-16,-17,-11,-113,-13,-19,-10,-12,-7,-18,-15,-112,-14,14,-9,-71,-59,-54,-50,-63,-70,-34,-73,-22,14,-126,-60,-62,-38,-127,14,-46,-44,-20,-124,-75,-61,-37,-123,-53,-57,-72,-45,-74,-51,-21,-52,-58,]),'BLUE':([39,41,42,43,45,46,47,78,79,108,109,110,111,112,168,],[-116,-94,-115,-117,-127,-118,-114,113,-92,-93,-88,-90,-89,-91,113,]),'ON':([22,],[65,]),'ARR':([1,4,8,12,13,15,17,19,27,28,29,30,32,33,35,36,38,63,85,91,125,126,147,158,167,172,173,174,181,183,184,187,197,198,200,201,202,203,204,205,209,210,212,213,221,222,224,228,233,237,],[20,-8,-16,-17,-11,-113,-13,-19,-10,-12,-7,-18,-15,-112,-14,20,-9,-71,-59,-54,-50,-63,-70,-34,-73,-22,20,-126,-60,-62,-38,-127,20,-46,-44,-20,-124,-75,-61,-37,-123,-53,-57,-72,-45,-74,-51,-21,-52,-58,]),'RIGHT':([64,65,],[98,98,]),'FALSE':([3,5,16,21,25,34,39,40,41,42,43,44,45,46,47,50,54,67,74,75,76,77,79,80,86,88,92,93,95,97,98,99,100,101,102,103,104,108,109,110,111,112,127,131,136,137,138,141,153,190,206,214,223,],[46,-95,-96,46,-97,-98,-116,46,-94,-115,-117,46,-127,-118,-114,46,46,-33,46,46,46,46,-92,46,46,-36,46,46,46,46,-102,46,-99,-100,-101,46,46,-93,-88,-90,-89,-91,46,46,46,46,46,46,46,-33,-43,46,46,]),'MAT':([1,4,8,12,13,15,17,19,27,28,29,30,32,33,35,36,38,63,85,91,125,126,147,158,167,172,173,174,181,183,184,187,197,198,200,201,202,203,204,205,209,210,212,213,221,222,224,228,233,237,],[31,-8,-16,-17,-11,-113,-13,-19,-10,-12,-7,-18,-15,-112,-14,31,-9,-71,-59,-54,-50,-63,-70,-34,-73,-22,31,-126,-60,-62,-38,-127,31,-46,-44,-20,-124,-75,-61,-37,-123,-53,-57,-72,-45,-74,-51,-21,-52,-58,]),'INT':([20,31,171,230,],[55,55,194,194,]),'OUT':([51,],[87,]),'FLOAT':([20,31,171,230,],[56,56,193,193,]),'CTE_FLOAT':([3,5,16,21,25,34,39,40,41,42,43,44,45,46,47,50,54,67,74,75,76,77,79,80,86,88,92,93,95,97,98,99,100,101,102,103,104,108,109,110,111,112,127,131,136,137,138,141,153,190,206,214,223,],[39,-95,-96,39,-97,-98,-116,39,-94,-115,-117,39,-127,-118,-114,39,39,-33,39,39,39,39,-92,39,39,-36,39,39,39,39,-102,39,-99,-100,-101,39,39,-93,-88,-90,-89,-91,39,39,39,39,39,39,39,-33,-43,39,39,]),'UP':([64,65,],[100,100,]),'PURPLE':([39,41,42,43,45,46,47,78,79,108,109,110,111,112,168,],[-116,-94,-115,-117,-127,-118,-114,115,-92,-93,-88,-90,-89,-91,115,]),'ARC':([1,4,8,12,13,15,17,19,27,28,29,30,32,33,35,36,38,63,85,91,124,125,126,147,150,158,167,172,173,174,181,183,184,187,197,198,200,201,202,203,204,205,209,210,212,213,221,222,224,228,233,237,],[34,-8,-16,-17,-11,-113,-13,-19,-10,-12,-7,-18,-15,-112,-14,34,-9,-71,-59,-54,34,-50,-63,-70,34,-34,-73,-22,34,-126,-60,-62,-38,-127,34,-46,-44,-20,-124,-75,-61,-37,-123,-53,-57,-72,-45,-74,-51,-21,-52,-58,]),'BOOL':([20,31,171,230,],[58,58,195,195,]),'BLACK':([39,41,42,43,45,46,47,78,79,108,109,110,111,112,168,],[-116,-94,-115,-117,-127,-118,-114,120,-92,-93,-88,-90,-89,-91,120,]),'{':([106,107,132,146,148,161,175,211,216,225,],[-23,-125,-119,173,-119,173,173,-120,173,173,]),'>':([39,41,42,43,45,46,47,61,79,93,108,109,110,111,112,],[-116,-94,-115,-117,-127,-118,-114,97,-92,137,-93,-88,-90,-89,-91,]),'}':([8,12,13,15,17,19,27,28,30,32,33,35,38,63,85,91,125,126,147,158,167,173,181,183,184,187,197,198,199,200,202,203,204,205,209,210,212,213,218,219,220,221,222,224,233,237,],[-16,-17,-11,-113,-13,-19,-10,-12,-18,-15,-112,-14,-9,-71,-59,-54,-50,-63,-70,-34,-73,198,-60,-62,-38,-127,-127,-46,221,-44,-124,-75,-61,-37,-123,-53,-57,-72,-49,-47,-48,-45,-74,-51,-52,-58,]),'OR':([39,41,42,43,45,46,47,61,79,108,109,110,111,112,],[-116,-94,-115,-117,-127,-118,-114,95,-92,-93,-88,-90,-89,-91,]),'LEFT':([64,65,],[102,102,]),'MOD':([1,4,8,12,13,15,17,19,27,28,29,30,32,33,35,36,38,63,85,91,125,126,147,158,167,172,174,181,183,184,187,198,200,201,202,203,204,205,209,210,212,213,221,222,224,228,233,237,],[37,-8,-16,-17,-11,-113,-13,-19,-10,-12,-7,-18,-15,-112,-14,37,-9,-71,-59,-54,-50,-63,-70,-34,-73,-22,-126,-60,-62,-38,-127,-46,-44,-20,-124,-75,-61,-37,-123,-53,-57,-72,-45,-74,-51,-21,-52,-58,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'figure':([1,36,124,150,173,197,],[3,3,3,3,3,3,]),'continueGo':([209,],[224,]),'color':([78,168,],[114,189,]),'callID':([11,],[52,]),'move':([64,65,],[99,103,]),'module':([1,36,],[4,4,]),'var_cte':([3,21,40,44,50,54,74,75,76,77,80,86,92,93,95,97,99,103,104,127,131,136,137,138,141,153,214,223,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,151,41,41,41,41,41,41,41,41,]),'vars':([171,230,],[192,236,]),'conditionA':([187,],[209,]),'writeA':([21,],[59,]),'array':([1,36,173,197,],[8,8,8,8,]),'id':([1,36,173,197,],[9,9,9,9,]),'gotoE':([211,],[225,]),'matrix':([1,36,173,197,],[12,12,12,12,]),'blockA':([173,],[200,]),'sumXparam':([206,],[223,]),'typeDim':([20,31,],[57,68,]),'gotoFalse':([132,148,],[161,175,]),'write':([1,36,173,197,],[13,13,13,13,]),'program':([0,],[2,]),'moduleA':([146,],[174,]),'factor':([3,21,40,44,50,54,74,75,76,77,80,86,92,93,95,97,99,103,104,131,136,137,138,141,153,214,223,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'pipelineC':([129,],[154,]),'continueGoW':([202,],[222,]),'type':([171,230,],[196,196,]),'repeatB':([150,],[178,]),'empty':([36,45,61,129,150,186,187,197,217,],[69,79,96,155,179,208,210,218,231,]),'pipelineB':([86,153,],[128,182,]),'varsA':([217,],[229,]),'repeat':([1,36,173,197,],[17,17,17,17,]),'exp':([3,21,40,44,50,54,74,75,76,77,80,86,92,93,95,97,99,103,104,131,136,137,138,141,153,214,223,],[44,61,61,78,61,61,109,110,111,112,61,129,134,135,139,140,142,143,144,61,163,164,165,166,129,226,61,]),'repeatA':([124,150,],[149,177,]),'screen':([1,36,173,197,],[19,19,19,19,]),'endMod':([174,],[201,]),'insertEra':([88,],[131,]),'commandA':([22,],[63,]),'gotoW':([6,],[48,]),'gotoR':([49,],[81,]),'programA':([1,],[23,]),'programB':([1,36,],[24,70,]),'programC':([36,],[71,]),'insertQuadMod':([107,],[146,]),'blockB':([173,197,],[199,220,]),'condition':([1,36,173,197,],[27,27,27,27,]),'cycle':([1,36,173,197,],[28,28,28,28,]),'checkParam':([160,],[186,]),'statute':([1,36,173,197,],[29,29,197,197,]),'pipeline':([1,36,173,197,],[30,30,30,30,]),'blockC':([197,],[219,]),'calling':([1,36,173,197,],[32,32,32,32,]),'callingA':([131,],[158,]),'callingB':([131,223,],[159,232,]),'callingC':([186,],[207,]),'command':([1,36,124,150,173,197,],[35,35,150,150,35,35,]),'pipelineA':([51,],[85,]),'workspace':([1,36,],[36,36,]),'sumdim':([67,190,],[104,214,]),'expression':([21,40,50,54,80,131,223,],[62,73,82,89,123,160,160,]),'assign':([1,36,173,197,],[38,38,38,38,]),'block':([146,161,175,216,225,],[172,187,202,228,233,]),'moduleID':([72,],[107,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INIT programA','program',2,'p_program','sample_ly.py',113),
  ('programA -> programB END','programA',2,'p_programA','sample_ly.py',124),
  ('programA -> END','programA',1,'p_programA','sample_ly.py',125),
  ('programB -> workspace programC','programB',2,'p_programB','sample_ly.py',129),
  ('programC -> programB','programC',1,'p_programC','sample_ly.py',133),
  ('programC -> empty','programC',1,'p_programC','sample_ly.py',134),
  ('workspace -> statute','workspace',1,'p_workspace','sample_ly.py',138),
  ('workspace -> module','workspace',1,'p_workspace','sample_ly.py',139),
  ('statute -> assign','statute',1,'p_statute','sample_ly.py',145),
  ('statute -> condition','statute',1,'p_statute','sample_ly.py',146),
  ('statute -> write','statute',1,'p_statute','sample_ly.py',147),
  ('statute -> cycle','statute',1,'p_statute','sample_ly.py',148),
  ('statute -> repeat','statute',1,'p_statute','sample_ly.py',149),
  ('statute -> command','statute',1,'p_statute','sample_ly.py',150),
  ('statute -> calling','statute',1,'p_statute','sample_ly.py',151),
  ('statute -> array','statute',1,'p_statute','sample_ly.py',152),
  ('statute -> matrix','statute',1,'p_statute','sample_ly.py',153),
  ('statute -> pipeline','statute',1,'p_statute','sample_ly.py',154),
  ('statute -> screen','statute',1,'p_statute','sample_ly.py',155),
  ('module -> MOD # moduleID insertQuadMod moduleA endMod','module',6,'p_module','sample_ly.py',160),
  ('moduleA -> ( vars ) block','moduleA',4,'p_moduleA','sample_ly.py',189),
  ('moduleA -> block','moduleA',1,'p_moduleA','sample_ly.py',190),
  ('moduleID -> ID','moduleID',1,'p_moduleID','sample_ly.py',193),
  ('vars -> type ID varsA','vars',3,'p_vars','sample_ly.py',202),
  ('varsA -> , vars','varsA',2,'p_varsA','sample_ly.py',224),
  ('varsA -> empty','varsA',1,'p_varsA','sample_ly.py',225),
  ('type -> INT','type',1,'p_type','sample_ly.py',228),
  ('type -> FLOAT','type',1,'p_type','sample_ly.py',229),
  ('type -> BOOL','type',1,'p_type','sample_ly.py',230),
  ('id -> ID [ sumdim exp ] [ sumdim exp ]','id',9,'p_id','sample_ly.py',236),
  ('id -> ID [ sumdim exp ]','id',5,'p_id','sample_ly.py',237),
  ('id -> ID','id',1,'p_id','sample_ly.py',238),
  ('sumdim -> <empty>','sumdim',0,'p_sumdim','sample_ly.py',247),
  ('calling -> # callID ( insertEra callingA','calling',5,'p_calling','sample_ly.py',251),
  ('callID -> ID','callID',1,'p_callID','sample_ly.py',258),
  ('insertEra -> <empty>','insertEra',0,'p_insertEra','sample_ly.py',265),
  ('callingA -> callingB ) ;','callingA',3,'p_callingA','sample_ly.py',276),
  ('callingA -> ) ;','callingA',2,'p_callingA','sample_ly.py',277),
  ('callingB -> expression checkParam callingC','callingB',3,'p_callingB','sample_ly.py',282),
  ('checkParam -> <empty>','checkParam',0,'p_checkParam','sample_ly.py',285),
  ('callingC -> , sumXparam callingB','callingC',3,'p_callingC','sample_ly.py',298),
  ('callingC -> empty','callingC',1,'p_callingC','sample_ly.py',299),
  ('sumXparam -> <empty>','sumXparam',0,'p_sumXparam','sample_ly.py',302),
  ('block -> { blockA','block',2,'p_block','sample_ly.py',307),
  ('blockA -> blockB }','blockA',2,'p_blockA','sample_ly.py',310),
  ('blockA -> }','blockA',1,'p_blockA','sample_ly.py',311),
  ('blockB -> statute blockC','blockB',2,'p_blockB','sample_ly.py',314),
  ('blockC -> blockB','blockC',1,'p_blockC','sample_ly.py',317),
  ('blockC -> empty','blockC',1,'p_blockC','sample_ly.py',318),
  ('assign -> id = expression ;','assign',4,'p_assign','sample_ly.py',321),
  ('condition -> IF ( expression ) gotoFalse block conditionA continueGo','condition',8,'p_condition','sample_ly.py',351),
  ('conditionA -> ELSE gotoE block','conditionA',3,'p_conditionA','sample_ly.py',354),
  ('conditionA -> empty','conditionA',1,'p_conditionA','sample_ly.py',355),
  ('write -> ECHO writeA ;','write',3,'p_write','sample_ly.py',358),
  ('writeA -> expression','writeA',1,'p_writeA','sample_ly.py',368),
  ('writeA -> CTE_STRING','writeA',1,'p_writeA','sample_ly.py',369),
  ('array -> ARR typeDim ID [ CTE_INTEGER ] ;','array',7,'p_array','sample_ly.py',373),
  ('matrix -> MAT typeDim ID [ CTE_INTEGER ] [ CTE_INTEGER ] ;','matrix',10,'p_matrix','sample_ly.py',396),
  ('pipeline -> PIPE ID pipelineA','pipeline',3,'p_pipeline','sample_ly.py',419),
  ('pipelineA -> [ pipelineB ] ;','pipelineA',4,'p_pipelineA','sample_ly.py',422),
  ('pipelineA -> IN ( var_cte ) ;','pipelineA',5,'p_pipelineA','sample_ly.py',423),
  ('pipelineA -> OUT ( ) ;','pipelineA',4,'p_pipelineA','sample_ly.py',424),
  ('pipelineA -> COUNT ;','pipelineA',2,'p_pipelineA','sample_ly.py',425),
  ('pipelineB -> exp pipelineC','pipelineB',2,'p_pipelineB','sample_ly.py',428),
  ('pipelineC -> , pipelineB','pipelineC',2,'p_pipelineC','sample_ly.py',431),
  ('pipelineC -> empty','pipelineC',1,'p_pipelineC','sample_ly.py',432),
  ('typeDim -> INT','typeDim',1,'p_typeDim','sample_ly.py',435),
  ('typeDim -> FLOAT','typeDim',1,'p_typeDim','sample_ly.py',436),
  ('typeDim -> BOOL','typeDim',1,'p_typeDim','sample_ly.py',437),
  ('command -> figure exp exp color ;','command',5,'p_command','sample_ly.py',441),
  ('command -> SAMPLE commandA','command',2,'p_command','sample_ly.py',442),
  ('commandA -> ON move exp CTE_INTEGER color ;','commandA',6,'p_commandA','sample_ly.py',460),
  ('commandA -> OFF move exp ;','commandA',4,'p_commandA','sample_ly.py',461),
  ('cycle -> WHILE gotoW ( expression ) gotoFalse block continueGoW','cycle',8,'p_cycle','sample_ly.py',472),
  ('repeat -> REPLAY CTE_INTEGER gotoR [ repeatA ] ;','repeat',7,'p_repeat','sample_ly.py',475),
  ('repeatA -> command repeatB','repeatA',2,'p_repeatA','sample_ly.py',487),
  ('repeatB -> repeatA','repeatB',1,'p_repeatB','sample_ly.py',490),
  ('repeatB -> empty','repeatB',1,'p_repeatB','sample_ly.py',491),
  ('expression -> exp = = exp','expression',4,'p_expression','sample_ly.py',494),
  ('expression -> exp < > exp','expression',4,'p_expression','sample_ly.py',495),
  ('expression -> exp < = exp','expression',4,'p_expression','sample_ly.py',496),
  ('expression -> exp > = exp','expression',4,'p_expression','sample_ly.py',497),
  ('expression -> exp > exp','expression',3,'p_expression','sample_ly.py',498),
  ('expression -> exp < exp','expression',3,'p_expression','sample_ly.py',499),
  ('expression -> exp AND exp','expression',3,'p_expression','sample_ly.py',500),
  ('expression -> exp OR exp','expression',3,'p_expression','sample_ly.py',501),
  ('expression -> exp empty','expression',2,'p_expression','sample_ly.py',502),
  ('exp -> exp + exp','exp',3,'p_exp','sample_ly.py',543),
  ('exp -> exp - exp','exp',3,'p_exp','sample_ly.py',544),
  ('exp -> exp * exp','exp',3,'p_exp','sample_ly.py',545),
  ('exp -> exp / exp','exp',3,'p_exp','sample_ly.py',546),
  ('exp -> factor empty','exp',2,'p_exp','sample_ly.py',547),
  ('factor -> ( expression )','factor',3,'p_factor','sample_ly.py',582),
  ('factor -> var_cte','factor',1,'p_factor','sample_ly.py',583),
  ('figure -> OVAL','figure',1,'p_figure','sample_ly.py',590),
  ('figure -> TRIO','figure',1,'p_figure','sample_ly.py',591),
  ('figure -> QUAD','figure',1,'p_figure','sample_ly.py',592),
  ('figure -> ARC','figure',1,'p_figure','sample_ly.py',593),
  ('move -> UP','move',1,'p_move','sample_ly.py',597),
  ('move -> DOWN','move',1,'p_move','sample_ly.py',598),
  ('move -> LEFT','move',1,'p_move','sample_ly.py',599),
  ('move -> RIGHT','move',1,'p_move','sample_ly.py',600),
  ('color -> RED','color',1,'p_color','sample_ly.py',604),
  ('color -> YELLOW','color',1,'p_color','sample_ly.py',605),
  ('color -> BLUE','color',1,'p_color','sample_ly.py',606),
  ('color -> GREEN','color',1,'p_color','sample_ly.py',607),
  ('color -> BLACK','color',1,'p_color','sample_ly.py',608),
  ('color -> WHITE','color',1,'p_color','sample_ly.py',609),
  ('color -> ORANGE','color',1,'p_color','sample_ly.py',610),
  ('color -> PURPLE','color',1,'p_color','sample_ly.py',611),
  ('color -> CYAN','color',1,'p_color','sample_ly.py',612),
  ('screen -> WHERE','screen',1,'p_screen','sample_ly.py',616),
  ('screen -> CLEAR','screen',1,'p_screen','sample_ly.py',617),
  ('var_cte -> ID','var_cte',1,'p_var_cte','sample_ly.py',620),
  ('var_cte -> CTE_INTEGER','var_cte',1,'p_var_cte','sample_ly.py',621),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','sample_ly.py',622),
  ('var_cte -> TRUE','var_cte',1,'p_var_cte','sample_ly.py',623),
  ('var_cte -> FALSE','var_cte',1,'p_var_cte','sample_ly.py',624),
  ('gotoFalse -> <empty>','gotoFalse',0,'p_gotoFalse','sample_ly.py',662),
  ('gotoE -> <empty>','gotoE',0,'p_gotoE','sample_ly.py',672),
  ('gotoW -> <empty>','gotoW',0,'p_gotoW','sample_ly.py',676),
  ('gotoR -> <empty>','gotoR',0,'p_gotoR','sample_ly.py',680),
  ('continueGo -> <empty>','continueGo',0,'p_continueGo','sample_ly.py',691),
  ('continueGoW -> <empty>','continueGoW',0,'p_continueGoW','sample_ly.py',695),
  ('insertQuadMod -> <empty>','insertQuadMod',0,'p_insertQuadMod','sample_ly.py',699),
  ('endMod -> <empty>','endMod',0,'p_endMod','sample_ly.py',704),
  ('empty -> <empty>','empty',0,'p_empty','sample_ly.py',708),
]
