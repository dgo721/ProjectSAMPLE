
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xbb\xc7\xf2\x03\xe6z\x1a^\xb5\xed~\x82\xe4\x87Uw'
    
_lr_action_items = {'RAND':([1,7,8,13,14,17,18,21,23,30,31,32,35,37,38,39,62,89,138,141,154,163,175,177,192,193,194,200,201,205,206,208,209,210,212,214,217,218,219,224,225,234,236,242,243,],[3,-19,-8,-20,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,3,-9,-79,-101,-60,-42,-64,-78,-81,-67,3,-134,-68,-131,-83,3,-56,-54,-130,-63,-80,-73,-28,-133,-82,-55,-61,-26,-62,-74,-27,]),'CYAN':([29,44,45,46,48,49,50,51,70,84,90,109,120,121,122,123,124,135,171,176,196,241,],[-40,-103,-124,-121,-134,-122,-125,-123,-134,-100,130,-39,-102,-96,-98,-97,-99,-38,-43,130,-37,-36,]),'RETURN':([1,7,8,13,14,17,18,21,23,30,31,32,35,37,38,39,62,89,138,141,154,163,175,177,192,193,194,200,201,205,206,208,209,210,212,214,217,218,219,224,225,234,236,242,243,],[4,-19,-8,-20,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,4,-9,-79,-101,-60,-42,-64,-78,-81,-67,4,-134,-68,-131,-83,4,-56,-54,-130,-63,-80,-73,-28,-133,-82,-55,-61,-26,-62,-74,-27,]),'YELLOW':([29,44,45,46,48,49,50,51,70,84,90,109,120,121,122,123,124,135,171,176,196,241,],[-40,-103,-124,-121,-134,-122,-125,-123,-134,-100,129,-39,-102,-96,-98,-97,-99,-38,-43,129,-37,-36,]),'DOWN':([63,64,],[104,104,]),'WHILE':([1,7,8,13,14,17,18,21,23,30,31,32,35,37,38,39,62,89,138,141,154,163,175,177,192,193,194,200,201,205,206,208,209,210,212,214,217,218,219,224,225,234,236,242,243,],[10,-19,-8,-20,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,10,-9,-79,-101,-60,-42,-64,-78,-81,-67,10,-134,-68,-131,-83,10,-56,-54,-130,-63,-80,-73,-28,-133,-82,-55,-61,-26,-62,-74,-27,]),'REPLAY':([1,7,8,13,14,17,18,21,23,30,31,32,35,37,38,39,62,89,138,141,154,163,175,177,192,193,194,200,201,205,206,208,209,210,212,214,217,218,219,224,225,234,236,242,243,],[11,-19,-8,-20,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,11,-9,-79,-101,-60,-42,-64,-78,-81,-67,11,-134,-68,-131,-83,11,-56,-54,-130,-63,-80,-73,-28,-133,-82,-55,-61,-26,-62,-74,-27,]),'GREEN':([29,44,45,46,48,49,50,51,70,84,90,109,120,121,122,123,124,135,171,176,196,241,],[-40,-103,-124,-121,-134,-122,-125,-123,-134,-100,128,-39,-102,-96,-98,-97,-99,-38,-43,128,-37,-36,]),'QUAD':([1,7,8,13,14,17,18,21,23,30,31,32,35,37,38,39,62,89,137,138,141,154,163,166,175,177,192,193,194,200,201,205,206,208,209,210,212,214,217,218,219,224,225,234,236,242,243,],[12,-19,-8,-20,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,12,-9,-79,-101,12,-60,-42,-64,-78,12,-81,-67,12,-134,-68,-131,-83,12,-56,-54,-130,-63,-80,-73,-28,-133,-82,-55,-61,-26,-62,-74,-27,]),'OVAL':([1,7,8,13,14,17,18,21,23,30,31,32,35,37,38,39,62,89,137,138,141,154,163,166,175,177,192,193,194,200,201,205,206,208,209,210,212,214,217,218,219,224,225,234,236,242,243,],[9,-19,-8,-20,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,9,-9,-79,-101,9,-60,-42,-64,-78,9,-81,-67,9,-134,-68,-131,-83,9,-56,-54,-130,-63,-80,-73,-28,-133,-82,-55,-61,-26,-62,-74,-27,]),'OFF':([25,],[63,]),'TRUE':([4,5,9,12,20,29,36,44,45,46,47,48,49,50,51,53,57,60,61,70,84,85,86,87,88,92,95,101,102,103,104,105,106,108,109,114,115,117,119,120,121,122,123,124,135,139,143,149,156,157,159,161,171,196,202,213,220,227,241,],[45,45,-104,-106,-105,-40,-107,-103,-124,-121,45,-134,-122,-125,-123,45,45,45,45,-134,-100,45,45,45,45,45,-46,-111,45,-108,-109,-110,45,-41,-39,45,45,45,45,-102,-96,-98,-97,-99,-38,45,45,45,45,45,45,45,-43,-37,-53,-41,45,45,-36,]),'[':([29,56,70,93,110,111,196,198,],[-40,-129,108,137,150,151,213,215,]),'RED':([29,44,45,46,48,49,50,51,70,84,90,109,120,121,122,123,124,135,171,176,196,241,],[-40,-103,-124,-121,-134,-122,-125,-123,-134,-100,134,-39,-102,-96,-98,-97,-99,-38,-43,134,-37,-36,]),'#':([1,6,7,8,13,14,17,18,21,23,29,30,31,32,35,37,38,39,40,54,62,76,77,78,79,80,89,107,138,141,154,163,175,177,192,193,194,200,201,205,206,208,209,210,212,214,217,218,219,224,225,234,236,242,243,],[16,-40,-19,-8,-20,-17,-18,-12,-14,-11,-45,-10,-13,-7,-16,-15,16,-9,-134,91,-79,112,-21,-22,-23,-24,-101,148,-60,-42,-64,-78,-81,-67,16,-134,-68,-131,-83,16,-56,-54,-130,-63,-80,-73,-28,-133,-82,-55,-61,-26,-62,-74,-27,]),')':([29,44,45,46,48,49,50,51,70,82,83,84,95,97,98,99,100,109,118,120,121,122,123,124,135,136,139,140,144,145,155,158,160,162,167,168,169,170,171,173,182,183,184,185,191,196,203,204,229,235,240,241,244,246,247,],[-40,-103,-124,-121,-134,-122,-125,-123,-134,-134,120,-100,-46,142,-134,-70,-69,-39,-95,-102,-96,-98,-97,-99,-38,164,-134,171,174,-72,-93,-92,-94,-91,-48,-44,-47,-50,-43,-71,-89,-88,-87,-90,-134,-37,-49,-52,239,-51,-134,-36,-30,-32,-31,]),'(':([4,5,9,10,12,19,20,24,29,36,44,45,46,47,48,49,50,51,53,55,57,58,59,60,61,70,84,85,86,87,88,91,92,95,101,102,103,104,105,106,108,109,114,115,117,119,120,121,122,123,124,135,139,143,149,152,153,156,157,159,161,171,181,196,199,202,213,220,227,241,],[47,47,-104,-128,-106,60,-105,61,-40,-107,-103,-124,-121,47,-134,-122,-125,-123,47,92,47,95,-45,47,47,-134,-100,47,47,47,47,95,47,-46,-111,47,-108,-109,-110,47,-41,-39,47,47,47,47,-102,-96,-98,-97,-99,-38,47,47,47,-29,-25,47,47,47,47,-43,-132,-37,216,-53,-41,47,47,-36,]),'+':([29,44,45,46,48,49,50,51,52,53,70,82,84,90,109,120,121,122,123,124,135,146,147,155,158,160,162,170,171,178,182,183,184,185,196,237,241,],[-40,-103,-124,-121,-134,-122,-125,-123,85,85,-134,85,-100,85,-39,-102,-96,-98,-97,-99,-38,85,85,85,85,85,85,85,-43,85,85,85,85,85,-37,85,-36,]),'*':([29,44,45,46,48,49,50,51,52,53,70,82,84,90,109,120,121,122,123,124,135,146,147,155,158,160,162,170,171,178,182,183,184,185,196,237,241,],[-40,-103,-124,-121,-134,-122,-125,-123,86,86,-134,86,-100,86,-39,-102,86,-98,86,-99,-38,86,86,86,86,86,86,86,-43,86,86,86,86,86,-37,86,-36,]),'-':([29,44,45,46,48,49,50,51,52,53,70,82,84,90,109,120,121,122,123,124,135,146,147,155,158,160,162,170,171,178,182,183,184,185,196,237,241,],[-40,-103,-124,-121,-134,-122,-125,-123,87,87,-134,87,-100,87,-39,-102,-96,-98,-97,-99,-38,87,87,87,87,87,87,87,-43,87,87,87,87,87,-37,87,-36,]),',':([29,44,45,46,48,49,50,51,70,82,84,98,99,100,109,118,120,121,122,123,124,135,155,158,160,162,170,171,182,183,184,185,191,196,240,241,],[-40,-103,-124,-121,-134,-122,-125,-123,-134,-134,-100,143,-70,-69,-39,-95,-102,-96,-98,-97,-99,-38,-93,-92,-94,-91,-50,-43,-89,-88,-87,-90,202,-37,245,-36,]),'/':([29,44,45,46,48,49,50,51,52,53,70,82,84,90,109,120,121,122,123,124,135,146,147,155,158,160,162,170,171,178,182,183,184,185,196,237,241,],[-40,-103,-124,-121,-134,-122,-125,-123,88,88,-134,88,-100,88,-39,-102,88,-98,88,-99,-38,88,88,88,88,88,88,88,-43,88,88,88,88,88,-37,88,-36,]),'INIT':([0,],[1,]),'ORANGE':([29,44,45,46,48,49,50,51,70,84,90,109,120,121,122,123,124,135,171,176,196,241,],[-40,-103,-124,-121,-134,-122,-125,-123,-134,-100,131,-39,-102,-96,-98,-97,-99,-38,-43,131,-37,-36,]),';':([29,44,45,46,48,49,50,51,52,70,82,84,94,96,109,113,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,146,148,155,158,160,162,171,174,182,183,184,185,187,195,196,197,238,241,],[-40,-103,-124,-121,-134,-122,-125,-123,89,-134,-134,-100,138,141,-39,154,-95,-102,-96,-98,-97,-99,-114,163,-119,-115,-113,-120,-118,-116,-117,-112,-38,175,177,-93,-92,-94,-91,-43,194,-89,-88,-87,-90,201,212,-37,214,242,-36,]),'=':([15,29,44,45,46,48,49,50,51,70,82,84,109,115,116,119,120,121,122,123,124,135,171,196,241,],[57,-40,-103,-124,-121,-134,-122,-125,-123,-134,116,-100,-39,156,159,161,-102,-96,-98,-97,-99,-38,-43,-37,-36,]),'<':([29,44,45,46,48,49,50,51,70,82,84,109,120,121,122,123,124,135,171,196,241,],[-40,-103,-124,-121,-134,-122,-125,-123,-134,115,-100,-39,-102,-96,-98,-97,-99,-38,-43,-37,-36,]),'$end':([2,22,26,65,],[0,-3,-1,-2,]),'CTE_STRING':([61,143,],[99,99,]),'AND':([29,44,45,46,48,49,50,51,70,82,84,109,120,121,122,123,124,135,171,196,241,],[-40,-103,-124,-121,-134,-122,-125,-123,-134,114,-100,-39,-102,-96,-98,-97,-99,-38,-43,-37,-36,]),'TRIO':([1,7,8,13,14,17,18,21,23,30,31,32,35,37,38,39,62,89,137,138,141,154,163,166,175,177,192,193,194,200,201,205,206,208,209,210,212,214,217,218,219,224,225,234,236,242,243,],[20,-19,-8,-20,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,20,-9,-79,-101,20,-60,-42,-64,-78,20,-81,-67,20,-134,-68,-131,-83,20,-56,-54,-130,-63,-80,-73,-28,-133,-82,-55,-61,-26,-62,-74,-27,]),'END':([1,7,8,13,14,17,18,21,23,27,30,31,32,35,37,38,39,62,73,74,75,89,138,141,154,163,175,177,193,194,200,201,206,208,209,210,212,214,217,218,219,224,225,234,236,242,243,],[22,-19,-8,-20,-17,-18,-12,-14,-11,65,-10,-13,-7,-16,-15,-134,-9,-79,-6,-5,-4,-101,-60,-42,-64,-78,-81,-67,-134,-68,-131,-83,-56,-54,-130,-63,-80,-73,-28,-133,-82,-55,-61,-26,-62,-74,-27,]),'ECHO':([1,7,8,13,14,17,18,21,23,30,31,32,35,37,38,39,62,89,138,141,154,163,175,177,192,193,194,200,201,205,206,208,209,210,212,214,217,218,219,224,225,234,236,242,243,],[24,-19,-8,-20,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,24,-9,-79,-101,-60,-42,-64,-78,-81,-67,24,-134,-68,-131,-83,24,-56,-54,-130,-63,-80,-73,-28,-133,-82,-55,-61,-26,-62,-74,-27,]),'SAMPLE':([1,7,8,13,14,17,18,21,23,30,31,32,35,37,38,39,62,89,137,138,141,154,163,166,175,177,192,193,194,200,201,205,206,208,209,210,212,214,217,218,219,224,225,234,236,242,243,],[25,-19,-8,-20,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,25,-9,-79,-101,25,-60,-42,-64,-78,25,-81,-67,25,-134,-68,-131,-83,25,-56,-54,-130,-63,-80,-73,-28,-133,-82,-55,-61,-26,-62,-74,-27,]),'CTE_INTEGER':([4,5,9,11,12,20,29,36,44,45,46,47,48,49,50,51,53,57,60,61,70,81,84,85,86,87,88,92,95,101,102,103,104,105,106,108,109,114,115,117,119,120,121,122,123,124,135,139,143,147,149,150,151,156,157,159,161,171,196,202,213,215,220,227,241,],[49,49,-104,56,-106,-105,-40,-107,-103,-124,-121,49,-134,-122,-125,-123,49,49,49,49,-134,113,-100,49,49,49,49,49,-46,-111,49,-108,-109,-110,49,-41,-39,49,49,49,49,-102,-96,-98,-97,-99,-38,49,49,176,49,179,180,49,49,49,49,-43,-37,-53,-41,228,49,49,-36,]),'INPUT':([1,7,8,13,14,17,18,21,23,30,31,32,35,37,38,39,62,89,138,141,154,163,175,177,192,193,194,200,201,205,206,208,209,210,212,214,217,218,219,224,225,234,236,242,243,],[28,-19,-8,-20,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,28,-9,-79,-101,-60,-42,-64,-78,-81,-67,28,-134,-68,-131,-83,28,-56,-54,-130,-63,-80,-73,-28,-133,-82,-55,-61,-26,-62,-74,-27,]),'WHITE':([29,44,45,46,48,49,50,51,70,84,90,109,120,121,122,123,124,135,171,176,196,241,],[-40,-103,-124,-121,-134,-122,-125,-123,-134,-100,133,-39,-102,-96,-98,-97,-99,-38,-43,133,-37,-36,]),'ELSE':([193,206,208,224,],[211,-56,-54,-55,]),']':([29,44,45,46,48,49,50,51,62,70,84,109,120,121,122,123,124,135,163,165,166,171,175,178,179,180,188,189,190,196,212,228,237,241,],[-40,-103,-124,-121,-134,-122,-125,-123,-79,-134,-100,-39,-102,-96,-98,-97,-99,-38,-78,187,-134,-43,-81,196,197,198,-85,-84,-86,-37,-80,238,241,-36,]),'ID':([1,4,5,7,8,9,12,13,14,16,17,18,20,21,23,29,30,31,32,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,53,57,60,61,62,66,67,68,69,70,71,72,84,85,86,87,88,89,92,95,101,102,103,104,105,106,108,109,112,114,115,117,119,120,121,122,123,124,135,138,139,141,143,149,154,156,157,159,161,163,171,175,177,192,193,194,196,200,201,202,205,206,208,209,210,212,213,214,217,218,219,220,224,225,227,230,231,232,233,234,236,241,242,243,],[29,29,29,-19,-8,-104,-106,-20,-17,59,-18,-12,-105,-14,-11,-40,-10,-13,-7,-16,-107,-15,29,-9,81,-65,-66,-103,-124,-121,29,-134,-122,-125,-123,29,29,29,29,-79,-75,-76,107,-77,-134,110,111,-100,29,29,29,29,-101,29,-46,-111,29,-108,-109,-110,29,-41,-39,152,29,29,29,29,-102,-96,-98,-97,-99,-38,-60,29,-42,29,29,-64,29,29,29,29,-78,-43,-81,-67,29,-134,-68,-37,-131,-83,-53,29,-56,-54,-130,-63,-80,-41,-73,-28,-133,-82,29,-55,-61,29,-34,-33,-35,240,-26,-62,-36,-74,-27,]),'IF':([1,7,8,13,14,17,18,21,23,30,31,32,35,37,38,39,62,89,138,141,154,163,175,177,192,193,194,200,201,205,206,208,209,210,212,214,217,218,219,224,225,234,236,242,243,],[19,-19,-8,-20,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,19,-9,-79,-101,-60,-42,-64,-78,-81,-67,19,-134,-68,-131,-83,19,-56,-54,-130,-63,-80,-73,-28,-133,-82,-55,-61,-26,-62,-74,-27,]),'BLUE':([29,44,45,46,48,49,50,51,70,84,90,109,120,121,122,123,124,135,171,176,196,241,],[-40,-103,-124,-121,-134,-122,-125,-123,-134,-100,125,-39,-102,-96,-98,-97,-99,-38,-43,125,-37,-36,]),'ON':([25,],[64,]),'ARR':([1,7,8,13,14,17,18,21,23,30,31,32,35,37,38,39,62,89,138,141,154,163,175,177,192,193,194,200,201,205,206,208,209,210,212,214,217,218,219,224,225,234,236,242,243,],[33,-19,-8,-20,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,33,-9,-79,-101,-60,-42,-64,-78,-81,-67,33,-134,-68,-131,-83,33,-56,-54,-130,-63,-80,-73,-28,-133,-82,-55,-61,-26,-62,-74,-27,]),'RIGHT':([63,64,],[101,101,]),'FALSE':([4,5,9,12,20,29,36,44,45,46,47,48,49,50,51,53,57,60,61,70,84,85,86,87,88,92,95,101,102,103,104,105,106,108,109,114,115,117,119,120,121,122,123,124,135,139,143,149,156,157,159,161,171,196,202,213,220,227,241,],[50,50,-104,-106,-105,-40,-107,-103,-124,-121,50,-134,-122,-125,-123,50,50,50,50,-134,-100,50,50,50,50,50,-46,-111,50,-108,-109,-110,50,-41,-39,50,50,50,50,-102,-96,-98,-97,-99,-38,50,50,50,50,50,50,50,-43,-37,-53,-41,50,50,-36,]),'MAT':([1,7,8,13,14,17,18,21,23,30,31,32,35,37,38,39,62,89,138,141,154,163,175,177,192,193,194,200,201,205,206,208,209,210,212,214,217,218,219,224,225,234,236,242,243,],[34,-19,-8,-20,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,34,-9,-79,-101,-60,-42,-64,-78,-81,-67,34,-134,-68,-131,-83,34,-56,-54,-130,-63,-80,-73,-28,-133,-82,-55,-61,-26,-62,-74,-27,]),'INT':([3,28,33,34,40,216,245,],[42,66,66,66,77,231,231,]),'FLOAT':([3,28,33,34,40,216,245,],[43,67,67,67,78,230,230,]),'CTE_FLOAT':([4,5,9,12,20,29,36,44,45,46,47,48,49,50,51,53,57,60,61,70,84,85,86,87,88,92,95,101,102,103,104,105,106,108,109,114,115,117,119,120,121,122,123,124,135,139,143,149,156,157,159,161,171,196,202,213,220,227,241,],[51,51,-104,-106,-105,-40,-107,-103,-124,-121,51,-134,-122,-125,-123,51,51,51,51,-134,-100,51,51,51,51,51,-46,-111,51,-108,-109,-110,51,-41,-39,51,51,51,51,-102,-96,-98,-97,-99,-38,51,51,51,51,51,51,51,-43,-37,-53,-41,51,51,-36,]),'UP':([63,64,],[103,103,]),'PURPLE':([29,44,45,46,48,49,50,51,70,84,90,109,120,121,122,123,124,135,171,176,196,241,],[-40,-103,-124,-121,-134,-122,-125,-123,-134,-100,127,-39,-102,-96,-98,-97,-99,-38,-43,127,-37,-36,]),'ARC':([1,7,8,13,14,17,18,21,23,30,31,32,35,37,38,39,62,89,137,138,141,154,163,166,175,177,192,193,194,200,201,205,206,208,209,210,212,214,217,218,219,224,225,234,236,242,243,],[36,-19,-8,-20,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,36,-9,-79,-101,36,-60,-42,-64,-78,36,-81,-67,36,-134,-68,-131,-83,36,-56,-54,-130,-63,-80,-73,-28,-133,-82,-55,-61,-26,-62,-74,-27,]),'BOOL':([28,33,34,40,216,245,],[69,69,69,79,232,232,]),'BLACK':([29,44,45,46,48,49,50,51,70,84,90,109,120,121,122,123,124,135,171,176,196,241,],[-40,-103,-124,-121,-134,-122,-125,-123,-134,-100,132,-39,-102,-96,-98,-97,-99,-38,-43,132,-37,-36,]),'{':([142,152,153,164,172,181,186,199,211,226,239,],[-126,-29,-25,-126,192,-132,192,192,-127,192,192,]),'>':([29,44,45,46,48,49,50,51,70,82,84,109,115,120,121,122,123,124,135,171,196,241,],[-40,-103,-124,-121,-134,-122,-125,-123,-134,119,-100,-39,157,-102,-96,-98,-97,-99,-38,-43,-37,-36,]),'}':([7,13,14,17,18,21,23,30,31,35,37,39,62,89,138,141,154,163,175,177,192,193,194,200,201,205,206,207,208,209,210,212,214,219,221,222,223,224,225,236,242,],[-19,-20,-17,-18,-12,-14,-11,-10,-13,-16,-15,-9,-79,-101,-60,-42,-64,-78,-81,-67,206,-134,-68,-131,-83,-134,-56,224,-54,-130,-63,-80,-73,-82,-59,-57,-58,-55,-61,-62,-74,]),'OR':([29,44,45,46,48,49,50,51,70,82,84,109,120,121,122,123,124,135,171,196,241,],[-40,-103,-124,-121,-134,-122,-125,-123,-134,117,-100,-39,-102,-96,-98,-97,-99,-38,-43,-37,-36,]),'LEFT':([63,64,],[105,105,]),'MOD':([1,7,8,13,14,17,18,21,23,30,31,32,35,37,38,39,62,89,138,141,154,163,175,177,193,194,200,201,206,208,209,210,212,214,217,218,219,224,225,234,236,242,243,],[40,-19,-8,-20,-17,-18,-12,-14,-11,-10,-13,-7,-16,-15,40,-9,-79,-101,-60,-42,-64,-78,-81,-67,-134,-68,-131,-83,-56,-54,-130,-63,-80,-73,-28,-133,-82,-55,-61,-26,-62,-74,-27,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'calling2':([58,91,],[96,135,]),'figure':([1,38,137,166,192,205,],[5,5,5,5,5,5,]),'continueGo':([209,],[225,]),'color':([90,176,],[126,195,]),'callID':([1,4,5,16,38,47,53,57,60,61,85,86,87,88,92,102,106,114,115,117,119,139,143,149,156,157,159,161,192,205,220,227,],[6,6,6,58,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'random':([1,38,192,205,],[7,7,7,7,]),'module':([1,38,],[8,8,]),'var_cte':([4,5,47,53,57,60,61,85,86,87,88,92,102,106,114,115,117,119,139,143,149,156,157,159,161,220,227,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'moduleA':([199,],[218,]),'gotoE':([211,],[226,]),'continueGoW':([200,],[219,]),'writeA':([61,143,],[98,173,]),'array':([1,38,192,205,],[14,14,14,14,]),'initdim':([6,29,],[54,70,]),'id':([1,4,5,38,47,53,57,60,61,85,86,87,88,92,102,106,114,115,117,119,139,143,149,156,157,159,161,192,205,220,227,],[15,46,46,15,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,15,15,46,46,]),'move':([63,64,],[102,106,]),'writeB':([98,],[144,]),'matrix':([1,38,192,205,],[17,17,17,17,]),'blockA':([192,],[208,]),'sumXparam':([202,],[220,]),'typeDim':([28,33,34,],[68,71,72,]),'gotoFalse':([142,164,],[172,186,]),'write':([1,38,192,205,],[18,18,18,18,]),'program':([0,],[2,]),'maincalling':([95,],[140,]),'factor':([4,5,47,53,57,60,61,85,86,87,88,92,102,106,114,115,117,119,139,143,149,156,157,159,161,220,227,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'blockC':([205,],[222,]),'cycle':([1,38,192,205,],[31,31,31,31,]),'conditionA':([193,],[209,]),'addMod':([153,],[181,]),'empty':([38,40,48,70,82,98,139,166,191,193,205,240,],[73,80,84,109,118,145,167,190,204,210,221,246,]),'varsA':([240,],[244,]),'repeat':([1,38,192,205,],[21,21,21,21,]),'return':([1,38,192,205,],[13,13,13,13,]),'exp':([4,5,47,53,57,60,61,85,86,87,88,92,102,106,114,115,117,119,139,143,149,156,157,159,161,220,227,],[52,53,82,90,82,82,82,121,122,123,124,82,146,147,155,158,160,162,170,82,178,182,183,184,185,170,237,]),'read':([1,38,192,205,],[23,23,23,23,]),'repeatA':([137,166,],[165,188,]),'repeatB':([166,],[189,]),'endMod':([218,],[234,]),'insertEra':([95,],[139,]),'commandA':([25,],[62,]),'gotoW':([10,],[55,]),'gotoR':([56,],[93,]),'programA':([1,],[26,]),'programB':([1,38,],[27,74,]),'programC':([38,],[75,]),'insertQuadMod':([181,],[199,]),'condition':([1,38,192,205,],[30,30,30,30,]),'typeRand':([3,],[41,]),'checkParam':([170,],[191,]),'statute':([1,38,192,205,],[32,32,205,205,]),'typeMod':([40,],[76,]),'type':([216,245,],[233,233,]),'vars':([216,245,],[229,247,]),'calling':([1,38,192,205,],[35,35,35,35,]),'callingA':([139,],[168,]),'callingB':([139,220,],[169,235,]),'callingC':([191,],[203,]),'command':([1,38,137,166,192,205,],[37,37,166,166,37,37,]),'blockB':([192,205,],[207,223,]),'workspace':([1,38,],[38,38,]),'sumdim':([108,213,],[149,227,]),'expression':([47,57,60,61,92,143,],[83,94,97,100,136,100,]),'assign':([1,38,192,205,],[39,39,39,39,]),'block':([172,186,199,226,239,],[193,200,217,236,243,]),'moduleID':([112,],[153,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INIT programA','program',2,'p_program','sample_ly.py',112),
  ('programA -> programB END','programA',2,'p_programA','sample_ly.py',123),
  ('programA -> END','programA',1,'p_programA','sample_ly.py',124),
  ('programB -> workspace programC','programB',2,'p_programB','sample_ly.py',128),
  ('programC -> programB','programC',1,'p_programC','sample_ly.py',132),
  ('programC -> empty','programC',1,'p_programC','sample_ly.py',133),
  ('workspace -> statute','workspace',1,'p_workspace','sample_ly.py',137),
  ('workspace -> module','workspace',1,'p_workspace','sample_ly.py',138),
  ('statute -> assign','statute',1,'p_statute','sample_ly.py',145),
  ('statute -> condition','statute',1,'p_statute','sample_ly.py',146),
  ('statute -> read','statute',1,'p_statute','sample_ly.py',147),
  ('statute -> write','statute',1,'p_statute','sample_ly.py',148),
  ('statute -> cycle','statute',1,'p_statute','sample_ly.py',149),
  ('statute -> repeat','statute',1,'p_statute','sample_ly.py',150),
  ('statute -> command','statute',1,'p_statute','sample_ly.py',151),
  ('statute -> calling','statute',1,'p_statute','sample_ly.py',152),
  ('statute -> array','statute',1,'p_statute','sample_ly.py',153),
  ('statute -> matrix','statute',1,'p_statute','sample_ly.py',154),
  ('statute -> random','statute',1,'p_statute','sample_ly.py',155),
  ('statute -> return','statute',1,'p_statute','sample_ly.py',156),
  ('typeMod -> INT','typeMod',1,'p_typeMod','sample_ly.py',161),
  ('typeMod -> FLOAT','typeMod',1,'p_typeMod','sample_ly.py',162),
  ('typeMod -> BOOL','typeMod',1,'p_typeMod','sample_ly.py',163),
  ('typeMod -> empty','typeMod',1,'p_typeMod','sample_ly.py',164),
  ('addMod -> <empty>','addMod',0,'p_addMod','sample_ly.py',172),
  ('module -> MOD typeMod # moduleID addMod insertQuadMod moduleA endMod','module',8,'p_module','sample_ly.py',182),
  ('moduleA -> ( vars ) block','moduleA',4,'p_moduleA','sample_ly.py',226),
  ('moduleA -> block','moduleA',1,'p_moduleA','sample_ly.py',227),
  ('moduleID -> ID','moduleID',1,'p_moduleID','sample_ly.py',230),
  ('vars -> type ID varsA','vars',3,'p_vars','sample_ly.py',242),
  ('varsA -> , vars','varsA',2,'p_varsA','sample_ly.py',264),
  ('varsA -> empty','varsA',1,'p_varsA','sample_ly.py',265),
  ('type -> INT','type',1,'p_type','sample_ly.py',268),
  ('type -> FLOAT','type',1,'p_type','sample_ly.py',269),
  ('type -> BOOL','type',1,'p_type','sample_ly.py',270),
  ('id -> ID initdim [ sumdim exp ] [ sumdim exp ]','id',10,'p_id','sample_ly.py',276),
  ('id -> ID initdim [ sumdim exp ]','id',6,'p_id','sample_ly.py',277),
  ('id -> callID initdim # calling2','id',4,'p_id','sample_ly.py',278),
  ('id -> ID initdim empty','id',3,'p_id','sample_ly.py',279),
  ('initdim -> <empty>','initdim',0,'p_initdim','sample_ly.py',338),
  ('sumdim -> <empty>','sumdim',0,'p_sumdim','sample_ly.py',345),
  ('calling -> # callID calling2 ;','calling',4,'p_calling','sample_ly.py',362),
  ('calling2 -> ( maincalling )','calling2',3,'p_calling2','sample_ly.py',365),
  ('maincalling -> insertEra callingA','maincalling',2,'p_maincalling','sample_ly.py',373),
  ('callID -> ID','callID',1,'p_callID','sample_ly.py',376),
  ('insertEra -> <empty>','insertEra',0,'p_insertEra','sample_ly.py',384),
  ('callingA -> callingB','callingA',1,'p_callingA','sample_ly.py',394),
  ('callingA -> empty','callingA',1,'p_callingA','sample_ly.py',395),
  ('callingB -> exp checkParam callingC','callingB',3,'p_callingB','sample_ly.py',398),
  ('checkParam -> <empty>','checkParam',0,'p_checkParam','sample_ly.py',401),
  ('callingC -> , sumXparam callingB','callingC',3,'p_callingC','sample_ly.py',415),
  ('callingC -> empty','callingC',1,'p_callingC','sample_ly.py',416),
  ('sumXparam -> <empty>','sumXparam',0,'p_sumXparam','sample_ly.py',419),
  ('block -> { blockA','block',2,'p_block','sample_ly.py',424),
  ('blockA -> blockB }','blockA',2,'p_blockA','sample_ly.py',427),
  ('blockA -> }','blockA',1,'p_blockA','sample_ly.py',428),
  ('blockB -> statute blockC','blockB',2,'p_blockB','sample_ly.py',431),
  ('blockC -> blockB','blockC',1,'p_blockC','sample_ly.py',434),
  ('blockC -> empty','blockC',1,'p_blockC','sample_ly.py',435),
  ('assign -> id = expression ;','assign',4,'p_assign','sample_ly.py',438),
  ('condition -> IF ( expression ) gotoFalse block conditionA continueGo','condition',8,'p_condition','sample_ly.py',471),
  ('conditionA -> ELSE gotoE block','conditionA',3,'p_conditionA','sample_ly.py',474),
  ('conditionA -> empty','conditionA',1,'p_conditionA','sample_ly.py',475),
  ('random -> RAND typeRand ID CTE_INTEGER ;','random',5,'p_random','sample_ly.py',478),
  ('typeRand -> INT','typeRand',1,'p_typeRand','sample_ly.py',492),
  ('typeRand -> FLOAT','typeRand',1,'p_typeRand','sample_ly.py',493),
  ('read -> INPUT typeDim ID # ;','read',5,'p_read','sample_ly.py',497),
  ('write -> ECHO ( writeA writeB ) ;','write',6,'p_write','sample_ly.py',513),
  ('writeA -> expression','writeA',1,'p_writeA','sample_ly.py',516),
  ('writeA -> CTE_STRING','writeA',1,'p_writeA','sample_ly.py',517),
  ('writeB -> , writeA','writeB',2,'p_writeB','sample_ly.py',527),
  ('writeB -> empty','writeB',1,'p_writeB','sample_ly.py',528),
  ('array -> ARR typeDim ID [ CTE_INTEGER ] ;','array',7,'p_array','sample_ly.py',531),
  ('matrix -> MAT typeDim ID [ CTE_INTEGER ] [ CTE_INTEGER ] ;','matrix',10,'p_matrix','sample_ly.py',570),
  ('typeDim -> INT','typeDim',1,'p_typeDim','sample_ly.py',611),
  ('typeDim -> FLOAT','typeDim',1,'p_typeDim','sample_ly.py',612),
  ('typeDim -> BOOL','typeDim',1,'p_typeDim','sample_ly.py',613),
  ('command -> figure exp exp color ;','command',5,'p_command','sample_ly.py',617),
  ('command -> SAMPLE commandA','command',2,'p_command','sample_ly.py',618),
  ('commandA -> ON move exp CTE_INTEGER color ;','commandA',6,'p_commandA','sample_ly.py',636),
  ('commandA -> OFF move exp ;','commandA',4,'p_commandA','sample_ly.py',637),
  ('cycle -> WHILE gotoW ( expression ) gotoFalse block continueGoW','cycle',8,'p_cycle','sample_ly.py',648),
  ('repeat -> REPLAY CTE_INTEGER gotoR [ repeatA ] ;','repeat',7,'p_repeat','sample_ly.py',651),
  ('repeatA -> command repeatB','repeatA',2,'p_repeatA','sample_ly.py',665),
  ('repeatB -> repeatA','repeatB',1,'p_repeatB','sample_ly.py',668),
  ('repeatB -> empty','repeatB',1,'p_repeatB','sample_ly.py',669),
  ('expression -> exp = = exp','expression',4,'p_expression','sample_ly.py',672),
  ('expression -> exp < > exp','expression',4,'p_expression','sample_ly.py',673),
  ('expression -> exp < = exp','expression',4,'p_expression','sample_ly.py',674),
  ('expression -> exp > = exp','expression',4,'p_expression','sample_ly.py',675),
  ('expression -> exp > exp','expression',3,'p_expression','sample_ly.py',676),
  ('expression -> exp < exp','expression',3,'p_expression','sample_ly.py',677),
  ('expression -> exp AND exp','expression',3,'p_expression','sample_ly.py',678),
  ('expression -> exp OR exp','expression',3,'p_expression','sample_ly.py',679),
  ('expression -> exp empty','expression',2,'p_expression','sample_ly.py',680),
  ('exp -> exp + exp','exp',3,'p_exp','sample_ly.py',725),
  ('exp -> exp - exp','exp',3,'p_exp','sample_ly.py',726),
  ('exp -> exp * exp','exp',3,'p_exp','sample_ly.py',727),
  ('exp -> exp / exp','exp',3,'p_exp','sample_ly.py',728),
  ('exp -> factor empty','exp',2,'p_exp','sample_ly.py',729),
  ('return -> RETURN exp ;','return',3,'p_return','sample_ly.py',764),
  ('factor -> ( expression )','factor',3,'p_factor','sample_ly.py',777),
  ('factor -> var_cte','factor',1,'p_factor','sample_ly.py',778),
  ('figure -> OVAL','figure',1,'p_figure','sample_ly.py',786),
  ('figure -> TRIO','figure',1,'p_figure','sample_ly.py',787),
  ('figure -> QUAD','figure',1,'p_figure','sample_ly.py',788),
  ('figure -> ARC','figure',1,'p_figure','sample_ly.py',789),
  ('move -> UP','move',1,'p_move','sample_ly.py',793),
  ('move -> DOWN','move',1,'p_move','sample_ly.py',794),
  ('move -> LEFT','move',1,'p_move','sample_ly.py',795),
  ('move -> RIGHT','move',1,'p_move','sample_ly.py',796),
  ('color -> RED','color',1,'p_color','sample_ly.py',800),
  ('color -> YELLOW','color',1,'p_color','sample_ly.py',801),
  ('color -> BLUE','color',1,'p_color','sample_ly.py',802),
  ('color -> GREEN','color',1,'p_color','sample_ly.py',803),
  ('color -> BLACK','color',1,'p_color','sample_ly.py',804),
  ('color -> WHITE','color',1,'p_color','sample_ly.py',805),
  ('color -> ORANGE','color',1,'p_color','sample_ly.py',806),
  ('color -> PURPLE','color',1,'p_color','sample_ly.py',807),
  ('color -> CYAN','color',1,'p_color','sample_ly.py',808),
  ('var_cte -> id','var_cte',1,'p_var_cte','sample_ly.py',812),
  ('var_cte -> CTE_INTEGER','var_cte',1,'p_var_cte','sample_ly.py',813),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','sample_ly.py',814),
  ('var_cte -> TRUE','var_cte',1,'p_var_cte','sample_ly.py',815),
  ('var_cte -> FALSE','var_cte',1,'p_var_cte','sample_ly.py',816),
  ('gotoFalse -> <empty>','gotoFalse',0,'p_gotoFalse','sample_ly.py',861),
  ('gotoE -> <empty>','gotoE',0,'p_gotoE','sample_ly.py',871),
  ('gotoW -> <empty>','gotoW',0,'p_gotoW','sample_ly.py',875),
  ('gotoR -> <empty>','gotoR',0,'p_gotoR','sample_ly.py',879),
  ('continueGo -> <empty>','continueGo',0,'p_continueGo','sample_ly.py',890),
  ('continueGoW -> <empty>','continueGoW',0,'p_continueGoW','sample_ly.py',894),
  ('insertQuadMod -> <empty>','insertQuadMod',0,'p_insertQuadMod','sample_ly.py',898),
  ('endMod -> <empty>','endMod',0,'p_endMod','sample_ly.py',903),
  ('empty -> <empty>','empty',0,'p_empty','sample_ly.py',908),
]
