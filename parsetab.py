
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'r\xf9\x0b\x8d\xd4\xc3\\"\xbd\xbd\xc6${*\xfe\xbc'
    
_lr_action_items = {'RETURN':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,55,81,128,129,149,161,177,178,179,188,189,190,191,193,194,195,197,199,202,203,205,209,210,219,221,226,227,],[3,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,3,-9,-72,-94,-57,-39,-71,-74,3,-127,-61,-124,-76,3,-53,-51,-123,-60,-73,-66,-26,-126,-75,-52,-58,-24,-59,-67,-25,]),'YELLOW':([25,37,38,39,41,42,43,44,60,76,82,83,109,110,111,112,113,154,162,163,222,],[-127,-96,-117,-114,-127,-115,-118,-116,-37,-93,118,-36,-95,-89,-91,-90,-92,-40,118,-35,-34,]),'DOWN':([56,57,],[96,96,]),'WHILE':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,55,81,128,129,149,161,177,178,179,188,189,190,191,193,194,195,197,199,202,203,205,209,210,219,221,226,227,],[8,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,8,-9,-72,-94,-57,-39,-71,-74,8,-127,-61,-124,-76,8,-53,-51,-123,-60,-73,-66,-26,-126,-75,-52,-58,-24,-59,-67,-25,]),'REPLAY':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,55,81,128,129,149,161,177,178,179,188,189,190,191,193,194,195,197,199,202,203,205,209,210,219,221,226,227,],[9,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,9,-9,-72,-94,-57,-39,-71,-74,9,-127,-61,-124,-76,9,-53,-51,-123,-60,-73,-66,-26,-126,-75,-52,-58,-24,-59,-67,-25,]),'GREEN':([25,37,38,39,41,42,43,44,60,76,82,83,109,110,111,112,113,154,162,163,222,],[-127,-96,-117,-114,-127,-115,-118,-116,-37,-93,117,-36,-95,-89,-91,-90,-92,-40,117,-35,-34,]),'CYAN':([25,37,38,39,41,42,43,44,60,76,82,83,109,110,111,112,113,154,162,163,222,],[-127,-96,-117,-114,-127,-115,-118,-116,-37,-93,119,-36,-95,-89,-91,-90,-92,-40,119,-35,-34,]),'OVAL':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,55,81,127,128,129,149,157,161,177,178,179,188,189,190,191,193,194,195,197,199,202,203,205,209,210,219,221,226,227,],[7,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,7,-9,-72,-94,7,-57,-39,-71,7,-74,7,-127,-61,-124,-76,7,-53,-51,-123,-60,-73,-66,-26,-126,-75,-52,-58,-24,-59,-67,-25,]),'OFF':([21,],[56,]),'TRUE':([3,4,7,17,24,25,32,37,38,39,40,41,42,43,44,46,50,53,54,59,60,76,77,78,79,80,83,84,85,93,94,95,96,97,98,99,103,104,106,108,109,110,111,112,113,124,131,142,143,145,147,154,163,181,185,198,204,222,],[38,38,-97,-98,-99,-127,-100,-96,-117,-114,38,-127,-115,-118,-116,38,38,38,38,-38,-37,-93,38,38,38,38,-36,-43,38,-104,38,-101,-102,-103,38,38,38,38,38,38,-95,-89,-91,-90,-92,38,38,38,38,38,38,-40,-35,-38,-50,38,38,-34,]),'[':([25,49,86,100,101,163,183,],[59,-122,127,137,138,181,200,]),'RED':([25,37,38,39,41,42,43,44,60,76,82,83,109,110,111,112,113,154,162,163,222,],[-127,-96,-117,-114,-127,-115,-118,-116,-37,-93,123,-36,-95,-89,-91,-90,-92,-40,123,-35,-34,]),'#':([1,5,6,10,11,14,15,18,25,26,27,28,31,33,34,35,36,55,69,70,71,72,73,81,128,129,149,161,177,178,179,188,189,190,191,193,194,195,197,199,202,203,205,209,210,219,221,226,227,],[13,47,-8,-18,-16,-17,-11,-13,-42,-10,-12,-7,-15,-14,13,-127,-9,-72,102,-19,-20,-21,-22,-94,-57,-39,-71,-74,13,-127,-61,-124,-76,13,-53,-51,-123,-60,-73,-66,-26,-126,-75,-52,-58,-24,-59,-67,-25,]),')':([25,37,38,39,41,42,43,44,60,74,75,76,83,84,89,90,91,92,107,109,110,111,112,113,124,125,126,132,133,141,144,146,148,150,151,152,153,154,159,163,167,168,169,170,171,186,187,214,220,222,225,228,230,231,],[-127,-96,-117,-114,-127,-115,-118,-116,-37,-127,109,-93,-36,-43,130,-127,-63,-62,-88,-95,-89,-91,-90,-92,-127,154,155,160,-65,-86,-85,-87,-84,-45,-41,-44,-47,-40,-64,-35,-82,-81,-80,-83,-127,-46,-49,224,-48,-34,-127,-28,-30,-29,]),'(':([3,4,7,8,16,17,20,24,25,32,37,38,39,40,41,42,43,44,46,47,48,50,51,52,53,54,59,60,76,77,78,79,80,83,84,85,93,94,95,96,97,98,99,103,104,106,108,109,110,111,112,113,124,131,139,140,142,143,145,147,154,163,166,181,184,185,198,204,222,],[40,40,-97,-121,53,-98,54,-99,-127,-100,-96,-117,-114,40,-127,-115,-118,-116,40,84,85,40,84,-42,40,40,-38,-37,-93,40,40,40,40,-36,-43,40,-104,40,-101,-102,-103,40,40,40,40,40,40,-95,-89,-91,-90,-92,40,40,-27,-23,40,40,40,40,-40,-35,-125,-38,201,-50,40,40,-34,]),'+':([25,37,38,39,41,42,43,44,45,46,60,74,76,82,83,109,110,111,112,113,134,135,136,141,144,146,148,153,154,163,167,168,169,170,212,222,],[-127,-96,-117,-114,-127,-115,-118,-116,77,77,-37,77,-93,77,-36,-95,-89,-91,-90,-92,77,77,77,77,77,77,77,77,-40,-35,77,77,77,77,77,-34,]),'*':([25,37,38,39,41,42,43,44,45,46,60,74,76,82,83,109,110,111,112,113,134,135,136,141,144,146,148,153,154,163,167,168,169,170,212,222,],[-127,-96,-117,-114,-127,-115,-118,-116,78,78,-37,78,-93,78,-36,-95,78,-91,78,-92,78,78,78,78,78,78,78,78,-40,-35,78,78,78,78,78,-34,]),'-':([25,37,38,39,41,42,43,44,45,46,60,74,76,82,83,109,110,111,112,113,134,135,136,141,144,146,148,153,154,163,167,168,169,170,212,222,],[-127,-96,-117,-114,-127,-115,-118,-116,79,79,-37,79,-93,79,-36,-95,-89,-91,-90,-92,79,79,79,79,79,79,79,79,-40,-35,79,79,79,79,79,-34,]),',':([25,37,38,39,41,42,43,44,60,74,76,83,90,91,92,107,109,110,111,112,113,141,144,146,148,153,154,163,167,168,169,170,171,222,225,],[-127,-96,-117,-114,-127,-115,-118,-116,-37,-127,-93,-36,131,-63,-62,-88,-95,-89,-91,-90,-92,-86,-85,-87,-84,-47,-40,-35,-82,-81,-80,-83,185,-34,229,]),'/':([25,37,38,39,41,42,43,44,45,46,60,74,76,82,83,109,110,111,112,113,134,135,136,141,144,146,148,153,154,163,167,168,169,170,212,222,],[-127,-96,-117,-114,-127,-115,-118,-116,80,80,-37,80,-93,80,-36,-95,80,-91,80,-92,80,80,80,80,80,80,80,80,-40,-35,80,80,80,80,80,-34,]),'INIT':([0,],[1,]),'ORANGE':([25,37,38,39,41,42,43,44,60,76,82,83,109,110,111,112,113,154,162,163,222,],[-127,-96,-117,-114,-127,-115,-118,-116,-37,-93,120,-36,-95,-89,-91,-90,-92,-40,120,-35,-34,]),';':([25,37,38,39,41,42,43,44,45,60,74,76,83,87,88,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,134,141,144,146,148,154,160,163,167,168,169,170,173,180,182,222,223,],[-127,-96,-117,-114,-127,-115,-118,-116,81,-37,-127,-93,-36,128,129,-88,-95,-89,-91,-90,-92,-107,149,-112,-108,-106,-113,-111,-109,-110,-105,161,-86,-85,-87,-84,-40,179,-35,-82,-81,-80,-83,189,197,199,-34,226,]),'=':([12,25,37,38,39,41,42,43,44,60,74,76,83,104,105,108,109,110,111,112,113,154,163,222,],[50,-127,-96,-117,-114,-127,-115,-118,-116,-37,105,-93,-36,142,145,147,-95,-89,-91,-90,-92,-40,-35,-34,]),'<':([25,37,38,39,41,42,43,44,60,74,76,83,109,110,111,112,113,154,163,222,],[-127,-96,-117,-114,-127,-115,-118,-116,-37,104,-93,-36,-95,-89,-91,-90,-92,-40,-35,-34,]),'$end':([2,19,22,58,],[0,-3,-1,-2,]),'CTE_STRING':([54,131,],[91,91,]),'AND':([25,37,38,39,41,42,43,44,60,74,76,83,109,110,111,112,113,154,163,222,],[-127,-96,-117,-114,-127,-115,-118,-116,-37,103,-93,-36,-95,-89,-91,-90,-92,-40,-35,-34,]),'TRIO':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,55,81,127,128,129,149,157,161,177,178,179,188,189,190,191,193,194,195,197,199,202,203,205,209,210,219,221,226,227,],[17,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,17,-9,-72,-94,17,-57,-39,-71,17,-74,17,-127,-61,-124,-76,17,-53,-51,-123,-60,-73,-66,-26,-126,-75,-52,-58,-24,-59,-67,-25,]),'END':([1,6,10,11,14,15,18,23,26,27,28,31,33,34,36,55,66,67,68,81,128,129,149,161,178,179,188,189,191,193,194,195,197,199,202,203,205,209,210,219,221,226,227,],[19,-8,-18,-16,-17,-11,-13,58,-10,-12,-7,-15,-14,-127,-9,-72,-6,-5,-4,-94,-57,-39,-71,-74,-127,-61,-124,-76,-53,-51,-123,-60,-73,-66,-26,-126,-75,-52,-58,-24,-59,-67,-25,]),'ECHO':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,55,81,128,129,149,161,177,178,179,188,189,190,191,193,194,195,197,199,202,203,205,209,210,219,221,226,227,],[20,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,20,-9,-72,-94,-57,-39,-71,-74,20,-127,-61,-124,-76,20,-53,-51,-123,-60,-73,-66,-26,-126,-75,-52,-58,-24,-59,-67,-25,]),'SAMPLE':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,55,81,127,128,129,149,157,161,177,178,179,188,189,190,191,193,194,195,197,199,202,203,205,209,210,219,221,226,227,],[21,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,21,-9,-72,-94,21,-57,-39,-71,21,-74,21,-127,-61,-124,-76,21,-53,-51,-123,-60,-73,-66,-26,-126,-75,-52,-58,-24,-59,-67,-25,]),'CTE_INTEGER':([3,4,7,9,17,24,25,32,37,38,39,40,41,42,43,44,46,50,53,54,59,60,76,77,78,79,80,83,84,85,93,94,95,96,97,98,99,103,104,106,108,109,110,111,112,113,124,131,135,137,138,142,143,145,147,154,163,181,185,198,200,204,222,],[42,42,-97,49,-98,-99,-127,-100,-96,-117,-114,42,-127,-115,-118,-116,42,42,42,42,-38,-37,-93,42,42,42,42,-36,-43,42,-104,42,-101,-102,-103,42,42,42,42,42,42,-95,-89,-91,-90,-92,42,42,162,164,165,42,42,42,42,-40,-35,-38,-50,42,213,42,-34,]),'QUAD':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,55,81,127,128,129,149,157,161,177,178,179,188,189,190,191,193,194,195,197,199,202,203,205,209,210,219,221,226,227,],[24,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,24,-9,-72,-94,24,-57,-39,-71,24,-74,24,-127,-61,-124,-76,24,-53,-51,-123,-60,-73,-66,-26,-126,-75,-52,-58,-24,-59,-67,-25,]),'WHITE':([25,37,38,39,41,42,43,44,60,76,82,83,109,110,111,112,113,154,162,163,222,],[-127,-96,-117,-114,-127,-115,-118,-116,-37,-93,122,-36,-95,-89,-91,-90,-92,-40,122,-35,-34,]),'ELSE':([178,191,193,209,],[196,-53,-51,-52,]),']':([25,37,38,39,41,42,43,44,55,60,76,83,109,110,111,112,113,136,149,154,156,157,161,163,164,165,174,175,176,197,212,213,222,],[-127,-96,-117,-114,-127,-115,-118,-116,-72,-37,-93,-36,-95,-89,-91,-90,-92,163,-71,-40,173,-127,-74,-35,182,183,-78,-77,-79,-73,222,223,-34,]),'ID':([1,3,4,6,7,10,11,13,14,15,17,18,24,25,26,27,28,31,32,33,34,36,37,38,39,40,41,42,43,44,46,50,53,54,55,59,60,61,62,63,64,65,76,77,78,79,80,81,83,84,85,93,94,95,96,97,98,99,102,103,104,106,108,109,110,111,112,113,124,128,129,131,142,143,145,147,149,154,161,163,177,178,179,181,185,188,189,190,191,193,194,195,197,198,199,202,203,204,205,209,210,215,216,217,218,219,221,222,226,227,],[25,25,25,-8,-97,-18,-16,52,-17,-11,-98,-13,-99,-127,-10,-12,-7,-15,-100,-14,25,-9,-96,-117,-114,25,-127,-115,-118,-116,25,25,25,25,-72,-38,-37,-68,-69,100,-70,101,-93,25,25,25,25,-94,-36,-43,25,-104,25,-101,-102,-103,25,25,139,25,25,25,25,-95,-89,-91,-90,-92,25,-57,-39,25,25,25,25,25,-71,-40,-74,-35,25,-127,-61,-38,-50,-124,-76,25,-53,-51,-123,-60,-73,25,-66,-26,-126,25,-75,-52,-58,-32,-31,-33,225,-24,-59,-34,-67,-25,]),'IF':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,55,81,128,129,149,161,177,178,179,188,189,190,191,193,194,195,197,199,202,203,205,209,210,219,221,226,227,],[16,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,16,-9,-72,-94,-57,-39,-71,-74,16,-127,-61,-124,-76,16,-53,-51,-123,-60,-73,-66,-26,-126,-75,-52,-58,-24,-59,-67,-25,]),'BLUE':([25,37,38,39,41,42,43,44,60,76,82,83,109,110,111,112,113,154,162,163,222,],[-127,-96,-117,-114,-127,-115,-118,-116,-37,-93,114,-36,-95,-89,-91,-90,-92,-40,114,-35,-34,]),'ON':([21,],[57,]),'ARR':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,55,81,128,129,149,161,177,178,179,188,189,190,191,193,194,195,197,199,202,203,205,209,210,219,221,226,227,],[29,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,29,-9,-72,-94,-57,-39,-71,-74,29,-127,-61,-124,-76,29,-53,-51,-123,-60,-73,-66,-26,-126,-75,-52,-58,-24,-59,-67,-25,]),'RIGHT':([56,57,],[93,93,]),'FALSE':([3,4,7,17,24,25,32,37,38,39,40,41,42,43,44,46,50,53,54,59,60,76,77,78,79,80,83,84,85,93,94,95,96,97,98,99,103,104,106,108,109,110,111,112,113,124,131,142,143,145,147,154,163,181,185,198,204,222,],[43,43,-97,-98,-99,-127,-100,-96,-117,-114,43,-127,-115,-118,-116,43,43,43,43,-38,-37,-93,43,43,43,43,-36,-43,43,-104,43,-101,-102,-103,43,43,43,43,43,43,-95,-89,-91,-90,-92,43,43,43,43,43,43,-40,-35,-38,-50,43,43,-34,]),'MAT':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,55,81,128,129,149,161,177,178,179,188,189,190,191,193,194,195,197,199,202,203,205,209,210,219,221,226,227,],[30,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,30,-9,-72,-94,-57,-39,-71,-74,30,-127,-61,-124,-76,30,-53,-51,-123,-60,-73,-66,-26,-126,-75,-52,-58,-24,-59,-67,-25,]),'INT':([29,30,35,201,229,],[61,61,70,216,216,]),'FLOAT':([29,30,35,201,229,],[62,62,71,215,215,]),'CTE_FLOAT':([3,4,7,17,24,25,32,37,38,39,40,41,42,43,44,46,50,53,54,59,60,76,77,78,79,80,83,84,85,93,94,95,96,97,98,99,103,104,106,108,109,110,111,112,113,124,131,142,143,145,147,154,163,181,185,198,204,222,],[44,44,-97,-98,-99,-127,-100,-96,-117,-114,44,-127,-115,-118,-116,44,44,44,44,-38,-37,-93,44,44,44,44,-36,-43,44,-104,44,-101,-102,-103,44,44,44,44,44,44,-95,-89,-91,-90,-92,44,44,44,44,44,44,-40,-35,-38,-50,44,44,-34,]),'UP':([56,57,],[95,95,]),'PURPLE':([25,37,38,39,41,42,43,44,60,76,82,83,109,110,111,112,113,154,162,163,222,],[-127,-96,-117,-114,-127,-115,-118,-116,-37,-93,116,-36,-95,-89,-91,-90,-92,-40,116,-35,-34,]),'ARC':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,55,81,127,128,129,149,157,161,177,178,179,188,189,190,191,193,194,195,197,199,202,203,205,209,210,219,221,226,227,],[32,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,32,-9,-72,-94,32,-57,-39,-71,32,-74,32,-127,-61,-124,-76,32,-53,-51,-123,-60,-73,-66,-26,-126,-75,-52,-58,-24,-59,-67,-25,]),'BOOL':([29,30,35,201,229,],[64,64,72,217,217,]),'BLACK':([25,37,38,39,41,42,43,44,60,76,82,83,109,110,111,112,113,154,162,163,222,],[-127,-96,-117,-114,-127,-115,-118,-116,-37,-93,121,-36,-95,-89,-91,-90,-92,-40,121,-35,-34,]),'{':([130,139,140,155,158,166,172,184,196,211,224,],[-119,-27,-23,-119,177,-125,177,177,-120,177,177,]),'>':([25,37,38,39,41,42,43,44,60,74,76,83,104,109,110,111,112,113,154,163,222,],[-127,-96,-117,-114,-127,-115,-118,-116,-37,108,-93,-36,143,-95,-89,-91,-90,-92,-40,-35,-34,]),'}':([10,11,14,15,18,26,27,31,33,36,55,81,128,129,149,161,177,178,179,188,189,190,191,192,193,194,195,197,199,205,206,207,208,209,210,221,226,],[-18,-16,-17,-11,-13,-10,-12,-15,-14,-9,-72,-94,-57,-39,-71,-74,191,-127,-61,-124,-76,-127,-53,209,-51,-123,-60,-73,-66,-75,-56,-54,-55,-52,-58,-59,-67,]),'OR':([25,37,38,39,41,42,43,44,60,74,76,83,109,110,111,112,113,154,163,222,],[-127,-96,-117,-114,-127,-115,-118,-116,-37,106,-93,-36,-95,-89,-91,-90,-92,-40,-35,-34,]),'LEFT':([56,57,],[97,97,]),'MOD':([1,6,10,11,14,15,18,26,27,28,31,33,34,36,55,81,128,129,149,161,178,179,188,189,191,193,194,195,197,199,202,203,205,209,210,219,221,226,227,],[35,-8,-18,-16,-17,-11,-13,-10,-12,-7,-15,-14,35,-9,-72,-94,-57,-39,-71,-74,-127,-61,-124,-76,-53,-51,-123,-60,-73,-66,-26,-126,-75,-52,-58,-24,-59,-67,-25,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'calling2':([47,51,],[83,88,]),'figure':([1,34,127,157,177,190,],[4,4,4,4,4,4,]),'continueGo':([194,],[210,]),'color':([82,162,],[115,180,]),'callID':([1,3,4,13,34,40,46,50,53,54,77,78,79,80,85,94,98,99,103,104,106,108,124,131,142,143,145,147,177,190,198,204,],[5,5,5,51,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'move':([56,57,],[94,98,]),'module':([1,34,],[6,6,]),'var_cte':([3,4,40,46,50,53,54,77,78,79,80,85,94,98,99,103,104,106,108,124,131,142,143,145,147,198,204,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'gotoE':([196,],[211,]),'writeA':([54,131,],[90,159,]),'array':([1,34,177,190,],[11,11,11,11,]),'writeB':([90,],[132,]),'id':([1,3,4,34,40,46,50,53,54,77,78,79,80,85,94,98,99,103,104,106,108,124,131,142,143,145,147,177,190,198,204,],[12,39,39,12,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,12,12,39,39,]),'matrix':([1,34,177,190,],[14,14,14,14,]),'blockA':([177,],[193,]),'sumXparam':([185,],[204,]),'typeDim':([29,30,],[63,65,]),'gotoFalse':([130,155,],[158,172,]),'write':([1,34,177,190,],[15,15,15,15,]),'program':([0,],[2,]),'maincalling':([84,],[125,]),'factor':([3,4,40,46,50,53,54,77,78,79,80,85,94,98,99,103,104,106,108,124,131,142,143,145,147,198,204,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'blockC':([190,],[207,]),'continueGoW':([188,],[205,]),'conditionA':([178,],[194,]),'addMod':([140,],[166,]),'empty':([25,34,35,41,74,90,124,157,171,178,190,225,],[60,66,73,76,107,133,150,176,187,195,206,230,]),'varsA':([225,],[228,]),'repeat':([1,34,177,190,],[18,18,18,18,]),'return':([1,34,177,190,],[10,10,10,10,]),'workspace':([1,34,],[34,34,]),'moduleA':([184,],[203,]),'repeatA':([127,157,],[156,174,]),'repeatB':([157,],[175,]),'endMod':([203,],[219,]),'insertEra':([84,],[124,]),'commandA':([21,],[55,]),'gotoW':([8,],[48,]),'gotoR':([49,],[86,]),'programA':([1,],[22,]),'programB':([1,34,],[23,67,]),'programC':([34,],[68,]),'insertQuadMod':([166,],[184,]),'condition':([1,34,177,190,],[26,26,26,26,]),'cycle':([1,34,177,190,],[27,27,27,27,]),'checkParam':([153,],[171,]),'statute':([1,34,177,190,],[28,28,190,190,]),'typeMod':([35,],[69,]),'type':([201,229,],[218,218,]),'vars':([201,229,],[214,231,]),'calling':([1,34,177,190,],[31,31,31,31,]),'callingA':([124,],[151,]),'callingB':([124,204,],[152,220,]),'callingC':([171,],[186,]),'command':([1,34,127,157,177,190,],[33,33,157,157,33,33,]),'blockB':([177,190,],[192,208,]),'exp':([3,4,40,46,50,53,54,77,78,79,80,85,94,98,99,103,104,106,108,124,131,142,143,145,147,198,204,],[45,46,74,82,74,74,74,110,111,112,113,74,134,135,136,141,144,146,148,153,74,167,168,169,170,212,153,]),'sumdim':([59,181,],[99,198,]),'expression':([40,50,53,54,85,131,],[75,87,89,92,126,92,]),'assign':([1,34,177,190,],[36,36,36,36,]),'block':([158,172,184,211,224,],[178,188,202,221,227,]),'moduleID':([102,],[140,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INIT programA','program',2,'p_program','sample_ly.py',108),
  ('programA -> programB END','programA',2,'p_programA','sample_ly.py',119),
  ('programA -> END','programA',1,'p_programA','sample_ly.py',120),
  ('programB -> workspace programC','programB',2,'p_programB','sample_ly.py',124),
  ('programC -> programB','programC',1,'p_programC','sample_ly.py',128),
  ('programC -> empty','programC',1,'p_programC','sample_ly.py',129),
  ('workspace -> statute','workspace',1,'p_workspace','sample_ly.py',133),
  ('workspace -> module','workspace',1,'p_workspace','sample_ly.py',134),
  ('statute -> assign','statute',1,'p_statute','sample_ly.py',141),
  ('statute -> condition','statute',1,'p_statute','sample_ly.py',142),
  ('statute -> write','statute',1,'p_statute','sample_ly.py',143),
  ('statute -> cycle','statute',1,'p_statute','sample_ly.py',144),
  ('statute -> repeat','statute',1,'p_statute','sample_ly.py',145),
  ('statute -> command','statute',1,'p_statute','sample_ly.py',146),
  ('statute -> calling','statute',1,'p_statute','sample_ly.py',147),
  ('statute -> array','statute',1,'p_statute','sample_ly.py',148),
  ('statute -> matrix','statute',1,'p_statute','sample_ly.py',149),
  ('statute -> return','statute',1,'p_statute','sample_ly.py',150),
  ('typeMod -> INT','typeMod',1,'p_typeMod','sample_ly.py',155),
  ('typeMod -> FLOAT','typeMod',1,'p_typeMod','sample_ly.py',156),
  ('typeMod -> BOOL','typeMod',1,'p_typeMod','sample_ly.py',157),
  ('typeMod -> empty','typeMod',1,'p_typeMod','sample_ly.py',158),
  ('addMod -> <empty>','addMod',0,'p_addMod','sample_ly.py',166),
  ('module -> MOD typeMod # moduleID addMod insertQuadMod moduleA endMod','module',8,'p_module','sample_ly.py',176),
  ('moduleA -> ( vars ) block','moduleA',4,'p_moduleA','sample_ly.py',220),
  ('moduleA -> block','moduleA',1,'p_moduleA','sample_ly.py',221),
  ('moduleID -> ID','moduleID',1,'p_moduleID','sample_ly.py',224),
  ('vars -> type ID varsA','vars',3,'p_vars','sample_ly.py',236),
  ('varsA -> , vars','varsA',2,'p_varsA','sample_ly.py',258),
  ('varsA -> empty','varsA',1,'p_varsA','sample_ly.py',259),
  ('type -> INT','type',1,'p_type','sample_ly.py',262),
  ('type -> FLOAT','type',1,'p_type','sample_ly.py',263),
  ('type -> BOOL','type',1,'p_type','sample_ly.py',264),
  ('id -> ID [ sumdim exp ] [ sumdim exp ]','id',9,'p_id','sample_ly.py',270),
  ('id -> ID [ sumdim exp ]','id',5,'p_id','sample_ly.py',271),
  ('id -> callID # calling2','id',3,'p_id','sample_ly.py',272),
  ('id -> ID empty','id',2,'p_id','sample_ly.py',273),
  ('sumdim -> <empty>','sumdim',0,'p_sumdim','sample_ly.py',327),
  ('calling -> # callID calling2 ;','calling',4,'p_calling','sample_ly.py',332),
  ('calling2 -> ( maincalling )','calling2',3,'p_calling2','sample_ly.py',335),
  ('maincalling -> insertEra callingA','maincalling',2,'p_maincalling','sample_ly.py',343),
  ('callID -> ID','callID',1,'p_callID','sample_ly.py',346),
  ('insertEra -> <empty>','insertEra',0,'p_insertEra','sample_ly.py',354),
  ('callingA -> callingB','callingA',1,'p_callingA','sample_ly.py',364),
  ('callingA -> empty','callingA',1,'p_callingA','sample_ly.py',365),
  ('callingB -> exp checkParam callingC','callingB',3,'p_callingB','sample_ly.py',368),
  ('checkParam -> <empty>','checkParam',0,'p_checkParam','sample_ly.py',371),
  ('callingC -> , sumXparam callingB','callingC',3,'p_callingC','sample_ly.py',385),
  ('callingC -> empty','callingC',1,'p_callingC','sample_ly.py',386),
  ('sumXparam -> <empty>','sumXparam',0,'p_sumXparam','sample_ly.py',389),
  ('block -> { blockA','block',2,'p_block','sample_ly.py',394),
  ('blockA -> blockB }','blockA',2,'p_blockA','sample_ly.py',397),
  ('blockA -> }','blockA',1,'p_blockA','sample_ly.py',398),
  ('blockB -> statute blockC','blockB',2,'p_blockB','sample_ly.py',401),
  ('blockC -> blockB','blockC',1,'p_blockC','sample_ly.py',404),
  ('blockC -> empty','blockC',1,'p_blockC','sample_ly.py',405),
  ('assign -> id = expression ;','assign',4,'p_assign','sample_ly.py',408),
  ('condition -> IF ( expression ) gotoFalse block conditionA continueGo','condition',8,'p_condition','sample_ly.py',441),
  ('conditionA -> ELSE gotoE block','conditionA',3,'p_conditionA','sample_ly.py',444),
  ('conditionA -> empty','conditionA',1,'p_conditionA','sample_ly.py',445),
  ('write -> ECHO ( writeA writeB ) ;','write',6,'p_write','sample_ly.py',448),
  ('writeA -> expression','writeA',1,'p_writeA','sample_ly.py',451),
  ('writeA -> CTE_STRING','writeA',1,'p_writeA','sample_ly.py',452),
  ('writeB -> , writeA','writeB',2,'p_writeB','sample_ly.py',462),
  ('writeB -> empty','writeB',1,'p_writeB','sample_ly.py',463),
  ('array -> ARR typeDim ID [ CTE_INTEGER ] ;','array',7,'p_array','sample_ly.py',466),
  ('matrix -> MAT typeDim ID [ CTE_INTEGER ] [ CTE_INTEGER ] ;','matrix',10,'p_matrix','sample_ly.py',505),
  ('typeDim -> INT','typeDim',1,'p_typeDim','sample_ly.py',546),
  ('typeDim -> FLOAT','typeDim',1,'p_typeDim','sample_ly.py',547),
  ('typeDim -> BOOL','typeDim',1,'p_typeDim','sample_ly.py',548),
  ('command -> figure exp exp color ;','command',5,'p_command','sample_ly.py',552),
  ('command -> SAMPLE commandA','command',2,'p_command','sample_ly.py',553),
  ('commandA -> ON move exp CTE_INTEGER color ;','commandA',6,'p_commandA','sample_ly.py',571),
  ('commandA -> OFF move exp ;','commandA',4,'p_commandA','sample_ly.py',572),
  ('cycle -> WHILE gotoW ( expression ) gotoFalse block continueGoW','cycle',8,'p_cycle','sample_ly.py',583),
  ('repeat -> REPLAY CTE_INTEGER gotoR [ repeatA ] ;','repeat',7,'p_repeat','sample_ly.py',586),
  ('repeatA -> command repeatB','repeatA',2,'p_repeatA','sample_ly.py',598),
  ('repeatB -> repeatA','repeatB',1,'p_repeatB','sample_ly.py',601),
  ('repeatB -> empty','repeatB',1,'p_repeatB','sample_ly.py',602),
  ('expression -> exp = = exp','expression',4,'p_expression','sample_ly.py',605),
  ('expression -> exp < > exp','expression',4,'p_expression','sample_ly.py',606),
  ('expression -> exp < = exp','expression',4,'p_expression','sample_ly.py',607),
  ('expression -> exp > = exp','expression',4,'p_expression','sample_ly.py',608),
  ('expression -> exp > exp','expression',3,'p_expression','sample_ly.py',609),
  ('expression -> exp < exp','expression',3,'p_expression','sample_ly.py',610),
  ('expression -> exp AND exp','expression',3,'p_expression','sample_ly.py',611),
  ('expression -> exp OR exp','expression',3,'p_expression','sample_ly.py',612),
  ('expression -> exp empty','expression',2,'p_expression','sample_ly.py',613),
  ('exp -> exp + exp','exp',3,'p_exp','sample_ly.py',658),
  ('exp -> exp - exp','exp',3,'p_exp','sample_ly.py',659),
  ('exp -> exp * exp','exp',3,'p_exp','sample_ly.py',660),
  ('exp -> exp / exp','exp',3,'p_exp','sample_ly.py',661),
  ('exp -> factor empty','exp',2,'p_exp','sample_ly.py',662),
  ('return -> RETURN exp ;','return',3,'p_return','sample_ly.py',697),
  ('factor -> ( expression )','factor',3,'p_factor','sample_ly.py',710),
  ('factor -> var_cte','factor',1,'p_factor','sample_ly.py',711),
  ('figure -> OVAL','figure',1,'p_figure','sample_ly.py',719),
  ('figure -> TRIO','figure',1,'p_figure','sample_ly.py',720),
  ('figure -> QUAD','figure',1,'p_figure','sample_ly.py',721),
  ('figure -> ARC','figure',1,'p_figure','sample_ly.py',722),
  ('move -> UP','move',1,'p_move','sample_ly.py',726),
  ('move -> DOWN','move',1,'p_move','sample_ly.py',727),
  ('move -> LEFT','move',1,'p_move','sample_ly.py',728),
  ('move -> RIGHT','move',1,'p_move','sample_ly.py',729),
  ('color -> RED','color',1,'p_color','sample_ly.py',733),
  ('color -> YELLOW','color',1,'p_color','sample_ly.py',734),
  ('color -> BLUE','color',1,'p_color','sample_ly.py',735),
  ('color -> GREEN','color',1,'p_color','sample_ly.py',736),
  ('color -> BLACK','color',1,'p_color','sample_ly.py',737),
  ('color -> WHITE','color',1,'p_color','sample_ly.py',738),
  ('color -> ORANGE','color',1,'p_color','sample_ly.py',739),
  ('color -> PURPLE','color',1,'p_color','sample_ly.py',740),
  ('color -> CYAN','color',1,'p_color','sample_ly.py',741),
  ('var_cte -> id','var_cte',1,'p_var_cte','sample_ly.py',745),
  ('var_cte -> CTE_INTEGER','var_cte',1,'p_var_cte','sample_ly.py',746),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','sample_ly.py',747),
  ('var_cte -> TRUE','var_cte',1,'p_var_cte','sample_ly.py',748),
  ('var_cte -> FALSE','var_cte',1,'p_var_cte','sample_ly.py',749),
  ('gotoFalse -> <empty>','gotoFalse',0,'p_gotoFalse','sample_ly.py',794),
  ('gotoE -> <empty>','gotoE',0,'p_gotoE','sample_ly.py',804),
  ('gotoW -> <empty>','gotoW',0,'p_gotoW','sample_ly.py',808),
  ('gotoR -> <empty>','gotoR',0,'p_gotoR','sample_ly.py',812),
  ('continueGo -> <empty>','continueGo',0,'p_continueGo','sample_ly.py',823),
  ('continueGoW -> <empty>','continueGoW',0,'p_continueGoW','sample_ly.py',827),
  ('insertQuadMod -> <empty>','insertQuadMod',0,'p_insertQuadMod','sample_ly.py',831),
  ('endMod -> <empty>','endMod',0,'p_endMod','sample_ly.py',836),
  ('empty -> <empty>','empty',0,'p_empty','sample_ly.py',841),
]
